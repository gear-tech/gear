[package]
name = "gear-authorship"
version = "0.1.0"
authors.workspace = true
description = "Gear Node"
edition.workspace = true
license.workspace = true
homepage = "https://gear-tech.io"
repository = "https://github.com/gear-tech/gear"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
codec = { workspace = true, features = ["derive"] }
futures.workspace = true
futures-timer.workspace = true
log.workspace = true

# Gear
runtime-primitives = { workspace = true, features = ["std"] }
common = { workspace = true, features = ["std"] }
pallet-gear-rpc-runtime-api = { workspace = true, features = ["std"] }

# Substrate Client
sc-block-builder.workspace = true
sc-telemetry.workspace = true
sc-transaction-pool.workspace = true
sc-transaction-pool-api.workspace = true
sc-client-api.workspace = true
sc-proposer-metrics.workspace = true

# Substrate Primitives
sp-core = { workspace = true, features = ["std"] }
sp-api = { workspace = true, features = ["std"] }
sp-consensus.workspace = true
sp-runtime = { workspace = true, features = ["std"] }
sp-blockchain.workspace = true
sp-inherents = { workspace = true, features = ["std"] }

# Substrate Other
frame-system = { workspace = true, features = ["std"] }
prometheus-endpoint.workspace = true

[dev-dependencies]
sc-transaction-pool.workspace = true
frame-support = { workspace = true, features = ["std"] }
sp-io = { workspace = true, features = ["std"] }
sp-std = { workspace = true, features = ["std"] }
sp-timestamp = { workspace = true, features = ["std"] }
sp-consensus-babe = { workspace = true, features = ["std"] }
sp-state-machine = { workspace = true, features = ["std"] }
pallet-sudo  = { workspace = true, features = ["std"] }
pallet-timestamp = { workspace = true, features = ["std"] }
pallet-gear = { workspace = true, features = ["std"] }
pallet-gear-messenger  = { workspace = true, features = ["std"] }
testing.workspace = true
vara-runtime  = { workspace = true, features = ["std"] }
demo-mul-by-const.workspace = true
env_logger.workspace = true
