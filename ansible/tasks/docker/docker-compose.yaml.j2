version: '3'
services:
  gear:
    ports:
      - "30333:30333"
      - "9933:9933"
      - "9944:9944"
      - "9615:9615"
    image: "{{ gear_image_tag }}"
{% if rpc is defined %}
    environment:
      - RUST_LOG=gear=trace
{% endif %}
    volumes:
      - "/home/ec2-user/gear-data/:/gear/"
    command: >
      gear --base-path /gear/ --chain /gear/staging.json --telemetry-url 'ws://telemetry-backend-shard.gear-tech.io:32001/submit 0' --prometheus-external
      {% if name is defined %} --name={{ name }} {% endif %}
      {% if rpc is not defined %} --validator --reserved-only --reserved-nodes  "/dns4/testnet-validator-node1.gear-tech.io/tcp/30333/p2p/12D3KooWFqktBAWLLvdySqG5QMcxHnpsDi8vjR9rjCxHotXyXn5R" "/dns4/testnet-validator-node2.gear-tech.io/tcp/30333/p2p/12D3KooWN2Rv9aLGqJ1RohQ9HoYe1nf88Np1M56SZvyWi8rGon36" "/dns4/testnet-validator-node3.gear-tech.io/tcp/30333/p2p/12D3KooWEVvqVD2mrLfmgeX1EXZ2caFXXEWWEs4Taa4mWzFUoF34" "/dns4/testnet-validator-node4.gear-tech.io/tcp/30333/p2p/12D3KooWSf2d69w7RYKtj9mgYpLDs3rqLAz9GHNSHHoCQDLUjeiP" "/dns4/archive-node.gear-tech.io/tcp/30333/p2p/12D3KooWPGsnkQUZfGXT6GRhnRnDrahtvYnfZhcLjoJn1aSaLxa4" "/dns4/rpc-node.gear-tech.io/tcp/30333/p2p/12D3KooW9rJTnQff6Jm2sfLzt2ConSzGJNTPhLE4cWXPgiVx6Ete" {% endif %}
      {% if rpc is defined and unsafe == "yes" %} --unsafe-ws-external --ws-max-connections='1000' --unsafe-rpc-external {% endif %}
      {% if rpc is defined and unsafe == "no" and archive_node == "yes" %} --ws-external --rpc-external --pruning archive {% endif %}
      {% if rpc is defined %} --rpc-methods Unsafe --rpc-cors all {% endif %}
      {% if archive_node is defined and archive_node == "yes" and validator is defined and validator == "yes" %} --unsafe-ws-external --rpc-cors all --rpc-methods Unsafe {% endif %}

{% if loki is defined and loki == "yes" and loki_url is defined %}
    logging:
      driver: loki
      options:
        loki-pipeline-stages: |
          - regex:
              expression: '(?P<error>(?i)error.*)'
          - labels:
              error:
          - regex:
              expression: '(.*Prepared block for proposing at [^ ]+ \((?P<block_time>\d+) ms\) \[hash: (?P<block_hash>[^;]+);.*)'
          - labels:
              block_time:
              block_hash:
          - regex:
              expression: '(.*Local node identity is: (?P<node_id>(.*)))'
          - labels:
              node_id:
{% endif %}
volumes:
  gear-data:
