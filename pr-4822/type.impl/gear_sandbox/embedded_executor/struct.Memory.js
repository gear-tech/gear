(function() {
    var type_impls = Object.fromEntries([["gear_core_backend",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Memory\" class=\"impl\"><a href=\"#impl-Clone-for-Memory\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Memory</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Memory</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#209\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","gear_core_backend::memory::ExecutorMemory"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SandboxMemory%3CT%3E-for-Memory\" class=\"impl\"><a href=\"#impl-SandboxMemory%3CT%3E-for-Memory\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; SandboxMemory&lt;T&gt; for Memory</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method trait-impl\"><a href=\"#method.new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new</a>(\n    store: &amp;mut Store&lt;T&gt;,\n    initial: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>,\n    maximum: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Memory, Error&gt;</h4></section></summary><div class='docblock'>Construct a new linear memory instance. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">read</a>&lt;Context&gt;(\n    &amp;self,\n    ctx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Context</a>,\n    ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>,\n    buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    Context: AsContextExt&lt;State = T&gt;,</div></h4></section></summary><div class='docblock'>Read a memory area at the address <code>ptr</code> with the size of the provided slice <code>buf</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">write</a>&lt;Context&gt;(\n    &amp;self,\n    ctx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Context</a>,\n    ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>,\n    value: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    Context: AsContextExt&lt;State = T&gt;,</div></h4></section></summary><div class='docblock'>Write a memory area at the address <code>ptr</code> with contents of the provided slice <code>buf</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.grow\" class=\"method trait-impl\"><a href=\"#method.grow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">grow</a>&lt;Context&gt;(&amp;self, ctx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Context</a>, pages: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>, Error&gt;<div class=\"where\">where\n    Context: AsContextExt&lt;State = T&gt;,</div></h4></section></summary><div class='docblock'>Grow memory with provided number of pages. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.size\" class=\"method trait-impl\"><a href=\"#method.size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size</a>&lt;Context&gt;(&amp;self, ctx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Context</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a><div class=\"where\">where\n    Context: AsContextExt&lt;State = T&gt;,</div></h4></section></summary><div class='docblock'>Returns current memory size. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_buff\" class=\"method trait-impl\"><a href=\"#method.get_buff\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">get_buff</a>&lt;Context&gt;(&amp;self, _ctx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Context</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a><div class=\"where\">where\n    Context: AsContextExt&lt;State = T&gt;,</div></h4></section></summary><div class='docblock'>Returns pointer to the begin of wasm mem buffer <a>Read more</a></div></details></div></details>","SandboxMemory<T>","gear_core_backend::memory::ExecutorMemory"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[7573]}