(function() {
    var type_impls = Object.fromEntries([["gear_common",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#186\">Source</a><a href=\"#impl-Clone-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#186\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#209\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#188\">Source</a><a href=\"#impl-Debug-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#188\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#189\">Source</a><a href=\"#impl-Decode-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; Decode for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#189\">Source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;__CodecInputEdqy&gt;(\n    __codec_input_edqy: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __CodecInputEdqy</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;, Error&gt;<div class=\"where\">where\n    __CodecInputEdqy: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#197\">Source</a><a href=\"#impl-Default-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#197\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#200\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#200\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(\n    __deserializer: __D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;, &lt;__D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#190\">Source</a><a href=\"#impl-Encode-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; Encode for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#201\">Source</a><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#201\">Source</a><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;__CodecOutputEdqy&gt;(\n    &amp;self,\n    __codec_dest_edqy: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __CodecOutputEdqy</a>,\n)<div class=\"where\">where\n    __CodecOutputEdqy: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#201\">Source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#201\">Source</a><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;__CodecOutputReturn, __CodecUsingEncodedCallback&gt;(\n    &amp;self,\n    f: __CodecUsingEncodedCallback,\n) -&gt; __CodecOutputReturn<div class=\"where\">where\n    __CodecUsingEncodedCallback: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; __CodecOutputReturn,</div></h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu16%3E-for-Page%3Cgear_core::::pages::GearPage::%7Bconstant%230%7D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#338\">Source</a><a href=\"#impl-From%3Cu16%3E-for-Page%3Cgear_core::::pages::GearPage::%7Bconstant%230%7D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;gear_core::::pages::GearPage::{constant#0}&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#339\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;gear_core::::pages::GearPage::{constant#0}&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u16>","gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cu16%3E-for-Page%3Cgear_core::::pages::WasmPage::%7Bconstant%230%7D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#324\">Source</a><a href=\"#impl-From%3Cu16%3E-for-Page%3Cgear_core::::pages::WasmPage::%7Bconstant%230%7D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;gear_core::::pages::WasmPage::{constant#0}&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#325\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;gear_core::::pages::WasmPage::{constant#0}&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<u16>","gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#195\">Source</a><a href=\"#impl-Hash-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#195\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerBounded-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#296\">Source</a><a href=\"#impl-LowerBounded-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.LowerBounded.html\" title=\"trait num_traits::bounds::LowerBounded\">LowerBounded</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#297\">Source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.LowerBounded.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h4></section></summary><div class='docblock'>Returns the smallest finite number this type can represent</div></details></div></details>","LowerBounded","gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Numerated-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#275\">Source</a><a href=\"#impl-Numerated-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; Numerated for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Distance\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#276\">Source</a><a href=\"#associatedtype.Distance\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Distance</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Numerate type: type that describes the distances between two values of <code>Self</code>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Bound\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#277\">Source</a><a href=\"#associatedtype.Bound\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Bound</a> = <a class=\"struct\" href=\"gear_core/pages/struct.PagesAmount.html\" title=\"struct gear_core::pages::PagesAmount\">PagesAmount</a>&lt;SIZE&gt;</h4></section></summary><div class='docblock'>Bound type: type for which any value can be mapped to <code>Self</code>,\nand also has <strong>upper</strong> value, which is bigger than any value of <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_if_enclosed_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#279\">Source</a><a href=\"#method.add_if_enclosed_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add_if_enclosed_by</a>(\n    self,\n    num: &lt;<a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt; as Numerated&gt;::Distance,\n    other: <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;&gt;</h4></section></summary><div class='docblock'>Adds <code>num</code> to <code>self</code>, if <code>self + num</code> is enclosed by <code>self</code> and <code>other</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_if_enclosed_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#285\">Source</a><a href=\"#method.sub_if_enclosed_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub_if_enclosed_by</a>(\n    self,\n    num: &lt;<a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt; as Numerated&gt;::Distance,\n    other: <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;&gt;</h4></section></summary><div class='docblock'>Subtracts <code>num</code> from <code>self</code>, if <code>self - num</code> is enclosed by <code>self</code> and <code>other</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.distance\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#291\">Source</a><a href=\"#method.distance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">distance</a>(self, other: <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;) -&gt; &lt;<a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt; as Numerated&gt;::Distance</h4></section></summary><div class='docblock'>Returns a distance between <code>self</code> and <code>other</code> <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inc_if_lt\" class=\"method trait-impl\"><a href=\"#method.inc_if_lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">inc_if_lt</a>(self, other: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Increments <code>self</code>, if <code>self &lt; other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dec_if_gt\" class=\"method trait-impl\"><a href=\"#method.dec_if_gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">dec_if_gt</a>(self, other: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Decrements <code>self</code>, if <code>self</code> &gt; <code>other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enclosed_by\" class=\"method trait-impl\"><a href=\"#method.enclosed_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">enclosed_by</a>(self, a: &amp;Self, b: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code>, if <code>self</code> is enclosed by <code>a</code> and <code>b</code>.</div></details></div></details>","Numerated","gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#194\">Source</a><a href=\"#impl-Ord-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#194\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1009-1011\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1048-1050\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1074-1076\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#203\">Source</a><a href=\"#impl-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SIZE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#205\">Source</a><h4 class=\"code-header\">pub const <a href=\"gear_core/pages/struct.Page.html#associatedconstant.SIZE\" class=\"constant\">SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a> = SIZE</h4></section></summary><div class=\"docblock\"><p>Page size. May be any number power of two in interval [1, u32::MAX].</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.UPPER\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#211\">Source</a><h4 class=\"code-header\">pub const <a href=\"gear_core/pages/struct.Page.html#associatedconstant.UPPER\" class=\"constant\">UPPER</a>: <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h4></section></summary><div class=\"docblock\"><p>Max possible page number in 4GB memory.</p>\n<p>Note: const computation contains checking in order to prevent incorrect SIZE.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inc\" class=\"method\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#214\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gear_core/pages/struct.Page.html#tymethod.inc\" class=\"fn\">inc</a>(&amp;self) -&gt; <a class=\"struct\" href=\"gear_core/pages/struct.PagesAmount.html\" title=\"struct gear_core::pages::PagesAmount\">PagesAmount</a>&lt;SIZE&gt;</h4></section></summary><div class=\"docblock\"><p>Increment page number. Returns <code>PagesAmount&lt;SIZE&gt;</code>, because this allows to avoid overflows.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_offset\" class=\"method\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#219\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gear_core/pages/struct.Page.html#tymethod.from_offset\" class=\"fn\">from_offset</a>(offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs new page from byte offset: returns page which contains this byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset\" class=\"method\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#224\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gear_core/pages/struct.Page.html#tymethod.offset\" class=\"fn\">offset</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns page zero byte offset.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.end_offset\" class=\"method\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#229\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gear_core/pages/struct.Page.html#tymethod.end_offset\" class=\"fn\">end_offset</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns page last byte offset.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_page\" class=\"method\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#234\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gear_core/pages/struct.Page.html#tymethod.to_page\" class=\"fn\">to_page</a>&lt;const S1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;(self) -&gt; <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;S1&gt;</h4></section></summary><div class=\"docblock\"><p>Returns new page, which contains <code>self</code> zero byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_iter\" class=\"method\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#250\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gear_core/pages/struct.Page.html#tymethod.to_iter\" class=\"fn\">to_iter</a>&lt;const S1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;(self) -&gt; IntervalIterator&lt;<a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;S1&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator that iterates over the range of pages from <code>self</code> to the end page,\ninclusive. Each iteration yields a page of type <a href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\"><code>Page&lt;S1&gt;</code></a>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>gear_core::pages::{GearPage, WasmPage};\n\n<span class=\"kw\">let </span>x: Vec&lt;GearPage&gt; = WasmPage::from(<span class=\"number\">5</span>).to_iter().collect();\n<span class=\"macro\">println!</span>(<span class=\"string\">\"{x:?}\"</span>);</code></pre></div>\n<p>For this example must be printed: <code>[GearPage(20), GearPage(21), GearPage(22), GearPage(23)]</code></p>\n</div></details></div></details>",0,"gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CPagesAmount%3CSIZE%3E%3E-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#169\">Source</a><a href=\"#impl-PartialEq%3CPagesAmount%3CSIZE%3E%3E-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"gear_core/pages/struct.PagesAmount.html\" title=\"struct gear_core::pages::PagesAmount\">PagesAmount</a>&lt;SIZE&gt;&gt; for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#170\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gear_core/pages/struct.PagesAmount.html\" title=\"struct gear_core::pages::PagesAmount\">PagesAmount</a>&lt;SIZE&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<PagesAmount<SIZE>>","gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#191\">Source</a><a href=\"#impl-PartialEq-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#191\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CPagesAmount%3CSIZE%3E%3E-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#175\">Source</a><a href=\"#impl-PartialOrd%3CPagesAmount%3CSIZE%3E%3E-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"gear_core/pages/struct.PagesAmount.html\" title=\"struct gear_core::pages::PagesAmount\">PagesAmount</a>&lt;SIZE&gt;&gt; for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#176\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gear_core/pages/struct.PagesAmount.html\" title=\"struct gear_core::pages::PagesAmount\">PagesAmount</a>&lt;SIZE&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1382\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1400\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1418\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1436\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<PagesAmount<SIZE>>","gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#193\">Source</a><a href=\"#impl-PartialOrd-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#193\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1382\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1400\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1418\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1436\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#200\">Source</a><a href=\"#impl-Serialize-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#200\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu32%3E-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#263\">Source</a><a href=\"#impl-TryFrom%3Cu32%3E-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#264\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"gear_core/pages/struct.PageError.html\" title=\"struct gear_core::pages::PageError\">PageError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#266\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(raw: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;, &lt;<a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<u32>","gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#196\">Source</a><a href=\"#impl-TypeInfo-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; TypeInfo for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#196\">Source</a><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#196\">Source</a><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","gear_common::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperBounded-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#302\">Source</a><a href=\"#impl-UpperBounded-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.UpperBounded.html\" title=\"trait num_traits::bounds::UpperBounded\">UpperBounded</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#303\">Source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.UpperBounded.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h4></section></summary><div class='docblock'>Returns the largest finite number this type can represent</div></details></div></details>","UpperBounded","gear_common::GearPage"],["<section id=\"impl-Copy-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#187\">Source</a><a href=\"#impl-Copy-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section>","Copy","gear_common::GearPage"],["<section id=\"impl-EncodeLike-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#190\">Source</a><a href=\"#impl-EncodeLike-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; EncodeLike for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section>","EncodeLike","gear_common::GearPage"],["<section id=\"impl-Eq-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#192\">Source</a><a href=\"#impl-Eq-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section>","Eq","gear_common::GearPage"],["<section id=\"impl-StructuralPartialEq-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#191\">Source</a><a href=\"#impl-StructuralPartialEq-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section>","StructuralPartialEq","gear_common::GearPage"]]],["gear_core",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#186\">Source</a><a href=\"#impl-Clone-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#186\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#209\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#188\">Source</a><a href=\"#impl-Debug-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#188\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decode-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#189\">Source</a><a href=\"#impl-Decode-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; Decode for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#189\">Source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode</a>&lt;__CodecInputEdqy: Input&gt;(\n    __codec_input_edqy: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __CodecInputEdqy</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Error&gt;</h4></section></summary><div class='docblock'>Attempt to deserialise the value from input.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_into\" class=\"method trait-impl\"><a href=\"#method.decode_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">decode_into</a>&lt;I&gt;(\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>,\n    dst: &amp;mut <a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;Self&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;DecodeFinished, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to deserialize the value from input into a pre-allocated piece of memory. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">skip</a>&lt;I&gt;(input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut I</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, Error&gt;<div class=\"where\">where\n    I: Input,</div></h4></section></summary><div class='docblock'>Attempt to skip the encoded value from input. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_fixed_size\" class=\"method trait-impl\"><a href=\"#method.encoded_fixed_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_fixed_size</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns the fixed encoded size of the type. <a>Read more</a></div></details></div></details>","Decode","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#197\">Source</a><a href=\"#impl-Default-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#197\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#200\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#200\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(__deserializer: __D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, __D::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encode-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#190\">Source</a><a href=\"#impl-Encode-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; Encode for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_hint\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#201\">Source</a><a href=\"#method.size_hint\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_hint</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>If possible give a hint of expected size of the encoding. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#201\">Source</a><a href=\"#method.encode_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode_to</a>&lt;__CodecOutputEdqy: Output + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt;(\n    &amp;self,\n    __codec_dest_edqy: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __CodecOutputEdqy</a>,\n)</h4></section></summary><div class='docblock'>Convert self to a slice and append it to the destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#201\">Source</a><a href=\"#method.encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Convert self to an owned vector.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.using_encoded\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#201\">Source</a><a href=\"#method.using_encoded\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">using_encoded</a>&lt;__CodecOutputReturn, __CodecUsingEncodedCallback: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; __CodecOutputReturn&gt;(\n    &amp;self,\n    f: __CodecUsingEncodedCallback,\n) -&gt; __CodecOutputReturn</h4></section></summary><div class='docblock'>Convert self to a slice and then invoke the given closure with it.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encoded_size\" class=\"method trait-impl\"><a href=\"#method.encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculates the encoded size. <a>Read more</a></div></details></div></details>","Encode","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#195\">Source</a><a href=\"#impl-Hash-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#195\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerBounded-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#296-300\">Source</a><a href=\"#impl-LowerBounded-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.LowerBounded.html\" title=\"trait num_traits::bounds::LowerBounded\">LowerBounded</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#297-299\">Source</a><a href=\"#method.min_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.LowerBounded.html#tymethod.min_value\" class=\"fn\">min_value</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the smallest finite number this type can represent</div></details></div></details>","LowerBounded","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Numerated-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#275-294\">Source</a><a href=\"#impl-Numerated-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; Numerated for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Distance\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#276\">Source</a><a href=\"#associatedtype.Distance\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Distance</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>Numerate type: type that describes the distances between two values of <code>Self</code>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Bound\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#277\">Source</a><a href=\"#associatedtype.Bound\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Bound</a> = <a class=\"struct\" href=\"gear_core/pages/struct.PagesAmount.html\" title=\"struct gear_core::pages::PagesAmount\">PagesAmount</a>&lt;SIZE&gt;</h4></section></summary><div class='docblock'>Bound type: type for which any value can be mapped to <code>Self</code>,\nand also has <strong>upper</strong> value, which is bigger than any value of <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_if_enclosed_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#279-283\">Source</a><a href=\"#method.add_if_enclosed_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">add_if_enclosed_by</a>(self, num: Self::Distance, other: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Adds <code>num</code> to <code>self</code>, if <code>self + num</code> is enclosed by <code>self</code> and <code>other</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_if_enclosed_by\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#285-289\">Source</a><a href=\"#method.sub_if_enclosed_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sub_if_enclosed_by</a>(self, num: Self::Distance, other: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Subtracts <code>num</code> from <code>self</code>, if <code>self - num</code> is enclosed by <code>self</code> and <code>other</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.distance\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#291-293\">Source</a><a href=\"#method.distance\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">distance</a>(self, other: Self) -&gt; Self::Distance</h4></section></summary><div class='docblock'>Returns a distance between <code>self</code> and <code>other</code> <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inc_if_lt\" class=\"method trait-impl\"><a href=\"#method.inc_if_lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">inc_if_lt</a>(self, other: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Increments <code>self</code>, if <code>self &lt; other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dec_if_gt\" class=\"method trait-impl\"><a href=\"#method.dec_if_gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">dec_if_gt</a>(self, other: Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Decrements <code>self</code>, if <code>self</code> &gt; <code>other</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enclosed_by\" class=\"method trait-impl\"><a href=\"#method.enclosed_by\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">enclosed_by</a>(self, a: &amp;Self, b: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code>, if <code>self</code> is enclosed by <code>a</code> and <code>b</code>.</div></details></div></details>","Numerated","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#194\">Source</a><a href=\"#impl-Ord-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#194\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1009-1011\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1048-1050\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1074-1076\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#203-256\">Source</a><a href=\"#impl-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SIZE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#205\">Source</a><h4 class=\"code-header\">pub const <a href=\"gear_core/pages/struct.Page.html#associatedconstant.SIZE\" class=\"constant\">SIZE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a> = SIZE</h4></section></summary><div class=\"docblock\"><p>Page size. May be any number power of two in interval [1, u32::MAX].</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.UPPER\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#211\">Source</a><h4 class=\"code-header\">pub const <a href=\"gear_core/pages/struct.Page.html#associatedconstant.UPPER\" class=\"constant\">UPPER</a>: Self</h4></section></summary><div class=\"docblock\"><p>Max possible page number in 4GB memory.</p>\n<p>Note: const computation contains checking in order to prevent incorrect SIZE.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inc\" class=\"method\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#214-216\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gear_core/pages/struct.Page.html#tymethod.inc\" class=\"fn\">inc</a>(&amp;self) -&gt; <a class=\"struct\" href=\"gear_core/pages/struct.PagesAmount.html\" title=\"struct gear_core::pages::PagesAmount\">PagesAmount</a>&lt;SIZE&gt;</h4></section></summary><div class=\"docblock\"><p>Increment page number. Returns <code>PagesAmount&lt;SIZE&gt;</code>, because this allows to avoid overflows.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_offset\" class=\"method\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#219-221\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gear_core/pages/struct.Page.html#tymethod.from_offset\" class=\"fn\">from_offset</a>(offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructs new page from byte offset: returns page which contains this byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset\" class=\"method\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#224-226\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gear_core/pages/struct.Page.html#tymethod.offset\" class=\"fn\">offset</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns page zero byte offset.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.end_offset\" class=\"method\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#229-231\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gear_core/pages/struct.Page.html#tymethod.end_offset\" class=\"fn\">end_offset</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns page last byte offset.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_page\" class=\"method\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#234-236\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gear_core/pages/struct.Page.html#tymethod.to_page\" class=\"fn\">to_page</a>&lt;const S1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;(self) -&gt; <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;S1&gt;</h4></section></summary><div class=\"docblock\"><p>Returns new page, which contains <code>self</code> zero byte.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_iter\" class=\"method\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#250-255\">Source</a><h4 class=\"code-header\">pub fn <a href=\"gear_core/pages/struct.Page.html#tymethod.to_iter\" class=\"fn\">to_iter</a>&lt;const S1: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;(self) -&gt; IntervalIterator&lt;<a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;S1&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator that iterates over the range of pages from <code>self</code> to the end page,\ninclusive. Each iteration yields a page of type <a href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\"><code>Page&lt;S1&gt;</code></a>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>gear_core::pages::{GearPage, WasmPage};\n\n<span class=\"kw\">let </span>x: Vec&lt;GearPage&gt; = WasmPage::from(<span class=\"number\">5</span>).to_iter().collect();\n<span class=\"macro\">println!</span>(<span class=\"string\">\"{x:?}\"</span>);</code></pre></div>\n<p>For this example must be printed: <code>[GearPage(20), GearPage(21), GearPage(22), GearPage(23)]</code></p>\n</div></details></div></details>",0,"gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CPagesAmount%3CSIZE%3E%3E-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#169-173\">Source</a><a href=\"#impl-PartialEq%3CPagesAmount%3CSIZE%3E%3E-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"gear_core/pages/struct.PagesAmount.html\" title=\"struct gear_core::pages::PagesAmount\">PagesAmount</a>&lt;SIZE&gt;&gt; for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#170-172\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gear_core/pages/struct.PagesAmount.html\" title=\"struct gear_core::pages::PagesAmount\">PagesAmount</a>&lt;SIZE&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<PagesAmount<SIZE>>","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#191\">Source</a><a href=\"#impl-PartialEq-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#191\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CPagesAmount%3CSIZE%3E%3E-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#175-179\">Source</a><a href=\"#impl-PartialOrd%3CPagesAmount%3CSIZE%3E%3E-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"gear_core/pages/struct.PagesAmount.html\" title=\"struct gear_core::pages::PagesAmount\">PagesAmount</a>&lt;SIZE&gt;&gt; for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#176-178\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gear_core/pages/struct.PagesAmount.html\" title=\"struct gear_core::pages::PagesAmount\">PagesAmount</a>&lt;SIZE&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1382\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1400\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1418\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1436\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<PagesAmount<SIZE>>","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#193\">Source</a><a href=\"#impl-PartialOrd-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#193\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1382\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1400\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1418\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1436\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#200\">Source</a><a href=\"#impl-Serialize-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#200\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(&amp;self, __serializer: __S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;__S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, __S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu32%3E-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#263-273\">Source</a><a href=\"#impl-TryFrom%3Cu32%3E-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#264\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"gear_core/pages/struct.PageError.html\" title=\"struct gear_core::pages::PageError\">PageError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#266-272\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(raw: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<u32>","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeInfo-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#196\">Source</a><a href=\"#impl-TypeInfo-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; TypeInfo for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Identity\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#196\">Source</a><a href=\"#associatedtype.Identity\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Identity</a> = <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h4></section></summary><div class='docblock'>The type identifying for which type info is provided. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#196\">Source</a><a href=\"#method.type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_info</a>() -&gt; Type</h4></section></summary><div class='docblock'>Returns the static type identifier for <code>Self</code>.</div></details></div></details>","TypeInfo","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperBounded-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#302-306\">Source</a><a href=\"#impl-UpperBounded-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.UpperBounded.html\" title=\"trait num_traits::bounds::UpperBounded\">UpperBounded</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#303-305\">Source</a><a href=\"#method.max_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/bounds/trait.UpperBounded.html#tymethod.max_value\" class=\"fn\">max_value</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the largest finite number this type can represent</div></details></div></details>","UpperBounded","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<section id=\"impl-Copy-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#187\">Source</a><a href=\"#impl-Copy-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section>","Copy","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<section id=\"impl-EncodeLike-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#190\">Source</a><a href=\"#impl-EncodeLike-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; EncodeLike for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section>","EncodeLike","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<section id=\"impl-Eq-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#192\">Source</a><a href=\"#impl-Eq-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section>","Eq","gear_core::pages::WasmPage","gear_core::pages::GearPage"],["<section id=\"impl-StructuralPartialEq-for-Page%3CSIZE%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/gear_core/pages.rs.html#191\">Source</a><a href=\"#impl-StructuralPartialEq-for-Page%3CSIZE%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const SIZE: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"gear_core/pages/struct.Page.html\" title=\"struct gear_core::pages::Page\">Page</a>&lt;SIZE&gt;</h3></section>","StructuralPartialEq","gear_core::pages::WasmPage","gear_core::pages::GearPage"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[70202,64523]}