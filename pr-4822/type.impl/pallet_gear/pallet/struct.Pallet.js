(function() {
    var type_impls = Object.fromEntries([["pallet_gear",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#487\">Source</a><a href=\"#impl-BeforeAllRuntimeMigrations-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; BeforeAllRuntimeMigrations for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T::AccountId: Origin,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.before_all_runtime_migrations\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#487\">Source</a><a href=\"#method.before_all_runtime_migrations\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">before_all_runtime_migrations</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Something that should happen before runtime migrations are executed.</div></details></div></details>","BeforeAllRuntimeMigrations","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#1298\">Source</a><a href=\"#impl-Callable%3CT%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; Callable&lt;T&gt; for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T::AccountId: Origin,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.RuntimeCall\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#1298\">Source</a><a href=\"#associatedtype.RuntimeCall\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">RuntimeCall</a> = <a class=\"enum\" href=\"pallet_gear/pallet/enum.Call.html\" title=\"enum pallet_gear::pallet::Call\">Call</a>&lt;T&gt;</h4></section></div></details>","Callable<T>","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#151\">Source</a><a href=\"#impl-Clone-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#151\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#209\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#151\">Source</a><a href=\"#impl-Debug-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#151\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Get%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#473-477\">Source</a><a href=\"#impl-Get%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; Get&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#474-476\">Source</a><a href=\"#method.get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">get</a>() -&gt; BlockNumberFor&lt;T&gt;</h4></section></summary><div class='docblock'>Return the current value.</div></details></div></details>","Get<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#285\">Source</a><a href=\"#impl-GetStorageVersion-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; GetStorageVersion for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.InCodeStorageVersion\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#285\">Source</a><a href=\"#associatedtype.InCodeStorageVersion\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">InCodeStorageVersion</a> = StorageVersion</h4></section></summary><div class='docblock'>This type is generated by the <a href=\"crate::pallet\"><code>pallet</code></a> macro. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.in_code_storage_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#285\">Source</a><a href=\"#method.in_code_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">in_code_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><div class='docblock'>Returns the in-code storage version as specified in the\n<a href=\"crate::pallet_macros::storage_version\"><code>storage_version</code></a> attribute, or\n[<code>NoStorageVersionSet</code>] if the attribute is missing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_chain_storage_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#285\">Source</a><a href=\"#method.on_chain_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_chain_storage_version</a>() -&gt; StorageVersion</h4></section></summary><div class='docblock'>Returns the storage version of the pallet as last set in the actual on-chain storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_storage_version\" class=\"method trait-impl\"><a href=\"#method.current_storage_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">current_storage_version</a>() -&gt; Self::InCodeStorageVersion</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated: This method has been renamed to <code>in_code_storage_version</code> and will be removed after March 2024.</span></div></span><div class='docblock'>DEPRECATED: Use [<code>Self::current_storage_version</code>] instead. <a>Read more</a></div></details></div></details>","GetStorageVersion","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#488-518\">Source</a><a href=\"#impl-Hooks%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; Hooks&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T::AccountId: Origin,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#493-502\">Source</a><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(bn: BlockNumberFor&lt;T&gt;) -&gt; Weight</h4></section></summary><div class=\"docblock\"><p>Initialization</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#505-517\">Source</a><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(bn: BlockNumberFor&lt;T&gt;)</h4></section></summary><div class=\"docblock\"><p>Finalization</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(_n: BlockNumber, _remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>Hook to consume a block’s idle time. This will run when the block is being finalized (before\n[<code>Hooks::on_finalize</code>]). <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(_n: BlockNumber, _weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>A hook to run logic after inherent application. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>Hook executed when a code change (aka. a “runtime upgrade”) is detected by the FRAME\n<code>Executive</code> pallet. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(_n: BlockNumber)</h4></section></summary><div class='docblock'>Implementing this function on a pallet allows you to perform long-running tasks that are\ndispatched as separate threads, and entirely independent of the main blockchain execution. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>Check the integrity of this pallet’s configuration. <a>Read more</a></div></details></div></details>","Hooks<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#487\">Source</a><a href=\"#impl-IntegrityTest-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; IntegrityTest for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T::AccountId: Origin,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.integrity_test\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#487\">Source</a><a href=\"#method.integrity_test\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">integrity_test</a>()</h4></section></summary><div class='docblock'>See [<code>Hooks::integrity_test</code>].</div></details></div></details>","IntegrityTest","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#487\">Source</a><a href=\"#impl-OffchainWorker%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; OffchainWorker&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T::AccountId: Origin,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.offchain_worker\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#487\">Source</a><a href=\"#method.offchain_worker\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">offchain_worker</a>(n: BlockNumberFor&lt;T&gt;)</h4></section></summary><div class='docblock'>This function is being called after every block import (when fully synced). <a>Read more</a></div></details></div></details>","OffchainWorker<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#487\">Source</a><a href=\"#impl-OnFinalize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; OnFinalize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T::AccountId: Origin,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_finalize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#487\">Source</a><a href=\"#method.on_finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_finalize</a>(n: BlockNumberFor&lt;T&gt;)</h4></section></summary><div class='docblock'>See [<code>Hooks::on_finalize</code>].</div></details></div></details>","OnFinalize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnGenesis-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#285\">Source</a><a href=\"#impl-OnGenesis-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; OnGenesis for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_genesis\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#285\">Source</a><a href=\"#method.on_genesis\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_genesis</a>()</h4></section></summary><div class='docblock'>Something that should happen at genesis.</div></details></div></details>","OnGenesis","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#487\">Source</a><a href=\"#impl-OnIdle%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; OnIdle&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T::AccountId: Origin,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_idle\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#487\">Source</a><a href=\"#method.on_idle\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_idle</a>(n: BlockNumberFor&lt;T&gt;, remaining_weight: Weight) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_idle</code>].</div></details></div></details>","OnIdle<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#487\">Source</a><a href=\"#impl-OnInitialize%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; OnInitialize&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T::AccountId: Origin,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_initialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#487\">Source</a><a href=\"#method.on_initialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_initialize</a>(n: BlockNumberFor&lt;T&gt;) -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_initialize</code>].</div></details></div></details>","OnInitialize<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#487\">Source</a><a href=\"#impl-OnPoll%3C%3C%3C%3CT+as+Config%3E::Block+as+HeaderProvider%3E::HeaderT+as+Header%3E::Number%3E-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; OnPoll&lt;&lt;&lt;&lt;T as Config&gt;::Block as HeaderProvider&gt;::HeaderT as Header&gt;::Number&gt; for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T::AccountId: Origin,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#487\">Source</a><a href=\"#method.on_poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_poll</a>(n: BlockNumberFor&lt;T&gt;, weight: &amp;mut WeightMeter)</h4></section></summary><div class='docblock'>Code to execute every now and then at the beginning of the block after inherent application. <a>Read more</a></div></details></div></details>","OnPoll<<<<T as Config>::Block as HeaderProvider>::HeaderT as Header>::Number>","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#487\">Source</a><a href=\"#impl-OnRuntimeUpgrade-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; OnRuntimeUpgrade for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T::AccountId: Origin,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_runtime_upgrade\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#487\">Source</a><a href=\"#method.on_runtime_upgrade\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">on_runtime_upgrade</a>() -&gt; Weight</h4></section></summary><div class='docblock'>See [<code>Hooks::on_runtime_upgrade</code>].</div></details></div></details>","OnRuntimeUpgrade","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/internal.rs.html#210-1404\">Source</a><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T::AccountId: Origin,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.spend_gas\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/internal.rs.html#234-281\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.spend_gas\" class=\"fn\">spend_gas</a>(\n    to: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n    id: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"type\" href=\"pallet_gear/type.GasNodeIdOf.html\" title=\"type pallet_gear::GasNodeIdOf\">GasNodeIdOf</a>&lt;T&gt;&gt;,\n    amount: <a class=\"type\" href=\"pallet_gear/type.GasBalanceOf.html\" title=\"type pallet_gear::GasBalanceOf\">GasBalanceOf</a>&lt;T&gt;,\n)</h4></section></div></details>",0,"pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#1299-1778\">Source</a><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T::AccountId: Origin,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.upload_code\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#151\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.upload_code\" class=\"fn\">upload_code</a>(\n    origin: OriginFor&lt;T&gt;,\n    code: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n) -&gt; DispatchResultWithPostInfo</h4></section></summary><div class=\"docblock\"><p>Saves program <code>code</code> in storage.</p>\n<p>The extrinsic was created to provide <em>deploy program from program</em> functionality.\nAnyone who wants to define a “factory” logic in program should first store the code and metadata for the “child”\nprogram in storage. So the code for the child will be initialized by program initialization request only if it exists in storage.</p>\n<p>More precisely, the code and its metadata are actually saved in the storage under the hash of the <code>code</code>. The code hash is computed\nas Blake256 hash. At the time of the call the <code>code</code> hash should not be in the storage. If it was stored previously, call will end up\nwith an <code>CodeAlreadyExists</code> error. In this case user can be sure, that he can actually use the hash of his program’s code bytes to define\n“program factory” logic in his program.</p>\n<p>Parameters</p>\n<ul>\n<li><code>code</code>: wasm code of a program as a byte vector.</li>\n</ul>\n<p>Emits the following events:</p>\n<ul>\n<li><code>SavedCode(H256)</code> - when the code is saved in storage.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.upload_program\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#151\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.upload_program\" class=\"fn\">upload_program</a>(\n    origin: OriginFor&lt;T&gt;,\n    code: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    salt: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    init_payload: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    gas_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>,\n    value: &lt;&lt;T as Config&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    keep_alive: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n) -&gt; DispatchResultWithPostInfo</h4></section></summary><div class=\"docblock\"><p>Creates program initialization request (message), that is scheduled to be run in the same block.</p>\n<p>There are no guarantees that initialization message will be run in the same block due to block\ngas limit restrictions. For example, when it will be the message’s turn, required gas limit for it\ncould be more than remaining block gas limit. Therefore, the message processing will be postponed\nuntil the next block.</p>\n<p><code>ActorId</code> is computed as Blake256 hash of concatenated bytes of <code>code</code> + <code>salt</code>. (todo #512 <code>code_hash</code> + <code>salt</code>)\nSuch <code>ActorId</code> must not exist in the Program Storage at the time of this call.</p>\n<p>There is the same guarantee here as in <code>upload_code</code>. That is, future program’s\n<code>code</code> and metadata are stored before message was added to the queue and processed.</p>\n<p>The origin must be Signed and the sender must have sufficient funds to pay\nfor <code>gas</code> and <code>value</code> (in case the latter is being transferred).</p>\n<p>Gear runtime guarantees that an active program always has an account to store value.\nIf the underlying account management platform (e.g. Substrate’s System pallet) requires\nan existential deposit to keep an account alive, the related overhead is considered an\nextra cost related with a program instantiation and is charged to the program’s creator\nand is released back to the creator when the program is removed.\nIn context of the above, the <code>value</code> parameter represents the so-called <code>reducible</code> balance\na program should have at its disposal upon instantiation. It is not used to offset the\nexistential deposit required for an account creation.</p>\n<p>Parameters:</p>\n<ul>\n<li><code>code</code>: wasm code of a program as a byte vector.</li>\n<li><code>salt</code>: randomness term (a seed) to allow programs with identical code\nto be created independently.</li>\n<li><code>init_payload</code>: encoded parameters of the wasm module <code>init</code> function.</li>\n<li><code>gas_limit</code>: maximum amount of gas the program can spend before it is halted.</li>\n<li><code>value</code>: balance to be transferred to the program once it’s been created.</li>\n</ul>\n<p>Emits the following events:</p>\n<ul>\n<li><code>InitMessageEnqueued(MessageInfo)</code> when init message is placed in the queue.</li>\n</ul>\n<h5 id=\"note\"><a class=\"doc-anchor\" href=\"#note\">§</a>Note</h5>\n<p>Faulty (uninitialized) programs still have a valid addresses (program ids) that can deterministically be derived on the\ncaller’s side upfront. It means that if messages are sent to such an address, they might still linger in the queue.</p>\n<p>In order to mitigate the risk of users’ funds being sent to an address,\nwhere a valid program should have resided, while it’s not,\nsuch “failed-to-initialize” programs are not silently deleted from the\nprogram storage but rather marked as “ghost” programs.\nGhost program can be removed by their original author via an explicit call.\nThe funds stored by a ghost program will be release to the author once the program\nhas been removed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_program\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#151\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.create_program\" class=\"fn\">create_program</a>(\n    origin: OriginFor&lt;T&gt;,\n    code_id: CodeId,\n    salt: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    init_payload: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    gas_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>,\n    value: &lt;&lt;T as Config&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    keep_alive: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n) -&gt; DispatchResultWithPostInfo</h4></section></summary><div class=\"docblock\"><p>Creates program via <code>code_id</code> from storage.</p>\n<p>Parameters:</p>\n<ul>\n<li><code>code_id</code>: wasm code id in the code storage.</li>\n<li><code>salt</code>: randomness term (a seed) to allow programs with identical code\nto be created independently.</li>\n<li><code>init_payload</code>: encoded parameters of the wasm module <code>init</code> function.</li>\n<li><code>gas_limit</code>: maximum amount of gas the program can spend before it is halted.</li>\n<li><code>value</code>: balance to be transferred to the program once it’s been created.</li>\n</ul>\n<p>Emits the following events:</p>\n<ul>\n<li><code>InitMessageEnqueued(MessageInfo)</code> when init message is placed in the queue.</li>\n</ul>\n<h5 id=\"note-1\"><a class=\"doc-anchor\" href=\"#note-1\">§</a>NOTE</h5>\n<p>For the details of this extrinsic, see <code>upload_code</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_message\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#151\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.send_message\" class=\"fn\">send_message</a>(\n    origin: OriginFor&lt;T&gt;,\n    destination: ActorId,\n    payload: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    gas_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>,\n    value: &lt;&lt;T as Config&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    keep_alive: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n) -&gt; DispatchResultWithPostInfo</h4></section></summary><div class=\"docblock\"><p>Sends a message to a program or to another account.</p>\n<p>The origin must be Signed and the sender must have sufficient funds to pay\nfor <code>gas</code> and <code>value</code> (in case the latter is being transferred).</p>\n<p>To avoid an undefined behavior a check is made that the destination address\nis not a program in uninitialized state. If the opposite holds true,\nthe message is not enqueued for processing.</p>\n<p>Parameters:</p>\n<ul>\n<li><code>destination</code>: the message destination.</li>\n<li><code>payload</code>: in case of a program destination, parameters of the <code>handle</code> function.</li>\n<li><code>gas_limit</code>: maximum amount of gas the program can spend before it is halted.</li>\n<li><code>value</code>: balance to be transferred to the program once it’s been created.</li>\n</ul>\n<p>Emits the following events:</p>\n<ul>\n<li><code>DispatchMessageEnqueued(MessageInfo)</code> when dispatch message is placed in the queue.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_reply\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#151\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.send_reply\" class=\"fn\">send_reply</a>(\n    origin: OriginFor&lt;T&gt;,\n    reply_to_id: MessageId,\n    payload: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    gas_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>,\n    value: &lt;&lt;T as Config&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    keep_alive: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n) -&gt; DispatchResultWithPostInfo</h4></section></summary><div class=\"docblock\"><p>Send reply on message in <code>Mailbox</code>.</p>\n<p>Removes message by given <code>MessageId</code> from callers <code>Mailbox</code>:\nrent funds become free, associated with the message value\ntransfers from message sender to extrinsic caller.</p>\n<p>Generates reply on removed message with given parameters\nand pushes it in <code>MessageQueue</code>.</p>\n<p>NOTE: source of the message in mailbox guaranteed to be a program.</p>\n<p>NOTE: only user who is destination of the message, can claim value\nor reply on the message from mailbox.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_value\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#151\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.claim_value\" class=\"fn\">claim_value</a>(\n    origin: OriginFor&lt;T&gt;,\n    message_id: MessageId,\n) -&gt; DispatchResultWithPostInfo</h4></section></summary><div class=\"docblock\"><p>Claim value from message in <code>Mailbox</code>.</p>\n<p>Removes message by given <code>MessageId</code> from callers <code>Mailbox</code>:\nrent funds become free, associated with the message value\ntransfers from message sender to extrinsic caller.</p>\n<p>NOTE: only user who is destination of the message, can claim value\nor reply on the message from mailbox.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.run\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#151\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.run\" class=\"fn\">run</a>(\n    origin: OriginFor&lt;T&gt;,\n    max_gas: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"type\" href=\"pallet_gear/type.GasBalanceOf.html\" title=\"type pallet_gear::GasBalanceOf\">GasBalanceOf</a>&lt;T&gt;&gt;,\n) -&gt; DispatchResultWithPostInfo</h4></section></summary><div class=\"docblock\"><p>Process message queue</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_execute_inherent\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#151\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.set_execute_inherent\" class=\"fn\">set_execute_inherent</a>(origin: OriginFor&lt;T&gt;, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; DispatchResult</h4></section></summary><div class=\"docblock\"><p>Sets <code>ExecuteInherent</code> flag.</p>\n<p>Requires root origin (eventually, will only be set via referendum)</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.claim_value_to_inheritor\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#151\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.claim_value_to_inheritor\" class=\"fn\">claim_value_to_inheritor</a>(\n    origin: OriginFor&lt;T&gt;,\n    program_id: ActorId,\n    depth: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/num/nonzero/struct.NonZero.html\" title=\"struct core::num::nonzero::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;,\n) -&gt; DispatchResultWithPostInfo</h4></section></summary><div class=\"docblock\"><p>Transfers value from chain of terminated or exited programs to its final inheritor.</p>\n<p><code>depth</code> parameter is how far to traverse to inheritor.\nA value of 10 is sufficient for most cases.</p>\n<h5 id=\"example-of-chain\"><a class=\"doc-anchor\" href=\"#example-of-chain\">§</a>Example of chain</h5>\n<ul>\n<li>Program #1 exits (e.g `gr_exit syscall) with argument pointing to user.\nBalance of program #1 has been sent to user.</li>\n<li>Program #2 exits with inheritor pointing to program #1.\nBalance of program #2 has been sent to exited program #1.</li>\n<li>Program #3 exits with inheritor pointing to program #2\nBalance of program #1 has been sent to exited program #2.</li>\n</ul>\n<p>So chain of inheritors looks like: Program #3 -&gt; Program #2 -&gt; Program #1 -&gt; User.</p>\n<p>We have programs #1 and #2 with stuck value on their balances.\nThe balances should’ve been transferred to user (final inheritor) according to the chain.\nBut protocol doesn’t traverse the chain automatically, so user have to call this extrinsic.</p>\n</div></details></div></details>",0,"pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#1780-1986\">Source</a><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T::AccountId: Origin,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_message_impl\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#1785-1889\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.send_message_impl\" class=\"fn\">send_message_impl</a>(\n    origin: &lt;T as Config&gt;::AccountId,\n    destination: ActorId,\n    payload: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    gas_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>,\n    value: &lt;&lt;T as Config&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    keep_alive: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n    gas_sponsor: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n) -&gt; DispatchResultWithPostInfo</h4></section></summary><div class=\"docblock\"><p>Underlying implementation of <code>GearPallet::send_message</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_reply_impl\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#1892-1970\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.send_reply_impl\" class=\"fn\">send_reply_impl</a>(\n    origin: &lt;T as Config&gt;::AccountId,\n    reply_to_id: MessageId,\n    payload: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    gas_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>,\n    value: &lt;&lt;T as Config&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance,\n    keep_alive: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n    gas_sponsor: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;T as Config&gt;::AccountId&gt;,\n) -&gt; DispatchResultWithPostInfo</h4></section></summary><div class=\"docblock\"><p>Underlying implementation of <code>GearPallet::send_reply</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.upload_code_impl\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#1973-1985\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.upload_code_impl\" class=\"fn\">upload_code_impl</a>(code: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; DispatchResultWithPostInfo</h4></section></summary><div class=\"docblock\"><p>Underlying implementation of <code>GearPallet::upload_code</code>.</p>\n</div></details></div></details>",0,"pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#527-1296\">Source</a><a href=\"#impl-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T::AccountId: Origin,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_block_number\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#535-537\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.set_block_number\" class=\"fn\">set_block_number</a>(bn: BlockNumberFor&lt;T&gt;)</h4></section></summary><div class=\"docblock\"><p>Set gear block number.</p>\n<p>For tests only.</p>\n</div></details><section id=\"method.read_state_using_wasm\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#677-697\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.read_state_using_wasm\" class=\"fn\">read_state_using_wasm</a>(\n    program_id: H256,\n    payload: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    fn_name: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    wasm: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    argument: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;,\n    gas_allowance: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section><section id=\"method.read_state\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#699-706\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.read_state\" class=\"fn\">read_state</a>(\n    program_id: H256,\n    payload: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    gas_allowance: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section><section id=\"method.read_metahash\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#708-713\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.read_metahash\" class=\"fn\">read_metahash</a>(\n    program_id: H256,\n    gas_allowance: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;H256, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section><section id=\"method.calculate_gas_info\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#716-736\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.calculate_gas_info\" class=\"fn\">calculate_gas_info</a>(\n    source: H256,\n    kind: <a class=\"enum\" href=\"pallet_gear/manager/enum.HandleKind.html\" title=\"enum pallet_gear::manager::HandleKind\">HandleKind</a>,\n    payload: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>,\n    allow_other_panics: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n    initial_gas: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;,\n    gas_allowance: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"pallet_gear/struct.GasInfo.html\" title=\"struct pallet_gear::GasInfo\">GasInfo</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section><section id=\"method.calculate_reply_for_handle\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#804-821\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.calculate_reply_for_handle\" class=\"fn\">calculate_reply_for_handle</a>(\n    origin: H256,\n    destination: H256,\n    payload: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    gas_limit: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>,\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>,\n    allowance_multiplier: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"pallet_gear/struct.ReplyInfo.html\" title=\"struct pallet_gear::ReplyInfo\">ReplyInfo</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section><section id=\"method.run_with_ext_copy\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#843-858\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.run_with_ext_copy\" class=\"fn\">run_with_ext_copy</a>&lt;R, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>() -&gt; R&gt;(f: F) -&gt; R</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_initialized\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#861-865\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.is_initialized\" class=\"fn\">is_initialized</a>(program_id: ActorId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if a program has been successfully initialized</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_active\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#868-873\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.is_active\" class=\"fn\">is_active</a>(builtins: &amp;impl <a class=\"trait\" href=\"pallet_gear/trait.BuiltinDispatcher.html\" title=\"trait pallet_gear::BuiltinDispatcher\">BuiltinDispatcher</a>, program_id: ActorId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if <code>program_id</code> is that of a in active status or the builtin actor.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_terminated\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#876-880\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.is_terminated\" class=\"fn\">is_terminated</a>(program_id: ActorId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if id is a program and the program has terminated status.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_exited\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#883-887\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.is_exited\" class=\"fn\">is_exited</a>(program_id: ActorId) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if id is a program and the program has exited status.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.program_exists\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#891-894\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.program_exists\" class=\"fn\">program_exists</a>(\n    builtins: &amp;impl <a class=\"trait\" href=\"pallet_gear/trait.BuiltinDispatcher.html\" title=\"trait pallet_gear::BuiltinDispatcher\">BuiltinDispatcher</a>,\n    program_id: ActorId,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if there is a program with the specified <code>program_id`` (it may be paused) or this </code>program_id` belongs to the built-in actor.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.first_inheritor_of\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#897-903\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.first_inheritor_of\" class=\"fn\">first_inheritor_of</a>(program_id: ActorId) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;ActorId&gt;</h4></section></summary><div class=\"docblock\"><p>Returns inheritor of an exited/terminated program.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_message_id\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#906-912\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.next_message_id\" class=\"fn\">next_message_id</a>(user_id: H256) -&gt; MessageId</h4></section></summary><div class=\"docblock\"><p>Returns MessageId for newly created user message.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.process_tasks\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#915-1037\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.process_tasks\" class=\"fn\">process_tasks</a>(ext_manager: &amp;mut <a class=\"struct\" href=\"pallet_gear/manager/struct.ExtManager.html\" title=\"struct pallet_gear::manager::ExtManager\">ExtManager</a>&lt;T&gt;)</h4></section></summary><div class=\"docblock\"><p>Delayed tasks processing.</p>\n</div></details><section id=\"method.run_call\" class=\"method\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#1293-1295\">Source</a><h4 class=\"code-header\">pub fn <a href=\"pallet_gear/pallet/struct.Pallet.html#tymethod.run_call\" class=\"fn\">run_call</a>(max_gas: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"type\" href=\"pallet_gear/type.GasBalanceOf.html\" title=\"type pallet_gear::GasBalanceOf\">GasBalanceOf</a>&lt;T&gt;&gt;) -&gt; <a class=\"enum\" href=\"pallet_gear/pallet/enum.Call.html\" title=\"enum pallet_gear::pallet::Call\">Call</a>&lt;T&gt;</h4></section></div></details>",0,"pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#285\">Source</a><a href=\"#impl-PalletInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; PalletInfoAccess for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#285\">Source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">index</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Index of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#285\">Source</a><a href=\"#method.name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the pallet as configured in the runtime.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#285\">Source</a><a href=\"#method.name_hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">name_hash</a>() -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">16</a>]</h4></section></summary><div class='docblock'>Two128 hash of name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#285\">Source</a><a href=\"#method.module_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">module_name</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Name of the Rust module containing the pallet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_version\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#285\">Source</a><a href=\"#method.crate_version\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">crate_version</a>() -&gt; CrateVersion</h4></section></summary><div class='docblock'>Version of the crate containing the pallet.</div></details></div></details>","PalletInfoAccess","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#285\">Source</a><a href=\"#impl-PalletsInfoAccess-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; PalletsInfoAccess for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#285\">Source</a><a href=\"#method.count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">count</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of pallets’ information that this type represents. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.infos\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#285\">Source</a><a href=\"#method.infos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">infos</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;PalletInfoData&gt;</h4></section></summary><div class='docblock'>All of the pallets’ information that this type represents.</div></details></div></details>","PalletsInfoAccess","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#151\">Source</a><a href=\"#impl-PartialEq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#151\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueueRunner-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#2061-2089\">Source</a><a href=\"#impl-QueueRunner-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; QueueRunner for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;<div class=\"where\">where\n    T::AccountId: Origin,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Gas\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#2065\">Source</a><a href=\"#associatedtype.Gas\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Gas</a> = &lt;&lt;T as <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_gear/pallet/trait.Config.html#associatedtype.GasProvider\" title=\"type pallet_gear::pallet::Config::GasProvider\">GasProvider</a> as Provider&gt;::Balance</h4></section><section id=\"method.run_queue\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#2067-2088\">Source</a><a href=\"#method.run_queue\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">run_queue</a>(initial_gas: Self::Gas) -&gt; Self::Gas</h4></section></div></details>","QueueRunner","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#287\">Source</a><a href=\"#impl-StorageInfoTrait-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; StorageInfoTrait for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.storage_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#287\">Source</a><a href=\"#method.storage_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">storage_info</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StorageInfo&gt;</h4></section></div></details>","StorageInfoTrait","pallet_gear::pallet::Module"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#151\">Source</a><a href=\"#impl-WhitelistedStorageKeys-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"pallet_gear/pallet/trait.Config.html\" title=\"trait pallet_gear::pallet::Config\">Config</a>&gt; WhitelistedStorageKeys for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.whitelisted_storage_keys\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#151\">Source</a><a href=\"#method.whitelisted_storage_keys\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">whitelisted_storage_keys</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TrackedStorageKey&gt;</h4></section></summary><div class='docblock'>Returns a <a href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>Vec&lt;TrackedStorageKey&gt;</code></a> indicating the storage keys that\nshould be whitelisted during benchmarking. This means that those keys\nwill be excluded from the benchmarking performance calculation.</div></details></div></details>","WhitelistedStorageKeys","pallet_gear::pallet::Module"],["<section id=\"impl-Eq-for-Pallet%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/pallet_gear/lib.rs.html#288\">Source</a><a href=\"#impl-Eq-for-Pallet%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"pallet_gear/pallet/struct.Pallet.html\" title=\"struct pallet_gear::pallet::Pallet\">Pallet</a>&lt;T&gt;</h3></section>","Eq","pallet_gear::pallet::Module"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[77558]}