searchState.loadedDescShard("gclient", 3, "Get a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nBuild this type from a number of parts per thing.\nBuild this type from a number of parts per thing.\nFrom an explicitly defined number of parts per maximum of …\nBuild this type from a number of parts per thing.\nFrom an explicitly defined number of parts per maximum of …\nBuild this type from a number of parts per thing.\nFrom an explicitly defined number of parts per maximum of …\nFrom an explicitly defined number of parts per maximum of …\nBuild this type from a number of parts per thing.\nFrom an explicitly defined number of parts per maximum of …\nBuild this type from a number of parts per thing.\nCreates a <code>Vec&lt;T&gt;</code> directly from a <code>NonNull</code> pointer, a …\nCreates a <code>Vec&lt;T, A&gt;</code> directly from a <code>NonNull</code> pointer, a …\nConvert from a <code>Perbill</code> value.\nConvert from a <code>Perbill</code> value.\nConvert from a <code>Perbill</code> value.\nConvert from a <code>Perbill</code> value.\nBuild this type from a percent. Equivalent to …\nConverts a percent into <code>Self</code>. Equal to <code>x / 100</code>.\nConverts a percent into <code>Self</code>. Equal to <code>x / 100</code>.\nConverts a percent into <code>Self</code>. Equal to <code>x / 100</code>.\nConverts a percent into <code>Self</code>. Equal to <code>x / 100</code>.\nConverts a percent into <code>Self</code>. Equal to <code>x / 100</code>.\nConverts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.\nConverts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.\nConverts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.\nConverts a percent into <code>Self</code>. Equal to <code>x / 1000</code>.\nApproximate the fraction <code>p/q</code> into a per-thing fraction. …\nCalculate an approximation of a rational.\nCalculate an approximation of a rational.\nCalculate an approximation of a rational.\nCalculate an approximation of a rational.\nSee <code>PerThing::from_rational</code>.\nSee <code>PerThing::from_rational</code>.\nSee <code>PerThing::from_rational</code>.\nSee <code>PerThing::from_rational</code>.\nSee <code>PerThing::from_rational</code>.\nSame as <code>Self::from_rational</code>.\nSee <code>PerThing::from_rational</code>.\nSee <code>PerThing::from_rational</code>.\nSee <code>PerThing::from_rational</code>.\nSee <code>PerThing::from_rational</code>.\nSee <code>PerThing::from_rational</code>.\nApproximate the fraction <code>p/q</code> into a per-thing fraction.\nCalculate an approximation of a rational with custom …\nCalculate an approximation of a rational with custom …\nCalculate an approximation of a rational with custom …\nCalculate an approximation of a rational with custom …\nCreates a <code>Vec&lt;T&gt;</code> directly from a pointer, a length, and a …\nCreates a <code>Vec&lt;T, A&gt;</code> directly from a pointer, a length, a …\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the value for <code>Rounding</code> which would give the same …\nCreates self from a <code>u32</code>.\nCreates self from a <code>u32</code>.\nCreates self from a <code>u32</code>.\nCreates self from a <code>u32</code>.\nBuild from a raw <code>n/d</code>. This could lead to / 0 if not …\nGenerate a public/private pair with an optional <code>seed</code> and …\nGeneric implementations of <code>crate::traits::Header</code>, …\nReturn the encoded justification for the given consensus …\nReturn a mutable reference to the value corresponding to …\nExactly the same semantics as <code>slice::get_mut</code>.\nExactly the same semantics as <code>slice::get_mut</code>.\nSome helper functions to work with 128bit numbers. Note …\nImplement <code>OpaqueKeys</code> for a described struct.\nModule index, matching the metadata module index.\nInserts an element at position <code>index</code> within the vector, …\nInteger division with another value, rounding down.\nInteger division with another value, rounding down.\nInteger division with another value, rounding down.\nInteger division with another value, rounding down.\nInteger division with another value, rounding down.\nInteger multiplication with another value, saturating at 1.\nInteger multiplication with another value, saturating at 1.\nInteger multiplication with another value, saturating at 1.\nInteger multiplication with another value, saturating at 1.\nInteger multiplication with another value, saturating at 1.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the vector into <code>Box&lt;[T]&gt;</code>.\nAttempt to convert into a <code>PerThing</code>. This will always …\nAttempt to convert into a <code>PerThing</code>. This will always …\nAttempt to convert into a <code>PerThing</code>. This will always …\nAttempt to convert into a <code>PerThing</code>. This will always …\nTakes a <code>Vec&lt;[T; N]&gt;</code> and flattens it into a <code>Vec&lt;T&gt;</code>.\nConsumes <code>self</code> and returns the inner raw value.\nExtract the value of an either over two equivalent types.\nReturn the instance’s inner value.\nReturn the instance’s inner value.\nConsume self, and return the inner <code>BTreeMap</code>.\nConsume self, and return the inner <code>BTreeSet</code>.\nConsume self, and return the inner <code>Vec</code>. Henceforth, the …\nReturn the instance’s inner value.\nConsume self, and return the inner <code>Vec</code>. Henceforth, the …\nReturn the instance’s inner value.\nConvert into the inner type.\nConvert the inner value to an iterator.\nCreates a consuming iterator, that is, one that moves each …\nReturn a copy of the encoded justification for the given …\nDecomposes a <code>Vec&lt;T&gt;</code> into its raw components: …\nDecomposes a <code>Vec&lt;T&gt;</code> into its raw components: …\nConvert into a <code>Perbill</code> value. Will saturate if above one …\nConvert into a <code>Perbill</code> value. Will saturate if above one …\nConvert into a <code>Perbill</code> value. Will saturate if above one …\nConvert into a <code>Perbill</code> value. Will saturate if above one …\nDecomposes a <code>Vec&lt;T&gt;</code> into its raw components: …\nDecomposes a <code>Vec&lt;T&gt;</code> into its raw components: …\nReturns <code>true</code> if the vector contains no elements.\nReturns true of this collection is full.\nReturn true if the value is the <code>Left</code> variant.\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nChecks if the number is one.\nReturn <code>true</code> if this is one.\nSee <code>PerThing::is_one</code>.\nSee <code>PerThing::is_one</code>.\nSee <code>PerThing::is_one</code>.\nSee <code>PerThing::is_one</code>.\nSee <code>PerThing::is_one</code>.\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturn true if the value is the <code>Right</code> variant.\nReturn <code>true</code> if this is nothing.\nSee <code>PerThing::is_zero</code>.\nSee <code>PerThing::is_zero</code>.\nSee <code>PerThing::is_zero</code>.\nSee <code>PerThing::is_zero</code>.\nSee <code>PerThing::is_zero</code>.\nIf it is zero or not\nBorrow the inner value as an iterator.\nReturn an iterator over the justifications.\nMutably borrow the inner value as an iterator.\nGets a mutable iterator over the entries of the map, …\nExactly the same semantics as <code>slice::iter_mut</code>.\nExactly the same semantics as <code>slice::last_mut</code>.\nA saturating add that assumes <code>self</code> and <code>other</code> have the same …\nA saturating subtraction that assumes <code>self</code> and <code>other</code> have …\nGet the least common divisor of <code>self</code> and <code>other</code>.\nConsumes and leaks the <code>Vec</code>, returning a mutable reference …\nConvert the left side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;L&gt;</code>.\nApply the function <code>f</code> on the value in the <code>Left</code> variant if …\nReturn the part left when <code>self</code> is saturating-subtracted …\nReturn left value or given value\nReturn left or a default\nReturns left value or computes it from a closure\nRuntime types that existed in old API versions.\nReturns the number of elements in the vector, also …\nReturn the next lower value to <code>self</code> or <code>self</code> if it is …\nGet reference to the first digest item that matches the …\nGet reference to all digest items.\nA list of logs in the digest.\nMap <code>f</code> over the contained value and return the result in the\nConsume the map, applying <code>f</code> to each of it’s values and …\nApply the functions <code>f</code> and <code>g</code> to the <code>Left</code> and <code>Right</code> variants …\nSimilar to <code>map_either</code>, with an added context <code>ctx</code> …\nApply the function <code>f</code> on the value in the <code>Left</code> variant if …\nApply the function <code>f</code> on the value in the <code>Right</code> variant if …\nOptional error message.\nCreate a <code>Morph</code> and/or <code>TryMorph</code> impls with a simple …\nMultiply by a value and return the result.\nMultiply by a value and return the result.\nMultiply by a value and return the result.\nMultiply by a value and return the result.\nMultiplication that always rounds the result up to a whole …\nSee <code>PerThing::mul_ceil</code>.\nSee <code>PerThing::mul_ceil</code>.\nSee <code>PerThing::mul_ceil</code>.\nSee <code>PerThing::mul_ceil</code>.\nSee <code>PerThing::mul_ceil</code>.\nMultiplication that always rounds down to a whole number. …\nSee <code>PerThing::mul_floor</code>.\nSee <code>PerThing::mul_floor</code>.\nSee <code>PerThing::mul_floor</code>.\nSee <code>PerThing::mul_floor</code>.\nSee <code>PerThing::mul_floor</code>.\nReturn the numerator.\nNegate the value.\nNegate the value.\nNegate the value.\nNegate the value.\nCreate a new <code>BoundedBTreeMap</code>.\nCreate a new <code>BoundedBTreeSet</code>.\nCreate <code>Self</code> with no items.\nCreate a new instance from its raw inner byte value.\nConstructs a new, empty <code>Vec&lt;T&gt;</code>.\nCreate a new <code>OpaqueValue</code> using the given encoded …\nConstructs a new, empty <code>Vec&lt;T, A&gt;</code>.\nA collection of higher lever helpers for offchain calls.\nEquivalent to <code>Self::from_parts(Self::ACCURACY)</code>.\nSee <code>PerThing::one</code>\nSee <code>PerThing::one</code>\nSee <code>PerThing::one</code>\nSee <code>PerThing::one</code>\nSee <code>PerThing::one</code>\nOne\nReturn the next higher value to <code>self</code> or <code>self</code> if it is …\nExactly the same semantics as <code>Vec::pop</code>.\nPop a digest item.\nRemoves the last element from a vector and returns it, or …\nRemoves and returns the last element from a vector if the …\nAdditional information about the <code>Dispatchable</code> which is …\nTry to match this to a <code>Self::PreRuntime</code>, check <code>id</code> matches …\nPrint something that implements <code>Printable</code> from the runtime.\nPush new digest item.\nAppends an element to the back of a collection.\nAppends an element if there is sufficient spare capacity, …\nTakes the reciprocal (inverse). Equal to <code>1 / self</code>.\nRemove a key from the map, returning the value at the key …\nRemove an item from the set, returning whether it was …\nExactly the same semantics as <code>Vec::remove</code>.\nExactly the same semantics as <code>Vec::remove</code>.\nRemoves and returns the element at position <code>index</code> within …\nRemove the encoded justification for the given consensus …\nRemove a key from the map, returning the value at the key …\nReserves capacity for at least <code>additional</code> more elements to …\nReserves the minimum capacity for at least <code>additional</code> more …\nResizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.\nResizes the <code>Vec</code> in-place so that <code>len</code> is equal to <code>new_len</code>.\nExactly the same semantics as <code>BTreeMap::retain</code>.\nExactly the same semantics as <code>Vec::retain</code>.\nExactly the same semantics as <code>Vec::retain</code>.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate, …\nConvert the right side of <code>Either&lt;L, R&gt;</code> to an <code>Option&lt;R&gt;</code>.\nApply the function <code>f</code> on the value in the <code>Right</code> variant if …\nReturn right value or given value\nReturn right or a default\nReturns right value or computes it from a closure\nReturns the number rounded to the nearest integer. Rounds …\nA logger that can be used to log from the runtime.\nConvert from a value of <code>T</code> into an equivalent instance of …\nConsume self to return an equivalent value of <code>T</code>.\nSaturating absolute value.\nIncrement self by some <code>amount</code>, saturating.\nSaturating addition. Compute <code>self + rhs</code>, saturating at the …\nSaturating addition. Compute <code>self + rhs</code>, saturating at the …\nSaturating addition. Compute <code>self + rhs</code>, saturating at the …\nSaturating addition. Compute <code>self + rhs</code>, saturating at the …\nSaturating addition. Compute <code>self + rhs</code>, saturating at the …\nSaturating addition. Compute <code>self + rhs</code>, saturating at the …\nDecrement self by one, saturating at zero.\nSaturating division. Compute <code>self / rhs</code>, saturating at one …\nSaturating division. Compute <code>self / rhs</code>, saturating at one …\nSaturating division. Compute <code>self / rhs</code>, saturating at one …\nSaturating division. Compute <code>self / rhs</code>, saturating at one …\nSaturating division. Compute <code>self / rhs</code>, saturating at one …\nSaturating division for integer type <code>N</code>. Equal to <code>self / d</code>.\nCreates self from an integer number <code>int</code>.\nCreates <code>self</code> from a rational number. Equal to <code>n / d</code>.\nIncrement self by one, saturating.\nDecrement self by one, saturating at zero.\nSaturating multiply. Compute <code>self * rhs</code>, saturating at the …\nSaturating multiply. Compute <code>self * rhs</code>, saturating at the …\nSaturating multiply. Compute <code>self * rhs</code>, saturating at the …\nSaturating multiply. Compute <code>self * rhs</code>, saturating at the …\nSaturating multiply. Compute <code>self * rhs</code>, saturating at the …\nSaturating multiply. Compute <code>self * rhs</code>, saturating at the …\nSaturating multiplication for integer type <code>N</code>, adding the …\nSaturating multiplication for integer type <code>N</code>. Equal to …\nIncrement self by one, saturating at the numeric bounds …\nSaturating exponentiation. Compute <code>self.pow(exp)</code>, …\nSaturating exponentiation. Computes <code>self.pow(exp)</code>, …\nSaturating exponentiation. Computes <code>self.pow(exp)</code>, …\nSaturating exponentiation. Computes <code>self.pow(exp)</code>, …\nSaturating exponentiation. Computes <code>self.pow(exp)</code>, …\nSaturating exponentiation. Computes <code>self.pow(exp)</code>, …\nSaturating multiplication by the reciprocal of <code>self</code>.\tThe …\nSee <code>PerThing::saturating_reciprocal_mul</code>.\nSee <code>PerThing::saturating_reciprocal_mul</code>.\nSee <code>PerThing::saturating_reciprocal_mul</code>.\nSee <code>PerThing::saturating_reciprocal_mul</code>.\nSee <code>PerThing::saturating_reciprocal_mul</code>.\nSaturating multiplication by the reciprocal of <code>self</code>.\tThe …\nSee <code>PerThing::saturating_reciprocal_mul_ceil</code>.\nSee <code>PerThing::saturating_reciprocal_mul_ceil</code>.\nSee <code>PerThing::saturating_reciprocal_mul_ceil</code>.\nSee <code>PerThing::saturating_reciprocal_mul_ceil</code>.\nSee <code>PerThing::saturating_reciprocal_mul_ceil</code>.\nSaturating multiplication by the reciprocal of <code>self</code>.\tThe …\nSee <code>PerThing::saturating_reciprocal_mul_floor</code>.\nSee <code>PerThing::saturating_reciprocal_mul_floor</code>.\nSee <code>PerThing::saturating_reciprocal_mul_floor</code>.\nSee <code>PerThing::saturating_reciprocal_mul_floor</code>.\nSee <code>PerThing::saturating_reciprocal_mul_floor</code>.\nDecrement self by some <code>amount</code>, saturating at zero.\nSaturating subtraction. Compute <code>self - rhs</code>, saturating at …\nSaturating subtraction. Compute <code>self - rhs</code>, saturating at …\nSaturating subtraction. Compute <code>self - rhs</code>, saturating at …\nSaturating subtraction. Compute <code>self - rhs</code>, saturating at …\nSaturating subtraction. Compute <code>self - rhs</code>, saturating at …\nSaturating subtraction. Compute <code>self - rhs</code>, saturating at …\nTry to match this to a <code>Self::Seal</code>, check <code>id</code> matches and …\nSerialize this value into the given Serde serializer.\nForces the length of the vector to <code>new_len</code>.\nShrinks the capacity of the vector with a lower bound.\nShrinks the capacity of the vector as much as possible.\nSign the given message with the corresponding private key …\nMove the position of an item from one location to another …\nExactly the same semantics as <code>slice::sort</code>.\nExactly the same semantics as <code>slice::sort_by</code>.\nExactly the same semantics as <code>slice::sort_by_key</code>.\nReturns the remaining spare capacity of the vector as a …\nCreates a splicing iterator that replaces the specified …\nReturns vector content as a slice of <code>T</code>, along with the …\nSplits the collection into two at the given index.\nTake the square root of a positive value.\nTake the square root of a positive value.\nTake the square root of a positive value.\nTake the square root of a positive value.\nReturn the product of multiplication of this value by …\nSee <code>PerThing::square</code>.\nSee <code>PerThing::square</code>.\nSee <code>PerThing::square</code>.\nSee <code>PerThing::square</code>.\nSee <code>PerThing::square</code>.\nIf defined, values in state of size bigger or equal to …\nUtility function to declare string literals backed by an …\nReturn the same error but without the attached message.\nSubtract a value and return the result.\nSubtract a value and return the result.\nSubtract a value and return the result.\nSubtract a value and return the result.\nExactly the same semantics as <code>slice::swap_remove</code>.\nExactly the same semantics as <code>Vec::swap_remove</code>.\nRemoves an element from the vector and returns it.\nRemoves and returns the value in the set, if any, that is …\nTesting utilities.\nConvert <code>self</code> to a similar rational number where …\nConvert into a <code>float</code> value.\nConvert into a <code>float</code> value.\nConvert into a <code>float</code> value.\nConvert into a <code>float</code> value.\nReturns <code>Self</code> as raw vec.\nTop trie storage data.\nPrimitives for the runtime modules.\nTransaction validity interface.\nReturns the integer part.\nExactly the same semantics as <code>Vec::truncate</code>.\nShortens the vector, keeping the first <code>len</code> elements and …\nConsume and truncate the vector <code>v</code> in order to create a new …\nCreate an instance from the first elements of the given …\nExactly the same semantics as <code>Vec::append</code>, but returns an …\nReturns the opaque data contained in the item if <code>Some</code> if …\nExactly the same semantics as <code>Vec::extend</code>, but returns an …\nExactly the same semantics as <code>BTreeMap::insert</code>, but …\nExactly the same semantics as <code>BTreeSet::insert</code>, but …\nExactly the same semantics as <code>Vec::insert</code>, but returns an …\nExactly the same semantics as <code>Vec::insert</code>, but returns an …\nAttempt to convert into a <code>PerThing</code>. This will succeed iff …\nAttempt to convert into a <code>PerThing</code>. This will succeed iff …\nAttempt to convert into a <code>PerThing</code>. This will succeed iff …\nAttempt to convert into a <code>PerThing</code>. This will succeed iff …\nReturn the next lower value to <code>self</code> or an error with the …\nConsume the map, applying <code>f</code> to each of it’s values as …\nConsumes self and mutates self via the given <code>mutate</code> …\nConsumes self and mutates self via the given <code>mutate</code> …\nConsumes self and mutates self via the given <code>mutate</code> …\nConsumes self and mutates self via the given <code>mutate</code> …\nReturn the next higher value to <code>self</code> or an error with the …\nExactly the same semantics as <code>Vec::push</code>, but returns an <code>Err</code>…\nExactly the same semantics as <code>Vec::push</code>, but returns an <code>Err</code>…\nTries to reserve capacity for at least <code>additional</code> more …\nTries to reserve the minimum capacity for at least …\nExactly the same semantics as [<code>Vec::rotate_left</code>], but …\nExactly the same semantics as [<code>Vec::rotate_right</code>], but …\nCompute the square root, rounding as desired. If it …\nCompute the square root, rounding as desired. If it …\nCompute the square root, rounding as desired. If it …\nCompute the square root, rounding as desired. If it …\nReturns the data contained in the item if <code>Some</code> if this …\nConstructs a new, empty <code>Vec&lt;T&gt;</code> with at least the specified …\nConstructs a new, empty <code>Vec&lt;T, A&gt;</code> with at least the …\nProvides a type that wraps another type and provides a …\nReturns the left value\nReturns the right value\nVerify that the given signature matches the given message …\nVerify a signature on an encoded value in a lazy manner. …\nPre-allocate <code>capacity</code> items in self.\nConstructs a new, empty <code>Vec&lt;T&gt;</code> with at least the specified …\nConstructs a new, empty <code>Vec&lt;T, A&gt;</code> with at least the …\nAllocate self with the maximum possible capacity.\nEquivalent to <code>Self::from_parts(0)</code>.\nSee <code>PerThing::zero</code>.\nSee <code>PerThing::zero</code>.\nSee <code>PerThing::zero</code>.\nSee <code>PerThing::zero</code>.\nSee <code>PerThing::zero</code>.\nZero.\n“Best effort” zeroization for <code>Vec</code>.\nApplication-specific cryptographic object.\nApplication-specific key pair.\nApplication-specific public key.\nApplication-specific signature.\nSomething that is bound to a fixed <code>RuntimeAppPublic</code>.\nTrait used for types that are really just a fixed-length …\nIdentifier of the crypto type of this application-specific …\nType which has a particular kind of crypto associated with …\nAn identifier for a specific cryptographic algorithm used …\nUsed for immutable dereferencing operations, like <code>*v</code>.\nDerivable key trait.\nAn error when deriving a key.\nA since derivation junction description. It is the single …\nThe wrapped type which is just a plain instance of <code>Pair</code>.\nThe wrapped type which is just a plain instance of <code>Public</code>.\nThe wrapped type which is just a plain instance of …\nHard (“hardened”) derivation. Public keys do not have …\nIdentifier for application-specific key type.\nAn identifier for this application-specific key type.\nThe inner type it is wrapping.\nThe overall format was invalid (e.g. the seed phrase …\nThe supplied password was invalid.\nThe derivation path was invalid (e.g. contains soft …\nThe seed phrase provided is not a valid BIP39 phrase.\nThe seed is invalid (bad content).\nThe seed has an invalid length.\nOne type is wrapped by another.\nAn identifier for a type of cryptographic key.\nThe “length” of the values of this type, which is …\nType which implements Hash in std, not when no-std (std …\nTrait suitable for typical cryptographic PKI key pair type.\nThe corresponding key pair type in this application scheme.\nThe pair key type of this crypto.\nTrait suitable for cryptographic public keys.\nThe corresponding public key type in this application …\nThe <code>RuntimeAppPublic</code> this type is bound to.\nThe type which is used to encode a public key.\nRuntime interface for an application’s public key.\nRuntime interface for a public key.\nAn error with the interpretation of a secret.\nThe type used to (minimally) encode the data required to …\nTrait suitable for cryptographic signatures.\nThe corresponding signature type in this application …\nThe signature that will be generated when signing with the …\nThe signature that will be generated when signing with the …\nThe type used to represent a signature. Can be created …\nSoft (vanilla) derivation. Public keys have a …\nA soft key was found in the path (and is unsupported).\nKey that can be encoded to/from SS58.\nThe resulting type after dereferencing.\nSimilar to <code>From</code>, except that the onus is on the part of …\nA contiguous growable array type, written as <code>Vec&lt;T&gt;</code>, short …\nOpposite of <code>IsWrappedBy</code> - denotes a type which is a simple …\nReturns all public keys for the given key type in the …\nReturns all public keys for this application in the …\nDeclares <code>Public</code>, <code>Pair</code> and <code>Signature</code> types which are …\nDeclares <code>Pair</code> type which is functionally equivalent to …\nDereferences the value.\nDerive a child key from a series of given junctions.\nEcdsa crypto types.\nEd25519 crypto types.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nMake a new key pair from secret seed material. The slice …\nGenerate a public/private pair for the given key type with …\nGenerate a public/private pair with an optional <code>seed</code> and …\nGet the public key.\nSign the given message with the corresponding private key …\nSign the given message with the corresponding private key …\nSign a message.\nSr25519 crypto types.\nReturns <code>Self</code> as raw vec.\nReturns <code>Self</code> as raw vec.\nReturn a vec filled with raw data.\nConvert from an instance of <code>T</code> to Self. This is not …\nVerify that the given signature matches the given message …\nVerify that the given signature matches the given message …\nVerify a signature on a message. Returns true if the …\nGenerate the given code if the pair type is available.\nImplement bidirectional <code>From</code> and on-way <code>AsRef</code>/<code>AsMut</code> for …\nA generic <code>AppPublic</code> wrapper type over $pair crypto; this …\nA generic <code>AppPublic</code> wrapper type over $public crypto; this …\nA generic <code>AppPublic</code> wrapper type over $public crypto; this …\nAn identifier used to match public keys against ecdsa keys\nThe byte length of public key\nA key pair.\nThe ECDSA compressed public key.\nThe byte length of signature\nA signature (a 512-bit value, plus 8 bits for recovery ID).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into wrapped generic public key type.\nConvert into wrapped generic signature type.\nConvert into wrapped generic key pair type.\nA generic <code>AppPublic</code> wrapper type over $pair crypto; this …\nA generic <code>AppPublic</code> wrapper type over $public crypto; this …\nA generic <code>AppPublic</code> wrapper type over $public crypto; this …\nAn identifier used to match public keys against ed25519 …\nThe byte length of public key\nA key pair.\nA public key.\nThe byte length of signature\nA signature.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into wrapped generic public key type.\nConvert into wrapped generic signature type.\nConvert into wrapped generic key pair type.\nA generic <code>AppPublic</code> wrapper type over $pair crypto; this …\nA generic <code>AppPublic</code> wrapper type over $public crypto; this …\nA generic <code>AppPublic</code> wrapper type over $public crypto; this …\nAn identifier used to match public keys against sr25519 …\nThe byte length of public key\nAn Schnorrkel/Ristretto x25519 (“sr25519”) key pair.\nAn Schnorrkel/Ristretto x25519 (“sr25519”) public key.\nThe byte length of signature\nAn Schnorrkel/Ristretto x25519 (“sr25519”) signature.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into wrapped generic public key type.\nConvert into wrapped generic signature type.\nConvert into wrapped generic key pair type.\nSimple wrapper around an infinitely large integer, …\nRepresentation of two limbs.\nRepresentation of a single limb.\nAdds <code>self</code> with <code>other</code>. self and other do not have to have …\nAssumed as a given primitive.\nA naive getter for limb at <code>index</code>. Note that the order is …\nDivides an <code>n + m</code> limb self by a <code>n</code> limb <code>other</code>. The result …\nDivides <code>self</code> by a single limb <code>other</code>. This can be used in …\nReturns the argument unchanged.\nRaw constructor from custom limbs. If <code>limbs</code> is empty, …\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nA naive getter for limb at <code>index</code>. Note that the order is …\nCalls <code>U::from(self)</code>.\nNumber of limbs.\nZero-pad <code>self</code> from left to reach <code>size</code> limbs. Will not make …\nreturns the least significant limb of the number.\nStrips zeros from the left side (the most significant …\nreturns the most significant limb of the number.\nMultiplies n-limb number <code>self</code> with m-limb number <code>other</code>.\nAssumed as a given primitive.\nA naive setter for limb at <code>index</code>. Note that the order is …\nSplits a <code>Double</code> limb number into a tuple of two <code>Single</code> …\nSubtracts <code>other</code> from <code>self</code>. self and other do not have to …\nCreate a new instance with <code>size</code> limbs. This prevents any …\nA compact-encodable type that should be used as the …\nTrait that allows zero-copy read/write of value-references …\nCompact-encoded variant of T. This is more space-efficient …\nAllow foreign structs to be wrap in Compact\nDerive <code>parity_scale_codec::Compact</code> and …\nSomething that can return the compact encoded length for a …\nCompact-encoded variant of &amp;’a T. This is more …\nTypes that have a constant encoded length. This implies …\nA wrapper for <code>Input</code> which tracks the number fo bytes that …\nTrait that allows zero-copy read of value-references from …\nDerive <code>parity_scale_codec::Decode</code> for struct and enum.\nExtension trait to <code>Decode</code> that ensures that the given …\nA zero-sized type signifying that the decoding finished.\nTrait that allows the length of a collection to be read, …\nExtension trait to <code>Decode</code> for decoding with a maximum …\nExtension trait to <code>Decode</code> for decoding with a maximum …\nMarker trait used for identifying types that call the …\nDerive <code>parity_scale_codec::DecodeWithMemTracking</code> for …\nTrait that allows zero-copy write of value-references to …\nDerive <code>parity_scale_codec::Encode</code> and …\nTrait that allows to append items to an encoded …\nSomething that can be encoded as a reference.\nA marker trait that tells the compiler that a type encode …\nError type.\nTrait that bound <code>EncodeLike</code> along with <code>Codec</code>. Usefull for …\nTrait that bound <code>EncodeLike</code> along with <code>Encode</code>. Usefull for …\nTrait that tells you if a given type can be …\nTrait that allows reading of data into a slice.\nWrapper that implements Input for any <code>Read</code> type.\nThe item that will be appended.\nTrait to allow itself to be serialised into a value which …\nTrait to allow itself to be serialised and prepended by a …\nItems implementing <code>MaxEncodedLen</code> have a statically known …\nDerive <code>parity_scale_codec::MaxEncodedLen</code> for struct and …\n<code>Input</code> implementation that can be used for limiting the …\nShim type because we can’t do a specialised …\nTrait that allows writing of data.\nReference wrapper that implement encode like any type that …\nThe reference type that is used for encoding.\nThe compact type; this can be\nA wrapped type.\nA marker trait for types that can be created solely from …\nA marker trait for types that wrap other encodable type.\nAppend encoding of value to <code>Self</code>.\nAppend all items in <code>iter</code> to the given <code>self_encoded</code> …\nAscend to previous structure level when decoding. This is …\nAssert that the decoding has finished.\nChain error message with description.\nReturns the compact encoded length for the given value.\nGet the number of bytes successfully read.\nAttempt to deserialise the value from input.\nDecode <code>Self</code> and consume all of the given input data.\nDecode <code>Self</code> and consume all of the given input data.\nDecode <code>Self</code> from the compact-decoded type.\nDecodes a given <code>T</code> from <code>Bytes</code>.\nDecode the vec (without a prepended len).\nDecode <code>Self</code> with the given maximum recursion depth and …\nDecode <code>Self</code> with the given maximum memory limit and …\nDescend into nested reference when decoding. This is …\nReturns the compact-encodable type.\nSCALE encode this type to bytes, possibly with the help of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the number of elements in <code>self_encoded</code>.\nUpper bound, in bytes, of the maximum encoded size of this …\nCreate a new <code>CountedInput</code> with the given input.\nCreate a new instance of <code>MemTrackingInput</code>.\nHook that is called before allocating memory on the heap.\nWrite a single byte to the output.\nRead the exact number of bytes required to fill the given …\nRead a single byte from the input.\nShould return the remaining length of the input data. If …\nReturn an encoding of <code>Self</code> prepended by given slice.\nGet the <code>used_mem</code> field.\nWrite to the output.\nPiecewise Linear function in [0, 1] -&gt; [0, 1].\nCompute <code>f(n/d)*d</code> with <code>n &lt;= d</code>. This is useful to avoid loss …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe maximum value that can be returned.\nArray of points. Must be in order from the lowest …\nAbstraction over a substrate block.\nSomething to identify a block.\nDefinition of something that the external world might want …\nA message from the runtime to the consensus engine. This …\nA message from the runtime to the consensus engine. This …\nType corresponding to DigestItem::Consensus.\nGeneric header digest.\nDigest item that is able to encode/decode ‘system’ …\nA ‘referencing view’ for digest item. Does not own its …\nAn era to describe the longevity of a transaction.\nIdentify by block header hash.\nAbstraction over a block header for a substrate chain.\nThe transaction is valid forever. The genesis hash must be …\nPeriod and phase are encoded:\nIdentify by block number.\nType of a digest item that contains raw data; this also …\nSome other thing. Unsupported and experimental.\nAny ‘non-system’ digest item, opaque to the native …\nSome other (non-prescribed) type.\nEra phase\nA pre-runtime digest.\nA pre-runtime digest.\nType corresponding to DigestItem::PreRuntime.\nAn indication for the light clients that the runtime …\nRuntime code or heap pages updated.\nPut a Seal on it. This is only used by native code, and is …\nPut a Seal on it. This is only used by native code, and is …\nType corresponding to DigestItem::Seal.\nAbstraction over a substrate block and justification.\nA payload that has been signed for an unchecked extrinsics.\nAn extrinsic right from the external world. This is …\nCast this digest item into <code>Consensus</code>\nCast this digest item into <code>PreRuntime</code>\nCast this digest item into <code>PreRuntime</code>\nCast this digest item into <code>Seal</code>\nGet the block number of the start of the era whose …\nFull block.\nTry to match this to a <code>Self::Consensus</code>, check <code>id</code> matches …\nGet the block number of the first block at which the era …\nDeconstruct the payload into it’s components.\nA chain-specific digest of data useful for light clients …\nThe accompanying extrinsics.\nThe merkle root of the extrinsics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nCreate new <code>SignedPayload</code> from raw components.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe function that should be called.\nThe function that should be called.\nCreate a block ID from a hash.\nConvenience helper for computing the hash of the header …\nThe block header.\nCreate an “immortal” transaction.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>true</code> if this is an immortal transaction.\nCheck if this block ID refers to the pre-genesis state.\nBlock justification.\nA list of logs in the digest.\nCreate a new era based on a period (which should be a …\nCreate new <code>SignedPayload</code>.\nA new header with the given number and default hash for …\nNew instance of a signed extrinsic aka “transaction”.\nNew instance of an unsigned extrinsic aka “inherent”.\nCreate a block ID from a number.\nThe block number.\nThe parent hash.\nCreate a block ID for a pre-genesis state.\nTry to match this to a <code>Self::PreRuntime</code>, check <code>id</code> matches …\nTry to match this to a <code>Self::Seal</code>, check <code>id</code> matches and …\nThe signature, address, number of extrinsics have come …\nWho this purports to be from and the number of extrinsics …\nThe state trie merkle root\nTry to match this digest item to the given opaque item …\nTry to match this digest item to the given opaque item …\nGet an encoded version of this payload.\nHelper gcd function used in Rational128 implementation.\nReturns <code>a * b / c</code> (wrapping to 128 bits) or <code>None</code> in the …\nsplit a u128 into two u64 limbs\nConvert a u128 to a u32 based biguint.\nRuntime types that existed prior to BlockBuilder API …\n<code>ApplyExtrinsicResult</code> type definition before BlockBuilder …\nAn arithmetic error.\nA bad origin.\nFailed to lookup some data.\nAt least one consumer is remaining so the account cannot …\n<code>DispatchError</code> type definition before BlockBuilder API …\n<code>DispatchOutcome</code> type definition before BlockBuilder API …\nContains the error value\nContains the error value\nA custom error in a module.\n<code>ModuleError</code> type definition before BlockBuilder API …\nThere are no providers so the account cannot be created.\nContains the success value\nContains the success value\nSome error occurred.\nAn error to do with tokens.\nThere are too many consumers so the account cannot be …\nConvert the legacy <code>ApplyExtrinsicResult</code> type to the latest …\nModule specific error value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nModule index, matching the metadata module index.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOptional error message.\nExecution context extra capabilities.\nA externalities extension for accessing the Offchain DB.\nThe requested action couldn’t been completed within a …\nDeadline was reached while we waited for this request to …\nDuration type\nAn extended externalities for offchain workers.\nThe request has finished with given status code.\nAn error enum returned by some http methods.\nOpaque type for offchain http requests.\nStatus of the HTTP request\nThe ID of the request is invalid in this context.\nThe passed ID is invalid in this context.\nThere was an IO Error while processing the request.\nAn error has occurred during the request, for example a …\nAn identifier for a type of cryptographic key.\nLocal storage is revertible and fork-aware. It means that …\nAn <code>*Externalities</code> implementation with limited capabilities.\nThe offchain database extension that will be registered at …\nChange to be applied to the offchain worker db in regards …\nOffchain DB persistent (non-fork-aware) storage.\nThe offchain worker extension that will be registered at …\nSimple blob to hold a <code>Multiaddr</code> without committing to its …\nA blob to hold information about the local node’s …\nPersistent storage is non-revertible and not fork-aware. …\nRemove the data associated with the key\nPersistent storage prefix used by the Offchain Worker API …\nOverwrite the value of an associated key\nA type of supported crypto.\nOpaque timestamp type\nAbstraction over transaction pool.\nAn externalities extension to submit transactions to the …\nReplace the value in storage if given old_value matches …\nList of addresses the node knows it can be reached as.\nRetrieve a value from storage under given key and prefix.\nA high-level helpers for making HTTP requests from …\nAppend header to the request.\nInitiates a http request given HTTP verb and the URL.\nWrite a chunk of request body.\nRead all response headers.\nRead a chunk of body response to given buffer.\nBlock and wait for the responses for given requests.\nReturns if the local node is a potential validator.\nRemoves a value in the local storage.\nSets a value in the local storage if it matches current …\nGets a value from the local storage.\nSets a value in the local storage.\nReturns information about the local node’s network state.\nPeerId of the local node in SCALE encoded.\nReturns a random seed.\nClear a storage entry under given key and prefix.\nPersist a value in storage under given key and prefix.\nSet the authorized nodes from runtime.\nPause the execution until <code>deadline</code> is reached.\nA set of storage helpers for offchain workers.\nOff-chain Storage Lock\nSubmit transaction.\nReturns current UNIX timestamp (in millis)\nDeadline has been reached.\nDELETE request\nContains the error value\nA request error\nGET request\nA collection of Headers in the response.\nA custom iterator traversing all the headers.\nA result of waiting for a pending request.\nRequest had timed out.\nRequest method (HTTP verb)\nContains the success value\nCustom verb\nPATCH request\nA struct representing an uncompleted http request.\nPOST request\nPUT request\nAn HTTP request builder.\nA HTTP response.\nA buffered byte iterator over response body.\nUnknown error has been encountered.\nAdd a header.\nSet the body of the request.\nRetrieve the body of this response.\nBody of the request\nResponse status code\nReturns current element (if any).\nSet the deadline of the request.\nSet the deadline for reading the body.\nDeadline to finish sending the request\nReturn an error that caused the iterator to return <code>None</code>.\nRetrieve a single header from the list of headers.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nStart a simple GET request\nRetrieve the headers for this response.\nRequest ID\nRequest id\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this headers into an iterator.\nChange the method of the request\nRequest method\nCreate a new Request builder with the given URL.\nMove the iterator to the next position.\nCreate new POST request with given body.\nRaw headers\nSend the request and return a handle.\nAttempts to wait for the request to finish, but will …\nAttempt to wait for all provided requests, but up to given …\nChange the URL of the request.\nRequest URL\nWait for the request to complete.\nWait for all provided requests.\nThe underlying db failed to update due to a concurrent …\nPossible errors when mutating a storage value.\nReason for not being able to provide the stored value\nA storage value with a static key.\nAn abstraction over local storage value.\nValue found but undecodable\nThe function given to us to create the value to be stored …\nRemove the associated value from the storage.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nRetrieve &amp; decode the value from storage.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new reference to a value in the fork-aware local …\nRetrieve &amp; decode the current value and set it to a new …\nCreate a new reference to a value in the persistent local …\nSet the value of the storage to encoding of given …\nLockable based on block number and timestamp.\nA deadline based on block number and time.\nAn instant type specifying i.e. a point in time.\nLockable item for use with a persisted storage lock.\nStorage based lock.\nRAII style guard for a lock.\nLockable based on the current timestamp with a …\nThe block number until which the lock is still valid <em>at </em>…\nCalculate the deadline based on a current state such as …\nProvide the current state of block number and time.\nExtend the lock by guard deadline if it already exists.\nConsume the guard but <strong>do not</strong> unlock the underlying lock.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nVerify the deadline has not expired compared to the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepeated lock attempts until the lock is successfully …\nCreate a new storage lock with a <code>default()</code> instance of …\nSnooze at least until <code>deadline</code> is reached.\nThe timestamp until which the lock is still valid <em>at least</em>.\nA single attempt to lock using the storage entry.\nExplicitly create a time and block number based storage …\nExplicitly create a time and block number based storage …\nExplicitly create a time based storage lock with a …\nCreate a new storage lock with an explicit instance of a …\nRuntime logger implementation - <code>log</code> crate backend.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nInitialize the logger.\nCalls <code>U::from(self)</code>.\nAn array type with compile-time known length.\nA type representing a sequence of bits.\n<code>bool</code> type\n<code>char</code> type\nA type using the [<code>Compact</code>] encoding\nA composite type (e.g. a struct or a tuple)\nA field of a struct-like data type.\n<code>i128</code>\n<code>i16</code>\n256 bits signed int (no rust equivalent)\n<code>i32</code>\n<code>i64</code>\n<code>i8</code>\nThe type identifying for which type info is provided.\nConvert the type definition into the portable form using a …\nIf a segment within a module path is not a proper Rust …\nA metatype abstraction.\nIf the module path does not at least have one segment.\nThe portable version of <code>Self</code>.\nRepresents the path of a type definition.\nAn error that may be encountered upon constructing …\nA read-only registry containing types in their portable …\nConstruct a <code>PortableRegistry</code>.\nRepresent a type in it’s portable form.\nA Rust primitive type.\nThe registry for space-efficient storage of type …\nA sequence type with runtime known length.\nConvenience trait for implementors, combining <code>TypeInfo</code> and …\n<code>str</code> type\nA tuple type.\nA <code>Type</code> definition with optional metadata.\nThe possible types a SCALE encodable Rust value could have.\nAn array type.\nType describing a <code>bitvec::vec::BitVec</code>.\nA type wrapped in [<code>Compact</code>].\nA composite type, consisting of either named (struct) or …\nA primitive Rust type.\nA type to refer to a sequence of elements of the same type.\nA type to refer to tuple types.\nA Enum type (consisting of variants).\nImplementors return their meta type information.\nA generic type parameter.\n<code>u128</code>\n<code>u16</code>\n256 bits unsigned int (no rust equivalent)\n<code>u32</code>\n<code>u64</code>\n<code>u8</code>\nA struct enum variant with either named (struct) or …\nA variant type (e.g. an enum)\nReturns the type of the bit ordering of the …\nThe type implementing <code>bitvec::order::BitOrder</code>.\nReturns underlying type used to store the …\nThe type implementing <code>bitvec::store::BitStore</code>.\nBuilders for defining metadata for variant types (enums), …\nReturns a new <code>FieldBuilder</code> for constructing a field.\nCreate a <code>TypeBuilder</code> the public API for constructing a <code>Type</code>…\nCreate a <code>TypeBuilder</code> the public API for constructing a <code>Type</code>…\nReturns the documentation of the field.\nReturns the documentation of the variant.\nReturns the documentation of the type\nDocumentation\nDocumentation\nDocumentation\nReturns the fields of the composite type.\nReturns the fields of the struct variant.\nReturns the types of the tuple fields.\nThe fields of the composite type.\nThe fields of the variant.\nThe types of the tuple fields.\nFinalize and return a valid <code>PortableRegistry</code> instance.\nProvides form definitions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a Path from the given segments\nCreate a Path from the given segments.\nReturns a reference to the type registered at the given ID …\nReturns the index of the <code>PortableType</code>.\nThe ID of the portable type.\nGet the ident segment of the Path\nReturns the index of the variant.\nIndex of the variant, used in <code>parity-scale-codec</code>.\nInterning data structure and associated symbol definitions.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert <code>self</code> to the portable form by using the registry …\nReturns <code>true</code> if the path is empty\nReturns the length of the array type.\nThe length of the array type.\nConverts an iterator into a Vec of the equivalent portable …\nReturns the runtime bridge to the types compile-time type …\nReturns the name of the field. None for unnamed fields.\nReturns the name of the variant.\nGet the name of the parameter.\nThe name of the field. None for unnamed fields.\nThe name of the variant.\nThe name of the generic type parameter e.g. “T”.\nConstruct a vector of <code>TypeParameter</code>s from pairs of the …\nGet the namespace segments of the Path\nCreates a new meta type from the given compile-time known …\nCreates a new struct definition with named fields.\nCreates a new field.\nCreate a new Path\nCreate a new <code>TypeDefVariant</code> with the given variants\nCreates a new variant.\nCreate a <code>Type</code>.\nCreate a new <code>TypeParameter</code>.\nCreates a new array type.\nCreates a new tuple type definition from the given types.\nCreates a new sequence type.\nCreates a new type wrapped in [<code>Compact</code>].\nCreates a new <code>TypeDefBitSequence</code> for the supplied bit …\nCreates a new empty registry.\nCreate a new <code>PortableRegistryBuilder</code>.\nConstruct a custom <code>PortableType</code>.\nCreate a new <code>TypeParameter</code> in <code>PortableForm</code>.\nCreates a new custom type definition from the given types.\nCreates a new <code>TypeDefBitSequence</code> for the supplied bit …\nCreate a new Path\nReturns the type id that would be assigned to a newly …\nCreates a new sequence type.\nReturns the path of the type\nThe unique path to the type. Can be empty for built-in …\nExports from <code>std</code>, <code>core</code> and <code>alloc</code> crates.\nRegisters the given type into the registry and returns its …\nRegister a type, returning the assigned ID.\nCalls <code>register_type</code> for each <code>MetaType</code> in the given <code>iter</code>.\nReturns the type definition for the given identifier, <code>None</code> …\nRetains only the portable types needed to express the …\nReturns the segments of the Path\nThe segments of the namespace.\nTakes a number of types and returns a vector that contains …\nReturns the type of the field.\nGet the type of the parameter.\nReturns the type of the <code>PortableType</code>.\nThe type of the field.\nThe concrete type for the type parameter.\nThe portable form of the type.\nReturns the definition of the type\nThe actual type definition\nReturns the type identifier provided by <code>core::any</code>.\nReturns the static type identifier for <code>Self</code>.\nReturns the meta type information.\nReturns a string which is the name of the type of the …\nThe name of the type of the field as it appears in the …\nReturns the element type of the array type.\nReturns the element type of the sequence type.\nReturns the [<code>Compact</code>] wrapped type, i.e. the <code>T</code> in …\nThe element type of the array type.\nThe element type of the sequence type.\nThe type wrapped in [<code>Compact</code>], i.e. the <code>T</code> in <code>Compact&lt;T&gt;</code>.\nReturns the generic type parameters of the type\nThe generic type parameters of the type in use. Empty for …\nConstruct a vector of <code>TypeParameter</code> instances with the …\nReturns an iterator over the types with their keys\nReturns all types with their associated identifiers.\nThe types contained by the <code>PortableRegistry</code>.\nCreates a new unit tuple to represent the unit type, <code>()</code>.\nReturns the variants of a variant type\nThe variants of a variant type\nThe index of the erroneous segment.\nConstruct a valid <code>Field</code>.\nProvides FieldsBuilder constructors\nBuild a set of either all named (e.g. for a struct) or all …\nA fields builder only allows named fields (e.g. a struct)\nA fields builder has no fields (e.g. a unit struct)\nBuilds a <code>Type</code>\nA fields builder only allows unnamed fields (e.g. a tuple)\nBuild a <code>Variant</code>.\nBuilds a definition of a variant type i.e an <code>enum</code>\nInitializes the type of the field as a compact type.\nConstruct a “composite” type i.e. a <code>struct</code>\nSet the variant’s discriminant.\nDoc capture is not enabled via the “docs” feature so …\nDoc capture is not enabled via the “docs” feature so …\nDoc capture is not enabled via the “docs” feature so …\nSet the type documentation, always captured even if the “…\nInitialize the documentation of a field, always captured …\nInitialize the variant’s documentation, always captured …\nAdd a named field constructed using the builder.\nAdd an unnamed field constructed using the builder.\nAdd an unnamed field constructed using the builder.\nAdd a named field constructed using the builder.\nType states for building a field.\nInitialize the variant’s fields.\nComplete building and return the set of fields\nComplete building and return a new <code>Field</code>.\nComplete building and create final <code>Variant</code> instance.\nConstruct a new <code>TypeDefVariant</code> from the initialized …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nSet the variant’s codec index.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInitialize the field name.\nFields for a type construct with named fields\nCreate a new FieldBuilder.\nCreate a new <code>VariantBuilder</code>.\nCreate a new [<code>VariantsBuilder</code>].\nSet the Path for the type\nState types for type builders which require a Path.\nInitialize the type of the field.\nInitialize the type of the field.\nInitialize the type name of a field (optional).\nSet the type parameters if it’s a generic type\nThe type construct has no fields\nFields for a type construct with unnamed fields\nConstruct a “variant” type i.e an <code>enum</code>\nAdd a variant\nState types for the <code>VariantBuilder</code> which requires an index.\nAdd a unit variant (without fields).\nA name has been assigned to the field.\nA name has not been assigned to the field.\nA type has been assigned to the field.\nA type has not been assigned to the field.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nState where the builder has assigned a Path to the type\nState where the builder has not assigned a Path to the type\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nState where the builder has assigned an index to a variant.\nState where the builder has not assigned an index to a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrait to control the internal structures of type …\nTrait to support derivation of <code>JsonSchema</code> for schema …\nA meta meta-type.\nPortable form that has its lifetime untracked in …\nThe string type.\nThe type representing the type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInterning data structure generic over the element type.\nA symbol from an interner.\nA symbol that is not lifetime tracked.\nReturns the ordered sequence of interned elements.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the symbol of the given element or <code>None</code> if it hasn…\nReturns the index to the symbol in the interner table.\nThe index to the symbol in the interner table.\nInterns the given element or returns its associated symbol …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRemoves the lifetime tracking for this symbol.\nCreates a new empty interner.\nResolves the original element given its associated symbol …\nCreates a <code>String</code> using interpolation of runtime …\nTemporal quantification.\nCreates a <code>Vec</code> containing the arguments.\nA <code>Duration</code> type to represent a span of time, typically …\nA measurement of a monotonically nondecreasing clock. …\nA measurement of the system clock, useful for talking to …\nAn error returned from the <code>duration_since</code> and <code>elapsed</code> …\nAn error which can be returned when converting a …\nAn anchor in time which can be used to create new …\nAn anchor in time which can be used to create new …\nPanics\nPanics\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nReturns the amount of time elapsed from another instant to …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nReturns the positive duration which represents how far …\nReturns the amount of time elapsed from another instant to …\nReturns the amount of time elapsed from an earlier point …\nReturns the amount of time elapsed since this instant.\nReturns the difference from this system time to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an instant corresponding to “now”.\nReturns the system time corresponding to “now”.\nReturns the amount of time elapsed from another instant to …\nReturns the amount of time elapsed from another instant to …\nPanics\nTesting block\nA message from the runtime to the consensus engine. This …\nHeader Digest\nDigest item\nAn opaque extrinsic wrapper type.\nFixed-size uninterpreted hash type with 32 bytes (256 …\nBlock Header\nSome other thing. Unsupported and experimental.\nA pre-runtime digest.\nAn indication for the light clients that the runtime …\nPut a Seal on it. This is only used by native code, and is …\nA dummy signature type, to match <code>UintAuthorityId</code>.\nTest transaction, tuple of (sender, call, signed_extra) …\nA dummy type which can be used instead of regular …\nExecutes all necessary logic needed prior to dispatch and …\nCall of the extrinsic.\nA chain-specific digest of data useful for light clients …\nList of extrinsics\nThe merkle root of the extrinsics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nBlock header\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA list of logs in the digest.\nCreate a new <code>TextXt</code>.\nThe block number.\nThe parent hash.\nSet the list of keys returned by the runtime call for all …\nSignature of the extrinsic.\nThe state trie merkle root\nConvert this authority ID into a public key.\nChecks to see if this is a valid <em>transaction</em>. It returns …\nThe account ID that this can be transformed into.\nType of the signer.\nThe type which encodes the sender identity.\nThis type can be converted into and possibly from an …\nA lookup implementation returning the <code>AccountId</code> from a …\nAny additional data that will go into the signed payload. …\nMeans of signature verification of an application key.\nInput that adds infinite number of zero after wrapped …\nAn “executable” piece of information, used by the …\nA meta trait for arithmetic.\nA meta trait for arithmetic.  Same as <code>AtLeast32Bit</code>, but …\nAn error type that indicates that the origin is invalid.\nBlake2-256 Hash implementation.\nA “checkable” piece of information, used by the …\nSomething which fulfills the abstract idea of a Substrate …\nSomething that can convert a <code>BlockId</code> to a number or a hash.\nSuper trait with all the attributes for a block number.\nType of <code>BlockNumber</code> to provide.\nGet current block number\nNumbers which have upper and lower bounds\nThe function call.\nThe type which encodes the call to be dispatched.\nType by which we can dispatch. Restricts the …\nThe call to validate\nSomething that can be checked for equality and printed out …\nExtract the digest type for a block. A “checkable” …\nReturned if <code>check</code> succeeds.\nReturned if <code>check</code> succeeds.\nPerforms addition that returns <code>None</code> instead of wrapping …\nConvenience type to work around the highly unergonomic …\nPerforms division that returns <code>None</code> instead of panicking …\nPerforms multiplication that returns <code>None</code> instead of …\nA <code>TryMorph</code> implementation to reduce a scalar by a …\nPerforms a left shift that returns <code>None</code> on shifts larger …\nPerforms a right shift that returns <code>None</code> on shifts larger …\nPerforms subtraction that returns <code>None</code> instead of wrapping …\nTrait for things that can be clear (have no bits set). For …\n…\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nInfallible conversion trait. Generic over both source and …\nReversing infallible conversion trait. Generic over both …\nA structure that performs standard conversion using the …\nAdapter which turns a Get implementation into a Convert …\n<code>?</code> formatting.\nDerive macro generating an impl of the trait <code>Debug</code>.\nShortcut to reference the <code>Info</code> type of a <code>Dispatchable</code>.\nA lazy call (module function and argument values) that can …\nPerforms addition that returns <code>ArithmeticError</code> instead of …\nPerforms self addition that returns <code>ArithmeticError</code> …\nPerforms division that returns <code>ArithmeticError</code> instead of …\nPerforms self division that returns <code>ArithmeticError</code> …\nExtends <code>FixedPointNumber</code> with the Ensure family functions.\nSimilar to <code>TryFrom</code> but returning an <code>ArithmeticError</code> error.\nSimilar to <code>TryInto</code> but returning an <code>ArithmeticError</code> error.\nPerforms multiplication that returns <code>ArithmeticError</code> …\nPerforms self multiplication that returns <code>ArithmeticError</code> …\nMeta trait that supports all immutable arithmetic <code>Ensure*</code> …\nMeta trait that supports all assigned arithmetic <code>Ensure*</code> …\nPerforms subtraction that returns <code>ArithmeticError</code> instead …\nPerforms self subtraction that returns <code>ArithmeticError</code> …\nThe error type that gets returned when a collection can’…\nThe error type that will be returned by the functions.\nSomething that acts like an <code>Extrinsic</code>.\nType for extrinsics.\nImplementor is an <code>Extrinsic</code> and provides metadata about …\nA trait for querying a single value from a type.\nImplement Get by returning Default for any type that …\nA marker trait for something that knows the type of the …\nA marker trait for something that knows the type of the …\nAbstraction around hashing\nHeader hash type\nBlock hash type.\nSuper trait with all the attributes for a hashing output.\nHashing algorithm\nExtract the hashing type for a block.\nSomething which fulfills the abstract idea of a Substrate …\nHeader type.\nUnique identifier of this signed extension.\nSome type that is able to be collapsed into an account ID. …\nA structure that performs identity conversion.\nA lookup implementation returning the input value.\nAn opaque set of information attached to the transaction. …\nA trait implementing integer square root.\nDetermine if a <code>MemberId</code> is a valid member.\nKeccak-256 Hash implementation.\nTypes bound to this opaque keys that provide the key type …\nA lazy value.\nMeans of changing one type into another in a manner …\nAn error that indicates that a lookup failed.\nFallible conversion trait returning an Option. Generic …\nReversing fallible conversion trait returning an Option. …\nA type that implements Display when in std environment.\nDefinition for a bi-directional, fallible conversion …\nA type that implements FromStr when in std environment.\nA type that implements Hash when in std environment.\nA type that implements Serialize when in std environment …\nA type that implements Serialize, DeserializeOwned and …\nA type that can be used in runtime structures.\nExtensible conversion trait. Generic over only source …\nImplementation of <code>Morph</code> which converts between types using …\nA <code>TryMorph</code> implementation to enforce an upper limit for a …\nThe <code>NodeBlock</code> type.\nHeader number.\nExtract the number type for a block.\nDefines a multiplicative identity element for <code>Self</code>.\nOpaque data type that may be destructured into a series of …\nThe type into which <code>A</code> is mutated.\nThe type into which <code>A</code> is mutated.\nThe output type of the product of <code>self</code> and <code>Other</code>.\nThe hash type produced.\nZero-sized type used to mark things that “act like” …\nShortcut to reference the <code>PostInfo</code> type of a <code>Dispatchable</code>.\nAdditional information that is returned by <code>dispatch</code>. Can …\nThe type that encodes information that can be passed from …\nTrait for things which can be printed from the runtime.\nMutator which reduces a scalar by a particular amount.\nMorpher to disregard the source value and replace with …\nMorpher to disregard the source value and replace with the …\nThe <code>RuntimeBlock</code> type.\nEvery function call from your runtime has an origin, which …\nConvenience type to work around the highly unergonomic …\nSaturating arithmetic operations, returning maximum or …\nMultiply and divide by a number that isn’t necessarily …\nThe signature type of the extrinsic.\nThe type of the address that signed the extrinsic.\nThe additional data that is specific to the signed …\nSomething that acts like a <code>SignaturePayload</code> of an <code>Extrinsic</code>…\nThe payload we carry for signed extrinsics.\nMeans by which a transaction may be extended. This type …\nInformation about a <code>SignedExtension</code> for the runtime …\nSigned extensions attached to this <code>Extrinsic</code>.\nType of the signer.\nA meta trait for all bit ops.\nType to lookup from.\nType to lookup from.\nMeans of changing one type into another in a manner …\nImplementation of <code>Morph</code> to retrieve just the first element …\nType to lookup into.\nType to lookup into.\nInput that adds infinite number of zero after wrapped …\nTry and collect into a collection <code>C</code>.\nFallible conversion trait which returns the argument in …\nReversing fallible conversion trait which returns the …\nA structure that performs standard conversion using the …\nExtensible conversion trait. Generic over only source …\nImplementation of <code>TryMorph</code> which attempts to convert …\nThe type which is returned.\nA trait for querying a single value from a type defined in …\nJust like <code>From</code> except that if the source value is too big …\nJust like <code>Into</code> except that if the source value is too big …\nThe format version of the <code>Extrinsic</code>.\nProvide validation for unsigned extrinsics.\nMeans of signature verification.\nDefines an additive identity element for <code>Self</code>.\nConstruct any additional data that should be in the signed …\nThe type of the <code>SignedExtension</code> additional signed data for …\nExecutes all necessary logic needed prior to dispatch and …\nCheck self, given an instance of Context.\nCheck self.\nPerform the equality check.\nAdds two numbers, checking for overflow. If overflow …\nDivides two numbers, checking for underflow, overflow and …\nConvert from a value of <code>T</code> into an equivalent instance of …\nConsume self to return <code>Some</code> equivalent value of <code>Option&lt;T&gt;</code>.\nMultiplies two numbers, checking for underflow or …\nRaises a value to the power of exp, returning <code>None</code> if an …\nChecked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …\nChecked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …\nSubtracts two numbers, checking for underflow. If …\nReturn the value of Self that is clear.\nMake conversion.\nAttempt to convert reference of <code>A</code> into value of <code>B</code>, …\nMake conversion back.\nAttempt to convert reference of <code>B</code> into value of <code>A</code>, …\nReturns the current block number.\nSplit the block into header and list of extrinsics.\nReturns a reference to the digest.\nGet a mutable reference to the digest.\nActually dispatch this call and return the result of it.\n@return the integer division of <code>self</code> and <code>other</code>.\nCreates an encoded block from the given <code>header</code> and …\nSCALE encode this type to bytes, possibly with the help of …\nAdds two numbers, checking for overflow.\nAdds two numbers overwriting the left hand one, checking …\nDivides two numbers, checking for overflow.\nDivides two numbers overwriting the left hand one, …\nEnsure division for integer type <code>N</code>. Equal to <code>self / d</code>.\nPerforms the conversion returning an <code>ArithmeticError</code> if …\nCreates <code>self</code> from a rational number. Equal to <code>n / d</code>.\nPerforms the conversion returning an <code>ArithmeticError</code> if …\nMultiplies two numbers, checking for overflow.\nMultiplies two numbers overwriting the left hand one, …\nEnsure multiplication for integer type <code>N</code>. Equal to <code>self * n</code>…\nRaises a value to the power of exp, returning …\nSubtracts two numbers, checking for overflow.\nSubtracts two numbers overwriting the left hand one, …\nReturns a reference to the list of extrinsics.\nReturns a reference to the extrinsics root.\nFormats the value using the given formatter.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturn the current value.\nReturn the current value.\nGet a reference to the underlying value.\nGet the decoded key with key-type ID <code>i</code>.\nGet the raw bytes of key with key-type ID <code>i</code>.\nProduce the hash of some byte-slice.\nReturns the hash of the header.\nReturns the hash of the block.\nProduce the hash of some codec-encodable value.\nReturns a reference to the header.\nThe unique identifier of the <code>SignedExtension</code>.\nFind the integer square root.\nFind the integer square root, returning <code>None</code> if the number …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTransform into an account.\nConvert into an account ID. This is infallible, and may …\nConvert this value amalgamated with the a secondary “sub…\nTrue iff no bits are set.\nIs the given <code>MemberId</code> a valid member?\nReturns <code>true</code> if <code>self</code> is equal to the multiplicative …\nIs this <code>Extrinsic</code> signed? If no information are available …\nReturns <code>true</code> if <code>self</code> is equal to the additive identity.\nReturn the key-type IDs supported by this set.\nAttempt a lookup.\nAttempt a lookup.\nReturns the largest finite number this type can represent\nAttempt to make conversion.\nAttempt to make conversion back.\nReturns the metadata for this signed extension.\nReturns the smallest finite number this type can represent\nMake conversion.\n@return the product of <code>self</code> and <code>other</code>.\nCreates new header.\nCreates new block from header and extrinsics.\nCreate new instance of the extrinsic.\nCreate a new instance from the given byte array.\nCreate a new instance from the given byte array.\nReturns a reference to the header number.\nReturns the multiplicative identity element of <code>Self</code>, <code>1</code>.\nThe ordered Patricia tree root of the given <code>input</code>.\nVerify a proof of ownership for the keys.\nCreate new implementations of the <code>Get</code> trait.\nReturns a reference to the parent hash.\nDo any post-flight stuff for an extrinsic.\nDo any pre-flight stuff for a signed transaction.\nValidate the call right before dispatch.\nDo any pre-flight stuff for a unsigned transaction.\nPrint the object.\n@return the modulo remainder of <code>self</code> and <code>other</code>.\nConvert from a value of <code>T</code> into an equivalent instance of …\nConsume self to return an equivalent value of <code>T</code>.\nIncrement self by some <code>amount</code>, saturating.\nSaturating addition. Compute <code>self + rhs</code>, saturating at the …\nDecrement self by one, saturating at zero.\nIncrement self by one, saturating.\nDecrement self by one, saturating at zero.\nSaturating multiply. Compute <code>self * rhs</code>, saturating at the …\nIncrement self by one, saturating at the numeric bounds …\nSaturating exponentiation. Compute <code>self.pow(exp)</code>, …\nDecrement self by some <code>amount</code>, saturating at zero.\nSaturating subtraction. Compute <code>self - rhs</code>, saturating at …\nUtility function only to be used in benchmarking scenarios …\nSets the extrinsic root.\nSets the header number.\nSets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…\nSets the parent hash.\nSets the state root.\nSets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.\nReturns a reference to the state root.\nConvert the given <code>block_id</code> to the corresponding block hash.\nConvert the given <code>block_id</code> to the corresponding block …\nThe Patricia tree root of the given mapping.\nConsume self and try to collect the results into <code>C</code>.\nAttempt to make conversion. If returning Result::Err, the …\nAttempt to make conversion back. If returning Result::Err, …\nTry to convert an account ID into this type. Might not …\nTry to convert an account ID into this type. Might not …\nConvert into an account ID, checking that all bytes of the …\nSame as <code>into_sub_account_truncating</code>, but ensuring that all …\nMake conversion.\nThe type of the <code>SignedExtension</code>.\nConvert from a value of <code>T</code> into an equivalent instance of …\nConsume self to return an equivalent value of <code>T</code>.\nConvert from Target back to Source.\nChecks to see if this is a valid <em>transaction</em>. It returns …\nValidate a signed transaction for the transaction queue.\nReturn the validity of the call\nValidate an unsigned transaction for the transaction queue.\nVerify a signature.\nVerify a signature. Return <code>true</code> if signature is valid for …\nReturns the additive identity element of <code>Self</code>, <code>0</code>.\nCreate a new instance which only contains zeroes as input.\nThe transaction birth block is ancient.\nAn extrinsic with a Mandatory dispatch resulted in Error. …\nGeneral error to do with the transaction’s proofs (e.g. …\nThe sending address is disabled or known to be invalid.\nThe call of the transaction is not expected.\nCould not lookup some information that is required to …\nAny other custom invalid validity that is not covered by …\nAny other custom unknown validity that is not covered by …\nContains the error value\nThe transaction would exhaust the resources of current …\nTransaction has been received externally.\nGeneral error to do with the transaction not yet being …\nTransaction is already included in block.\nThe transaction is invalid.\nAn invalid transaction validity.\nTransaction is coming from a local source.\nAn extrinsic with a mandatory dispatch tried to be …\nNo validator found for the given unsigned transaction.\nContains the success value\nGeneral error to do with the inability to pay some fees …\nGeneral error to do with the transaction being outdated …\nMinimum number of blocks a transaction will remain valid …\nPriority for a transaction. Additive. Higher is better.\nThe source of the transaction.\nTag for a transaction. No two transactions with the same …\nInformation on a transaction’s validity and, if valid, …\nErrors that can occur while checking the validity of a …\nTransaction validity can’t be determined.\nAn unknown transaction validity.\nInformation concerning a valid transaction.\n<code>ValidTransaction</code> builder.\nAdd a <code>TransactionTag</code> to the set of provided tags.\nAdd a <code>TransactionTag</code> to the set of required tags.\nFinalize the builder and produce <code>TransactionValidity</code>.\nCombine two instances into one, as a best effort. This …\nAugment the builder with existing <code>ValidTransaction</code>.\nReturns if the reason for the invalidity was block …\nReturns <code>true</code> if the reason for the error was block …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the longevity of a transaction.\nTransaction longevity\nSet the priority of a transaction.\nPriority of the transaction.\nSet the propagate flag.\nA flag indicating if the transaction should be propagated …\nProvided tags\nTransaction dependencies\nReturns if the reason for the invalidity was a mandatory …\nReturns <code>true</code> if the reason for the error was it being a …\nInitiate <code>ValidTransaction</code> builder object with a particular …\nA type that wraps another type and provides a default …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nShow the call info.\nConvert to type.\nCommon error type for runtime modules.\nShow the call info.\nreturns call name.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nreturns call name.\nThe <code>Event</code> enum of this pallet\nMoved an account from one bag to another.\nUpdated the score of some account to the given amount.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA balance was set by root.\nSome amount was burned from an account.\nSome amount was deposited (e.g. for transaction fees).\nAn account was removed whose balance was non-zero but …\nAn account was created with some free balance.\nThe <code>Event</code> enum of this pallet\nSome balance was frozen.\nTotal issuance was increased by <code>amount</code>, creating a credit …\nSome balance was locked.\nSome amount was minted into an account.\nTotal issuance was decreased by <code>amount</code>, creating a debt to …\nSome balance was moved from the reserve of the first …\nSome balance was reserved (moved from free to reserved).\nSome amount was restored into an account.\nSome amount was removed from the account (e.g. for …\nSome amount was suspended from an account (it can be …\nSome balance was thawed.\nThe <code>TotalIssuance</code> was forcefully changed.\nTransfer succeeded.\nSome balance was unlocked.\nSome balance was unreserved (moved from reserved to free).\nAn account was upgraded.\nSome amount was withdrawn from the account (e.g. for …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA bounty is approved.\nA bounty is awarded to a beneficiary.\nA bounty proposal is funded and became active.\nA bounty is cancelled.\nA bounty is claimed by beneficiary.\nA bounty expiry is extended.\nNew bounty proposal.\nA bounty proposal was rejected; funds were slashed.\nA bounty curator is accepted.\nA bounty curator is proposed.\nA bounty curator is unassigned.\nThe <code>Event</code> enum of this pallet\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls of pallet <code>Babe</code>.\nCalls of pallet <code>BagsList</code>.\nCalls of pallet <code>Balances</code>.\nCalls of pallet <code>Bounties</code>.\nShow the call info.\nCalls of pallet <code>ChildBounties</code>.\nCalls of pallet <code>ConvictionVoting</code>.\nCalls of pallet <code>ElectionProviderMultiPhase</code>.\nCalls of pallet <code>FellowshipCollective</code>.\nCalls of pallet <code>FellowshipReferenda</code>.\nCalls of pallet <code>Gear</code>.\nCalls of pallet <code>GearEthBridge</code>.\nCalls of pallet <code>GearVoucher</code>.\nCalls of pallet <code>Grandpa</code>.\nCalls of pallet <code>Identity</code>.\nCalls of pallet <code>ImOnline</code>.\nCalls of pallet <code>Multisig</code>.\nCalls of pallet <code>NominationPools</code>.\nCalls of pallet <code>Preimage</code>.\nCalls of pallet <code>Proxy</code>.\nCalls of pallet <code>Referenda</code>.\nCalls of pallet <code>Scheduler</code>.\nCalls of pallet <code>Session</code>.\nCalls of pallet <code>Staking</code>.\nCalls of pallet <code>StakingRewards</code>.\nCalls of pallet <code>Sudo</code>.\nCalls of pallet <code>System</code>.\nCalls of pallet <code>Timestamp</code>.\nCalls of pallet <code>Treasury</code>.\nCalls of pallet <code>Utility</code>.\nCalls of pallet <code>Vesting</code>.\nCalls of pallet <code>Whitelist</code>.\nreturns call name.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA child-bounty is added.\nA child-bounty is awarded to a beneficiary.\nA child-bounty is cancelled.\nA child-bounty is claimed by beneficiary.\nThe <code>Event</code> enum of this pallet\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAn account has delegated their vote to another account. …\nThe <code>Event</code> enum of this pallet\nAn [account] has cancelled a previous delegation operation.\nA vote that been removed\nAn account that has voted\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAn election failed.\nThe election has been finalized, with the given …\nThe <code>Event</code> enum of this pallet\nThere was a phase transition in a given round.\nAn account has been rewarded for their signed submission …\nAn account has been slashed for submitting an invalid …\nA solution was stored with the given compute.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nProgram is active.\nThe payment has already been attempted.\nStash is already bonded.\nAccount ID is already named.\nRewards for this era have already been claimed for this …\nThe account is already delegating.\nAccount is already a member.\nPreimage has already been noted on-chain.\nController is already paired.\nThe account currently has votes attached to it and the …\nAmount being transferred is too low to create a vesting …\nThe account already has <code>MaxVestingSchedules</code> count of …\nThe class ID supplied is invalid.\nThe referendum index provided is invalid in this context.\nInternal state has become somehow corrupted and the …\nThe referendum status is invalid for this operation.\nA nomination target was supplied that was blocked or …\nThe track identifier given was invalid.\nThe <code>Error</code> enum of this pallet.\nThe <code>Error</code> enum of this pallet.\nSome bound is not met.\nThe call was already whitelisted; No-Op.\nThe origin filter prevent the call to be dispatched.\nThe call was not whitelisted.\nThe user has enough bond and thus cannot be chilled …\nCannot reset a ledger.\nAttempt to signal GRANDPA change with one already pending.\nThe class must be supplied since it is not easily …\nCode already exists.\nCode does not exist.\nThe code supplied to <code>upload_code</code> or <code>upload_program</code> exceeds …\nCommission is too low. Must be at least <code>MinCommission</code>.\nUsed when attempting to use deprecated controller account …\nThe <code>Error</code> enum of this pallet.\nUnexpected error in state.\nBeneficiary account must pre-exist.\nThe delta cannot be zero.\nDuplicate index.\nA given equivocation report is valid but already …\nDuplicated heartbeat.\nRegistered duplicate key.\nThe spend is not yet eligible for payout.\nEmpty index.\nTargets cannot be empty.\nValue too low to create account due to existential deposit.\nA vesting schedule already exists for this account.\nTransfer/payment would kill account.\nThe balance of the asset kind is not convertible to the …\nFailed to extract the runtime version from the new runtime.\nFailed to schedule a call\nPool not replenished due to error.\nFailure to withdraw funds from the rewards pool.\nFee is changed.\nThere are already a full complement of referenda in …\nAttempting to target a stash that still has funds.\nGas limit too high.\nThe <code>Error</code> enum of this pallet.\nGear::run() already included in current block.\nError for the staking rewards pallet.\nThe <code>Error</code> enum of this pallet.\nReferendum’s decision deposit is already paid.\nThe <code>Error</code> enum of this pallet.\nThe <code>Error</code> enum of this pallet.\nProgram is terminated.\nThe payment has neither failed nor succeeded yet.\nIncorrect previous history depth input provided.\nIncorrect number of slashing spans provided.\nBalance too low to send value.\nNot enough balance to execute an action.\nCannot have a validator or nominator role, with value less …\nToo high a balance was provided that the account cannot …\nThe spend origin is valid but the amount it is allowed to …\nThe weight of the decoded call was higher than the witness.\nAn equivocation proof provided as part of an equivocation …\nInvalid era to reward.\nThe index is invalid.\nNo proposal, bounty or spend at that index.\nInvalid judgement.\nNon existent public key.\nA key ownership proof provided as part of an equivocation …\nInvalid number of nominations.\nNo nominators exist on this page.\nInvalid ownership proof.\nFailed to create a new schedule because some parameter was …\nThe signature on a username was not valid.\nSlash record index out of bounds.\nThe name of specification does not match between the …\nThe provided suffix is too long.\nThe target is invalid.\nThe username does not meet the requirements.\nThe information provided is incorrect.\nThe issuance cannot be modified since it is already …\nThe provided judgement was for a different identity.\nJudgement given.\nError that occurs when there is an issue paying for …\nAccount liquidity restrictions prevent withdrawal.\nA error in the list interface implementation.\nMaximum number of votes reached.\nMessage wasn’t found in the mailbox.\nMessage queue processing is disabled.\nCommon error type for runtime modules.\nA multi-block migration is ongoing and prevents the …\nAttempt to use a non-named function on a named task.\nKey setting account is not live, so it’s impossible to …\nThe authority cannot allocate any more usernames.\nNo associated validator ID for account.\nThe deposit cannot be refunded since none was made.\nNo identity found.\nNo keys are associated with this account.\nMessage gas tree is not found.\nCan not schedule more unlock chunks.\nThe actor has no permission to conduct the action.\nThe origin is not sufficiently privileged to do the …\nThe deposit refunder is not the depositor.\nThe actor has no permission to conduct the action right …\nNo track exists for the proposal origin.\nCan not rebond without unlocking chunks.\nThe requested username does not exist.\nSuicide called when the account has non-default composite …\nThere is a non-zero reference count preventing the account …\nThere are no further records to be removed.\nDelegation to oneself makes no sense.\nThe payout was not yet attempted/claimed.\nThe user is not authorized to perform this action.\nNot a controller account.\nThe account is not currently delegating.\nNot enough funds available to withdraw.\nThe username cannot be forcefully removed because it can …\nAccount isn’t found.\nCannot find the scheduled call.\nAccount is not a member.\nAccount isn’t named.\nThe preimage cannot be removed since it has not yet been …\nPoll is not ongoing.\nReferendum is not ongoing.\nSub-account isn’t owned by sender.\nThe given poll index is unknown or has closed.\nThe preimage request cannot be removed since no …\nItems are not sorted and unique.\nNot a stash account.\nSender is not a sub-account.\nThe sender does not have permission to issue a username.\nThe account given is not vesting.\nThe given account did not vote on the poll.\nNo upgrade authorized.\nThere was nothing to do in the advancement.\nThe given poll is still ongoing.\nAttempt to signal GRANDPA pause when the authority set isn…\nThere was some issue with the mechanism of payment.\nThe <code>Error</code> enum of this pallet.\nThe preimage does not exist.\nThe preimage is stored with a different length than the …\nProgram already exists.\nFailed to create a program.\nProgram with the specified id is not found.\nThe program rent logic is disabled.\nProposal has not been approved.\nThe queue of the track is empty.\nThe <code>Error</code> enum of this pallet.\nThe member’s rank is too low to vote.\nThe <code>Error</code> enum of this pallet.\nA preimage may not be removed when there are outstanding …\nSender must be the Sudo account.\nSetting this username requires a signature, but none was …\nReschedule failed because it does not change scheduled …\nAttempt to signal GRANDPA resume when the authority set isn…\nBlock count doesn’t cover MinimalResumePeriod.\nProvided reward destination is not allowed.\nThe new member to exchange is the same as the old member\nAn index was out of bounds of the vesting schedules.\nThe <code>Error</code> enum of this pallet.\nError for the session pallet.\nThe specification version is not allowed to decrease …\nThe spend has expired and cannot be claimed.\nThe <code>Error</code> enum of this pallet.\nSticky judgement.\nError for the Sudo pallet.\nError for the System pallet\nGiven target block number is in the past.\nPreimage is too large to store on-chain.\nToo few hashes were requested to be upgraded (i.e. zero).\nMore than <code>MAX_HASH_UPGRADE_BULK_COUNT</code> hashes were …\nToo many approvals in the queue.\nToo many calls batched.\nNumber of freezes exceed <code>MaxFreezes</code>.\nNumber of holds exceed <code>VariantCountOf&lt;T::RuntimeHoldReason&gt;</code>…\nThe max member count for the rank has been reached.\nThere are too many nominators in the system. Governance …\nMaximum amount of registrars reached. Cannot add any more.\nNumber of named reserves exceed <code>MaxReserves</code>.\nToo many subs-accounts.\nToo many nomination targets supplied.\nThere are too many validator candidates in the system. …\nCannot signal forced change so soon after last.\nError for the treasury pallet.\nThe submitted code is not authorized.\nThe preimage of the call hash could not be loaded.\nThe call could not be decoded.\nAny deposit cannot be refunded until after the decision is …\nThe username is already taken.\nThe <code>Error</code> enum of this pallet.\nError for the vesting pallet.\nVesting balance too high to send value.\nOperation not allowed for virtual stakers.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA member <code>who</code> has been added.\nThe member <code>who</code> had their <code>AccountId</code> changed to <code>new_who</code>.\nThe member <code>who</code> of given <code>rank</code> has been removed from the …\nThe member <code>who</code>se rank has been changed to the given <code>rank</code>.\nThe member <code>who</code> has voted for the <code>poll</code> with the given <code>vote</code> …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA referendum has been approved and its proposal has been …\nA referendum has been cancelled.\nA referendum has ended its confirmation phase and is ready …\nThe decision deposit has been placed.\nThe decision deposit has been refunded.\nA referendum has moved into the deciding phase.\nA deposit has been slashed.\nThe <code>Event</code> enum of this pallet\nA referendum has been killed.\nMetadata for a referendum has been cleared.\nMetadata for a referendum has been set.\nA proposal has been rejected by referendum.\nThe submission deposit has been refunded.\nA referendum has been submitted.\nA referendum has been timed out without being decided.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAny data related to program codes changed.\nThe <code>Event</code> enum of this pallet\nUser sends message to program, which was successfully …\nMessages execution delayed (waited) and successfully added …\nMessage is ready to continue its execution and was removed …\nThe result of processing the messages within the block.\nAny data related to programs changed.\nThe pseudo-inherent extrinsic that runs queue processing …\nMessage marked as “read” and removes it from <code>Mailbox</code>. …\nSomebody sent a message to the user.\nGrandpa validator’s keys set was hashed and set in …\nBridge got cleared on initialization of the second block …\nOptimistically, single-time called event defining that …\nBridge was paused and temporary doesn’t process any …\nBridge was unpaused and from now on processes any incoming …\nPallet Gear Eth Bridge’s event.\nA new message was queued for bridging.\nMerkle root of the queue changed: new messages queued …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nPallet Gear Voucher event.\nVoucher has been declined (set to expired state).\nVoucher has been issued.\nVoucher has been revoked by owner.\nVoucher has been updated.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>Event</code> enum of this pallet\nNew authority set has been applied.\nCurrent authority set has been paused.\nCurrent authority set has been resumed.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA username authority was added.\nA username authority was removed.\nA dangling username (as in, a username corresponding to an …\nThe <code>Event</code> enum of this pallet\nA name was cleared, and the given balance returned.\nA name was removed and the given balance slashed.\nA name was set or reset (which will remove all judgements).\nA judgement was given by a registrar.\nA judgement was asked from a registrar.\nA judgement request was retracted.\nA queued username passed its expiration without being …\nA username was set as a primary and can be looked up from …\nA registrar was added.\nA sub-identity was added to an identity and the deposit …\nA sub-identity was removed from an identity and the …\nA sub-identity was cleared, and the given deposit …\nA username was queued, but <code>who</code> must accept it prior to …\nA username was set for <code>who</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAt the end of the session, no offence was committed.\nThe <code>Event</code> enum of this pallet\nA new heartbeat was received from <code>AuthorityId</code>.\nAt the end of the session, at least one validator was …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>Event</code> enum of this pallet\nA multisig operation has been approved by someone.\nA multisig operation has been cancelled.\nA multisig operation has been executed.\nA new multisig operation has begun.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA member has became bonded in a pool.\nA pool has been created.\nA pool has been destroyed.\nEvents of this pallet.\nA member has been removed from a pool.\nTopped up deficit in frozen ED of the reward pool.\nClaimed excess frozen ED of af the reward pool.\nA payout has been made to a member.\nA pool’s commission <code>change_rate</code> has been changed.\nPool commission claim permission has been updated.\nPool commission has been claimed.\nA pool’s commission setting has been changed.\nA pool’s maximum commission setting has been changed.\nThe active balance of pool <code>pool_id</code> has been slashed to …\nThe roles of a pool have been updated to the given new …\nThe state of a pool has changed\nA member has unbonded from their pool.\nThe unbond pool at <code>era</code> of pool <code>pool_id</code> has been slashed to …\nA member has withdrawn from their pool.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nEvents type.\nThere is an offence reported of the given <code>kind</code> happened at …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA preimage has ben cleared.\nThe <code>Event</code> enum of this pallet\nA preimage has been noted.\nA preimage has been requested.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAn announcement was placed to make a call in the future.\nThe <code>Event</code> enum of this pallet\nA proxy was added.\nA proxy was executed correctly, with the given.\nA proxy was removed.\nA pure account has been created by new proxy with given …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA referendum has been approved and its proposal has been …\nA referendum has been cancelled.\nA referendum has ended its confirmation phase and is ready …\nThe decision deposit has been placed.\nThe decision deposit has been refunded.\nA referendum has moved into the deciding phase.\nA deposit has been slashed.\nThe <code>Event</code> enum of this pallet\nA referendum has been killed.\nMetadata for a referendum has been cleared.\nMetadata for a referendum has been set.\nA proposal has been rejected by referendum.\nThe submission deposit has been refunded.\nA referendum has been submitted.\nA referendum has been timed out without being decided.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.")