searchState.loadedDescShard("gclient", 0, "Utility library for writing end-to-end tests for Gear …\nA wrapper around <code>anyhow::Error</code>.\nOccurs when the balance reaches its maximum value.\nOccurs when a block identified by the specified hash …\nOccurs when a hash of a block identified by the specified …\nAny data related to program codes changed.\nA wrapper around <code>parity_scale_codec::Error</code>.\nDispatch status returned after processing a message.\nContains the error value\nCommon error type.\nEvent listener that allows catching and processing events …\nOccurs when an event of the expected type cannot be found.\nOccurs when an event cannot be found in pre-queried events.\nEvents processing trait.\nOccurs when events are stopped. Unreachable.\nOccurs when attempting to iterate events without a …\nExecution failed.\nThe API instance contains methods to access the node.\nThe <code>Event</code> enum of this pallet\nA wrapper around <code>gsdk::Error</code>.\nOccurs when decoding hex string failed.\nA wrapper around <code>std::io::Error</code>.\nOccurs when the batch hasn’t been fully processed.\nOccurs when a block cannot be found within the specified …\nUser sends message to program, which was successfully …\nMessages execution delayed (waited) and successfully added …\nMessage is ready to continue its execution and was removed …\nThe result of processing the messages within the block.\nA wrapper of module error <code>gsdk::metadata::ModuleError</code>.\nMessage has not been processed.\nContains the success value\nOccurs when being migrated program already exists in …\nAny data related to programs changed.\nThe pseudo-inherent extrinsic that runs queue processing …\n<code>Result</code> type with a predefined error type (<code>Error</code>).\nOccurs when a storage entry with a specified address …\nA wrapper around <code>subxt::error::Error</code>.\nSubxt core error\nSuccessful execution.\nOccurs when a timestamp record cannot be found in the …\nOccurs when parsing domain url failed.\nMessage marked as “read” and removes it from <code>Mailbox</code>. …\nSomebody sent a message to the user.\nFull WebSocket address required to specify the node.\nOccurs when parsing websocket domain failed.\nOccurs when trying to upload a Wasm binary with the wrong …\nReturn the signer account address.\nGet bank account data by <code>account_id</code> at specified block.\nReturn the total gas limit per block (also known as a gas …\nReturn a number of the specified block identified by the …\nCheck whether new blocks are produced as expected.\nCheck whether at least one new block has been produced …\nCreate api builder\nExecute an RPC to calculate the gas required to create a …\nSame as <code>calculate_create_gas</code>, but calculates the gas at …\nExecute an RPC to calculate the gas required to handle a …\nSame as <code>calculate_handle_gas</code>, but calculates the gas at …\nExecute an RPC call is used to figure out the reply on …\nSame as <code>calculate_reply_for_handle</code>, but calculates the gas …\nExecute an RPC to calculate the gas required to reply to …\nSame as <code>calculate_reply_gas</code>, but calculates the gas at the …\nExecute an RPC to calculate the gas required to upload a …\nSame as <code>calculate_upload_gas</code>, but calculates the gas at …\nClaim value from the mailbox message identified by …\nClaim a batch of values from the mailbox.\nRead and return contents of a Wasm file specified by the …\nSame as <code>create_program_bytes</code>, but initializes a newly …\nCreate a new program from a previously uploaded code …\nCreate a batch of programs.\nDecline existing and not expired voucher.\nDecline existing and not expired voucher with voucher.\nCreate and init a new <code>GearApi</code> instance that will be used …\nReturn the address of the local node working in developer …\nCreate and init a new <code>GearApi</code> instance via spawning a new …\nReturn the address of the local node working in developer …\nCheck whether the processing of a message identified by …\nCheck whether the processing of a message identified by …\nCheck whether processing batch of messages identified by …\nCheck whether processing batch of messages identified by …\nReturn vector of events contained in the specified block …\nReturn vector of events contained in blocks since the …\nThe expected average block time at which BABE should be …\nCheck whether <code>DispatchStatus</code> is <code>Failed</code>.\nSet the free balance of the <code>to</code> account to <code>new_free</code>.\nGet the free funds balance of the account identified by …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a hash of a block identified by its <code>block_number</code>.\nGet a message identified by <code>message_id</code> from the <code>account_id</code>…\nGet up to <code>count</code> messages from the mailbox for the provided …\nGet a message identified by <code>message_id</code> from the mailbox.\nGet up to <code>count</code> messages from the mailbox.\nGet all pages with their data for program at specified …\nGet specified pages with their data for program at …\nConvert hex string to byte array.\nCreate and init a new <code>GearApi</code> specified by its <code>address</code> on …\nCreate and init a new <code>GearApi</code> specified by its <code>address</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIssue a new voucher.\nReturn a hash of the last block.\nReturn a number of the last block (also known as block …\nReturn a timestamp of the last block.\nReturn vector of events contained in the last block.\nCheck whether the message identified by <code>message_id</code> has …\nCheck whether the message identified by <code>message_id</code> has …\nCheck whether the batch of messages identified by …\nCheck whether the batch of messages identified by …\nMigrates an active program identified by <code>src_program_id</code> …\nCreate a new <code>WSAddress</code> from a host <code>domain</code> and <code>port</code>.\nReads the next event from the stream and returns the …\nCheck whether <code>DispatchStatus</code> is <code>NotExecuted</code>.\nThis function is called if a received event has an …\nReturns time elapsed since <code>UNIX_EPOCH</code> in microseconds.\nReturns original wasm code for the given <code>code_id</code> at …\nPrint node logs.\nEvent processing function.\nMultiple events processing function.\nReturns <code>ActiveProgram</code> for the given <code>program_id</code> at specified\nCheck whether the message queue processing is stopped or …\nLook through finalized blocks to find the <code>QueueNotProcessed</code>\nLooks at two blocks from the stream and checks if the Gear …\nRead the program’s metahash.\nSame as <code>read_metahash</code>, but read the program’s metahash …\nRead the program’s state as decoded data.\nSame as <code>read_state</code>, but reads the program’s state at the …\nRead the program’s state as a byte vector.\nSame as <code>read_state_bytes</code>, but reads the program’s state …\nReplace entire program memory with one saved earlier in …\nGet details of a reply to the message identified by …\nGet details of a reply to the message identified by …\nGet the reserved funds balance of the account identified by\nRevoke existing voucher.\nGet the next number used once (<code>nonce</code>) from the node.\nSave program (identified by <code>program_id</code>) memory dump to the …\nSame as <code>send_message_bytes</code>, but sends a message with …\nSend a message containing a byte slice <code>payload</code> to the …\nSend a batch of messages.\nSame as <code>send_message_bytes</code>, but sends a message using …\nSame as <code>send_message_bytes_with_voucher</code>, but sends a …\nSame as <code>send_reply_bytes</code>, but sends a reply with encoded …\nSend a reply containing a byte slice <code>payload</code> to the …\nSend a batch of replies.\nSame as <code>send_reply_bytes</code>, but sends a reply using voucher.\nSame as <code>send_reply_bytes_with_voucher</code>, but sends a reply …\nUpgrade the runtime with the <code>code</code> containing the Wasm code …\nUpgrade the runtime by reading the code from the file …\nUpgrade the runtime with the <code>code</code> containing the Wasm code …\nUpgrade the runtime by reading the code from the file …\nSet the number used once (<code>nonce</code>) that will be used while …\nCreate an <code>EventListener</code> to subscribe and handle …\nCheck whether <code>DispatchStatus</code> is <code>Success</code>.\nGet the total balance of the account identified by …\nTransfer <code>value</code> to <code>destination</code>’s account.\nTransfer <code>value</code> to <code>destination</code>’s account.\nTransfer <code>value</code> to <code>destination</code>’s account.\nTry to create a new <code>WSAddress</code> from <code>domain</code> and <code>port</code>.\nUpdate existing voucher.\nUpload Wasm <code>code</code> to be used for creating a new program.\nUpload a batch of codes.\nUpload Wasm code from the file referenced by <code>path</code> to be …\nSame as <code>upload_code</code>, but upload code using voucher.\nSame as <code>upload_program_bytes</code>, but initializes a newly …\nUpload a new program from the file referenced by <code>path</code> and …\nUpload a new program and initialize it with a byte slice …\nUpload a batch of programs.\nUpload a new program from the file referenced by <code>path</code> and …\nConvert the address to the URL string.\nCreate and init a new <code>GearApi</code> instance that will be used …\nReturn the default address of the public Vara node.\nCreate and init a new <code>GearApi</code> instance via spawning a new …\nCreate and init a new <code>GearApi</code> instance that will be used …\nReturn the default address of the public Vara testnet node.\nReturn the full path to the optimized Wasm binary file …\nChange SURI to the provided <code>suri</code> and return <code>Self</code>.\nProgram is active.\nThe payment has already been attempted.\nStash is already bonded.\nAccount ID is already named.\nRewards for this era have already been claimed for this …\nThe account is already delegating.\nAccount is already a member.\nPreimage has already been noted on-chain.\nController is already paired.\nThe account currently has votes attached to it and the …\nAmount being transferred is too low to create a vesting …\nThe account already has <code>MaxVestingSchedules</code> count of …\nThe class ID supplied is invalid.\nThe referendum index provided is invalid in this context.\nInternal state has become somehow corrupted and the …\nThe referendum status is invalid for this operation.\nA nomination target was supplied that was blocked or …\nThe track identifier given was invalid.\nThe <code>Error</code> enum of this pallet.\nThe <code>Error</code> enum of this pallet.\nSome bound is not met.\nThe call was already whitelisted; No-Op.\nThe origin filter prevent the call to be dispatched.\nThe call was not whitelisted.\nThe user has enough bond and thus cannot be chilled …\nCannot reset a ledger.\nAttempt to signal GRANDPA change with one already pending.\nThe class must be supplied since it is not easily …\nCode already exists.\nCode does not exist.\nThe code supplied to <code>upload_code</code> or <code>upload_program</code> exceeds …\nCommission is too low. Must be at least <code>MinCommission</code>.\nUsed when attempting to use deprecated controller account …\nThe <code>Error</code> enum of this pallet.\nUnexpected error in state.\nBeneficiary account must pre-exist.\nThe delta cannot be zero.\nDuplicate index.\nA given equivocation report is valid but already …\nDuplicated heartbeat.\nRegistered duplicate key.\nThe spend is not yet eligible for payout.\nEmpty index.\nTargets cannot be empty.\nValue too low to create account due to existential deposit.\nA vesting schedule already exists for this account.\nTransfer/payment would kill account.\nThe balance of the asset kind is not convertible to the …\nFailed to extract the runtime version from the new runtime.\nFailed to schedule a call\nPool not replenished due to error.\nFailure to withdraw funds from the rewards pool.\nFee is changed.\nThere are already a full complement of referenda in …\nAttempting to target a stash that still has funds.\nGas limit too high.\nThe <code>Error</code> enum of this pallet.\nGear::run() already included in current block.\nError for the staking rewards pallet.\nThe <code>Error</code> enum of this pallet.\nReferendum’s decision deposit is already paid.\nThe <code>Error</code> enum of this pallet.\nThe <code>Error</code> enum of this pallet.\nProgram is terminated.\nThe payment has neither failed nor succeeded yet.\nIncorrect previous history depth input provided.\nIncorrect number of slashing spans provided.\nBalance too low to send value.\nNot enough balance to execute an action.\nCannot have a validator or nominator role, with value less …\nToo high a balance was provided that the account cannot …\nThe spend origin is valid but the amount it is allowed to …\nThe weight of the decoded call was higher than the witness.\nAn equivocation proof provided as part of an equivocation …\nInvalid era to reward.\nThe index is invalid.\nNo proposal, bounty or spend at that index.\nInvalid judgement.\nNon existent public key.\nA key ownership proof provided as part of an equivocation …\nInvalid number of nominations.\nNo nominators exist on this page.\nInvalid ownership proof.\nFailed to create a new schedule because some parameter was …\nThe signature on a username was not valid.\nSlash record index out of bounds.\nThe name of specification does not match between the …\nThe provided suffix is too long.\nThe target is invalid.\nThe username does not meet the requirements.\nThe information provided is incorrect.\nThe issuance cannot be modified since it is already …\nThe provided judgement was for a different identity.\nJudgement given.\nError that occurs when there is an issue paying for …\nAccount liquidity restrictions prevent withdrawal.\nA error in the list interface implementation.\nMaximum number of votes reached.\nMessage wasn’t found in the mailbox.\nMessage queue processing is disabled.\nCommon error type for runtime modules.\nA multi-block migration is ongoing and prevents the …\nAttempt to use a non-named function on a named task.\nKey setting account is not live, so it’s impossible to …\nThe authority cannot allocate any more usernames.\nNo associated validator ID for account.\nThe deposit cannot be refunded since none was made.\nNo identity found.\nNo keys are associated with this account.\nMessage gas tree is not found.\nCan not schedule more unlock chunks.\nThe actor has no permission to conduct the action.\nThe origin is not sufficiently privileged to do the …\nThe deposit refunder is not the depositor.\nThe actor has no permission to conduct the action right …\nNo track exists for the proposal origin.\nCan not rebond without unlocking chunks.\nThe requested username does not exist.\nSuicide called when the account has non-default composite …\nThere is a non-zero reference count preventing the account …\nThere are no further records to be removed.\nDelegation to oneself makes no sense.\nThe payout was not yet attempted/claimed.\nThe user is not authorized to perform this action.\nNot a controller account.\nThe account is not currently delegating.\nNot enough funds available to withdraw.\nThe username cannot be forcefully removed because it can …\nAccount isn’t found.\nCannot find the scheduled call.\nAccount is not a member.\nAccount isn’t named.\nThe preimage cannot be removed since it has not yet been …\nPoll is not ongoing.\nReferendum is not ongoing.\nSub-account isn’t owned by sender.\nThe given poll index is unknown or has closed.\nThe preimage request cannot be removed since no …\nItems are not sorted and unique.\nNot a stash account.\nSender is not a sub-account.\nThe sender does not have permission to issue a username.\nThe account given is not vesting.\nThe given account did not vote on the poll.\nNo upgrade authorized.\nThere was nothing to do in the advancement.\nThe given poll is still ongoing.\nAttempt to signal GRANDPA pause when the authority set isn…\nThere was some issue with the mechanism of payment.\nThe <code>Error</code> enum of this pallet.\nThe preimage does not exist.\nThe preimage is stored with a different length than the …\nProgram already exists.\nFailed to create a program.\nProgram with the specified id is not found.\nThe program rent logic is disabled.\nProposal has not been approved.\nThe queue of the track is empty.\nThe <code>Error</code> enum of this pallet.\nThe member’s rank is too low to vote.\nThe <code>Error</code> enum of this pallet.\nA preimage may not be removed when there are outstanding …\nSender must be the Sudo account.\nSetting this username requires a signature, but none was …\nReschedule failed because it does not change scheduled …\nAttempt to signal GRANDPA resume when the authority set isn…\nBlock count doesn’t cover MinimalResumePeriod.\nProvided reward destination is not allowed.\nThe new member to exchange is the same as the old member\nAn index was out of bounds of the vesting schedules.\nThe <code>Error</code> enum of this pallet.\nError for the session pallet.\nThe specification version is not allowed to decrease …\nThe spend has expired and cannot be claimed.\nThe <code>Error</code> enum of this pallet.\nSticky judgement.\nError for the Sudo pallet.\nError for the System pallet\nGiven target block number is in the past.\nPreimage is too large to store on-chain.\nToo few hashes were requested to be upgraded (i.e. zero).\nMore than <code>MAX_HASH_UPGRADE_BULK_COUNT</code> hashes were …\nToo many approvals in the queue.\nToo many calls batched.\nNumber of freezes exceed <code>MaxFreezes</code>.\nNumber of holds exceed <code>VariantCountOf&lt;T::RuntimeHoldReason&gt;</code>…\nThe max member count for the rank has been reached.\nThere are too many nominators in the system. Governance …\nMaximum amount of registrars reached. Cannot add any more.\nNumber of named reserves exceed <code>MaxReserves</code>.\nToo many subs-accounts.\nToo many nomination targets supplied.\nThere are too many validator candidates in the system. …\nCannot signal forced change so soon after last.\nError for the treasury pallet.\nThe submitted code is not authorized.\nThe preimage of the call hash could not be loaded.\nThe call could not be decoded.\nAny deposit cannot be refunded until after the decision is …\nThe username is already taken.\nThe <code>Error</code> enum of this pallet.\nError for the vesting pallet.\nVesting balance too high to send value.\nOperation not allowed for virtual stakers.\nThe <code>Error</code> enum of this pallet.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConcrete implementation of Hasher using Blake2b 256-bit …\nTrait used for types that are really just a fixed-length …\nHex-serialized shim for <code>Vec&lt;u8&gt;</code>.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\n<code>Debug</code> log level.\n<code>Debug</code> log level filter.\nTrait that allows zero-copy read of value-references from …\nDerive <code>parity_scale_codec::Decode</code> for struct and enum.\nA since derivation junction description. It is the single …\nTrait that allows zero-copy write of value-references to …\nDerive <code>parity_scale_codec::Encode</code> and …\n<code>Error</code> log level.\n<code>Error</code> log level filter.\nThe error type that gets returned when a collection can’…\nA trait for querying a single value from a type.\nImplement Get by returning Default for any type that …\nFixed-size uninterpreted hash type with 20 bytes (160 …\nFixed-size uninterpreted hash type with 32 bytes (256 …\nFixed-size uninterpreted hash type with 64 bytes (512 …\nHard (“hardened”) derivation. Public keys do not have …\nTrait describing an object that can hash a slice of bytes. …\n<code>Info</code> log level.\n<code>Info</code> log level filter.\nConcrete implementation of Hasher using Keccak 256-bit …\nThe “length” of the values of this type, which is …\nThe length in bytes of the <code>Hasher</code> output.\nA log level matching the one from <code>log</code> crate.\nLog level filter that expresses which log levels should be …\nMaximum value.\nMaximum value.\nThe maximum number of bytes that can be allocated at one …\nItems implementing <code>MaxEncodedLen</code> have a statically known …\nDerive <code>parity_scale_codec::MaxEncodedLen</code> for struct and …\n<code>Off</code> log level filter.\nStores the encoded <code>RuntimeMetadata</code> for the native side as …\nSimple blob to hold a <code>PeerId</code> without committing to its …\nThe output type of the <code>Hasher</code>\nTrait suitable for typical cryptographic PKI key pair type.\nTrait suitable for cryptographic public keys.\nThe type which is used to encode a public key.\nThe type used to (minimally) encode the data required to …\nThe type used to represent a signature. Can be created …\nSoft (vanilla) derivation. Public keys have a …\nWhat to use to build <code>HashMap</code>s with this <code>Hasher</code>.\nSimple 4 byte identifier.\n<code>Trace</code> log level.\n<code>Trace</code> log level filter.\nTry and collect into a collection <code>C</code>.\nThe type which is returned.\nProvide a simple 4 byte identifier for a type.\nA trait for querying a single value from a type defined in …\nLittle-endian large integer type 256-bit unsigned integer.\nLittle-endian large integer type 512-bits unsigned integer.\nThe void type - it cannot exist.\n<code>Warn</code> log level.\n<code>Warn</code> log level filter.\nComputes the absolute difference between self and other.\nComputes the absolute difference between self and other.\nExtracts a byte slice containing the entire fixed hash.\nExtracts a byte slice containing the entire fixed hash.\nExtracts a byte slice containing the entire fixed hash.\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nReturns a mutable raw pointer to the value.\nReturns a mutable raw pointer to the value.\nReturns a mutable raw pointer to the value.\nReturns a constant raw pointer to the value.\nReturns a constant raw pointer to the value.\nReturns a constant raw pointer to the value.\nReturn a slice filled with raw data.\nReturn a slice filled with raw data.\nConversion to u128 with overflow checking\nConversion to u128 with overflow checking\nConversion to u32 with overflow checking\nConversion to u32 with overflow checking\nConversion to u64 with overflow checking\nConversion to u64 with overflow checking\nConversion to usize with overflow checking\nConversion to usize with overflow checking\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nReturn if specific bit is set.\nReturn if specific bit is set.\nReturn the least number of bits needed to represent the …\nReturn the least number of bits needed to represent the …\nDo a Blake2 128-bit hash and return result.\nDo a Blake2 256-bit hash and return result.\nDo a Blake2 512-bit hash and return result.\nDo a Blake2 512-bit hash and place result in <code>dest</code>.\nDo a Blake2 64-bit hash and return result.\nBuild a bounded btree-map from the given literals.\nBuild a bounded vec from the given literals.\nReturn specific byte.\nReturn specific byte.\nChecked addition. Returns <code>None</code> if overflow occurred.\nChecked addition. Returns <code>None</code> if overflow occurred.\nChecked division. Returns <code>None</code> if <code>other == 0</code>.\nChecked division. Returns <code>None</code> if <code>other == 0</code>.\nChecked multiplication. Returns <code>None</code> if overflow occurred.\nChecked multiplication. Returns <code>None</code> if overflow occurred.\nChecked negation. Returns <code>None</code> unless <code>self == 0</code>.\nChecked negation. Returns <code>None</code> unless <code>self == 0</code>.\nChecked exponentiation. Returns <code>None</code> if overflow occurred.\nChecked exponentiation. Returns <code>None</code> if overflow occurred.\nChecked modulus. Returns <code>None</code> if <code>other == 0</code>.\nChecked modulus. Returns <code>None</code> if <code>other == 0</code>.\nChecked subtraction. Returns <code>None</code> if overflow occurred.\nChecked subtraction. Returns <code>None</code> if overflow occurred.\nProvides a const function for converting a hex string to a …\nHash conversion. Used to convert between unbound …\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nCryptographic utilities.\nGeneric byte array which can be specialized with a marker …\nAttempt to deserialise the value from input.\nAttempt to deserialize the value from input into a …\nAttempt to deserialize the value from input into a …\nContains the <code>crate::defer!</code> macro for <em>deferring</em> the …\nExecutes the given code when the current scope is dropped.\nDerive a child key from a series of given junctions.\nReturns a pair <code>(self / other, self % other)</code>.\nReturns a pair <code>(self / other, self % other)</code>.\nSimple ECDSA secp256k1 API.\nSimple Ed25519 API.\nConvert self to an owned vector.\nConvert self to an owned vector.\nConvert self to a slice and append it to the destination.\nConvert self to a slice and append it to the destination.\nSCALE encode this type to bytes, possibly with the help of …\nSCALE encode this type to bytes, possibly with the help of …\nSCALE encode this type to bytes, possibly with the help of …\nReturns the fixed encoded size of the type.\nReturns the fixed encoded size of the type.\nCalculates the encoded size.\nCalculates the encoded size.\nCreate <code>10**n</code> as this type.\nCreate <code>10**n</code> as this type.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a hash type from the given bytes array of fixed …\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given bytes array of fixed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given bytes array of fixed …\nConstructs a hash type from the given reference to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts from big endian representation bytes in memory.\nConverts from big endian representation bytes in memory.\nConvert from a decimal string.\nConvert from a decimal string.\nConverts from little endian representation bytes in memory.\nConverts from little endian representation bytes in memory.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nReturns the KeyPair from the English BIP39 seed <code>phrase</code>, or …\nReturns the KeyPair from the English BIP39 seed <code>phrase</code>, or …\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerate new key pair from the provided <code>seed</code>.\nGenerate new key pair from the provided <code>seed</code>.\nMake a new key pair from secret seed material. The slice …\nA new instance from the given slice that should be …\nA new instance from the given slice that should be …\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreates a hash type instance from the given string.\nCreates a hash type instance from the given string.\nCreates a hash type instance from the given string.\nConverts a string slice in a given base to an integer. …\nConverts a string slice in a given base to an integer. …\nInterprets the string <code>s</code> in order to generate a key pair.\nInterprets the string <code>s</code> in order to generate a key pair.\nInterprets the string <code>s</code> in order to generate a key Pair. …\nInterprets the string <code>s</code> in order to generate a key Pair. …\nMultiplies two 256-bit integers to produce full 512-bit …\nGenerate new secure (random) key pair.\nGenerate new secure (random) key pair.\nGenerates a macro for checking if a certain feature is …\nGenerate new secure (random) key pair and provide the …\nGenerate new secure (random) key pair and provide the …\nReturn the current value.\nReturn the current value.\nCreate a new hard (hardened) DeriveJunction from a given, …\nConsume self to return a hard derive junction with the …\nA fixed hash type.\nCompute the hash of the provided slice of bytes returning …\nProvides a const array from given string literal.\nWrapper type for byte collections that outputs hex.\nMacro for creating <code>Maybe*</code> marker traits.\nMacro for creating <code>Maybe*</code> marker traits.\nGet a reference to the inner junction id.\nCompute the highest <code>n</code> such that <code>n * n &lt;= self</code>.\nCompute the highest <code>n</code> such that <code>n * n &lt;= self</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if the junction is hard.\nReturn <code>true</code> if the junction is soft.\nWhether this is zero.\nWhether this is zero.\nReturns <code>true</code> if no bits are set.\nReturns <code>true</code> if no bits are set.\nReturns <code>true</code> if no bits are set.\nDo a keccak 256-bit hash and return result.\nDo a keccak 512-bit hash and return result.\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the size of this hash in bytes.\nReturns the size of this hash in bytes.\nReturns the size of this hash in bytes.\nLow 2 words (u128)\nLow 2 words (u128)\nConversion to u32\nConversion to u32\nLow word (u64)\nLow word (u64)\nInitialize a key-value collection from array.\nUpper bound, in bytes, of the maximum encoded size of this …\nThe maximum value which can be inhabited by this type.\nThe maximum value which can be inhabited by this type.\nCreates a new instance with the given metadata blob.\nCreate new <code>OpaquePeerId</code>\nOffchain workers types\nOne (multiplicative identity) of this type.\nOne (multiplicative identity) of this type.\nAddition which overflows and returns a flag if it does.\nAddition which overflows and returns a flag if it does.\nMultiply with overflow, returning a flag if it does.\nMultiply with overflow, returning a flag if it does.\nNegation with overflow.\nNegation with overflow.\nFast exponentiation by squaring. Returns result and …\nFast exponentiation by squaring. Returns result and …\nSubtraction which underflows and returns a flag if it does.\nSubtraction which underflows and returns a flag if it does.\nAPI for using a pair of crypto schemes together.\nCreate new implementations of the <code>Get</code> trait.\nFast exponentiation by squaring …\nFast exponentiation by squaring …\nGet the public key.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content …\nCreate a new hash with cryptographically random content …\nCreate a new hash with cryptographically random content …\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value using the …\nAssign <code>self</code> to a cryptographically random value using the …\nAssign <code>self</code> to a cryptographically random value using the …\nReturns a new fixed hash where all bits are set to the …\nReturns a new fixed hash where all bits are set to the …\nReturns a new fixed hash where all bits are set to the …\nAddition which saturates at the maximum value (Self::MAX).\nAddition which saturates at the maximum value (Self::MAX).\nMultiplication which saturates at the maximum value..\nMultiplication which saturates at the maximum value..\nSubtraction which saturates at zero.\nSubtraction which saturates at zero.\nDo a sha2 256-bit hash and return result.\nSign a message.\nIf possible give a hint of expected size of the encoding.\nIf possible give a hint of expected size of the encoding.\nAttempt to skip the encoded value from input.\nAttempt to skip the encoded value from input.\nCreate a new soft (vanilla) DeriveJunction from a given, …\nConsume self to return a soft derive junction with the …\nSimple sr25519 (Schnorr-Ristretto) API.\nTypes that should only be used for testing!\nWrite to the slice in big-endian format.\nWrite to the slice in big-endian format.\nReturns the inner bytes array.\nReturns the inner bytes array.\nReturns the inner bytes array.\nWrite to the slice in little-endian format.\nWrite to the slice in little-endian format.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturn a vec filled with raw data.\nReturn a <code>Vec&lt;u8&gt;</code> filled with raw data.\nReturn a <code>Vec&lt;u8&gt;</code> filled with raw data.\nReturns the number of trailing zeros in the binary …\nReturns the number of trailing zeros in the binary …\nShareable Substrate traits.\nConsume self and try to collect the results into <code>C</code>.\nDo a XX 128-bit hash and return result.\nDo a XX 128-bit hash and place result in <code>dest</code>.\nDo a XX 256-bit hash and return result.\nDo a XX 256-bit hash and place result in <code>dest</code>.\nDo a XX 64-bit hash and return result.\nDo a XX 64-bit hash and place result in <code>dest</code>.\nAn unsigned fixed-size integer.\nConsume self to return the chain code.\nConvert self to a slice and then invoke the given closure …\nConvert self to a slice and then invoke the given closure …\nVerify a signature on a message. Returns true if the …\nMacro for exporting functions from wasm in with the …\nZero (additive identity) of this type.\nZero (additive identity) of this type.\nReturns a new zero-initialized fixed hash.\nReturns a new zero-initialized fixed hash.\nReturns a new zero-initialized fixed hash.\nA bounded map based on a B-Tree.\nA bounded set based on a B-Tree.\nA bounded slice.\nA bounded vector.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nConst getter for a basic type.\nThe error type that gets returned when a collection can’…\nA trait for querying a single value from a type.\nImplement Get by returning Default for any type that …\nTry and collect into a collection <code>C</code>.\nThe type which is returned.\nA trait for querying a single value from a type defined in …\nA weakly bounded vector.\nTraits, types and structs to support a bounded BTreeMap.\nBuild a bounded btree-map from the given literals.\nTraits, types and structs to support a bounded <code>BTreeSet</code>.\nTraits, types and structs to support putting a bounded …\nBuild a bounded vec from the given literals.\nReturn the current value.\nReturn the current value.\nCreate new implementations of the <code>Get</code> trait.\nConsume self and try to collect the results into <code>C</code>.\nTraits, types and structs to support putting a bounded …\nMemory allocation APIs\nA module for working with borrowed data.\nThe <code>Box&lt;T&gt;</code> type for heap allocation.\nThe <code>ByteStr</code> and <code>ByteString</code> types and trait implementations.\nCollection types.\nUtilities related to FFI bindings.\nCreates a <code>String</code> using interpolation of runtime …\nSingle-threaded reference-counting pointers. ‘Rc’ …\nUtilities for the slice primitive type.\nUtilities for the <code>str</code> primitive type.\nA UTF-8–encoded, growable string.\nThread-safe reference-counting pointers.\nTypes and Traits for working with asynchronous tasks.\nA contiguous growable array type with heap-allocated …\nCreates a <code>Vec</code> containing the arguments.\nThe <code>AllocError</code> error indicates an allocation failure that …\nAn implementation of <code>Allocator</code> can allocate, grow, shrink, …\nThe global memory allocator.\nA memory allocator that can be registered as the standard …\nLayout of a block of memory.\nThe <code>LayoutError</code> is returned when the parameters given to …\nAllocates memory with the global allocator.\nAllocates memory as described by the given <code>layout</code>.\nAllocates zero-initialized memory with the global …\nBehaves like <code>alloc</code>, but also ensures that the contents are …\nAttempts to allocate a block of memory.\nBehaves like <code>allocate</code>, but also ensures that the returned …\nCreates a “by reference” adapter for this instance of …\nDeallocates memory with the global allocator.\nDeallocates the block of memory at the given <code>ptr</code> pointer …\nDeallocates the memory referenced by <code>ptr</code>.\nAttempts to extend the memory block.\nBehaves like <code>grow</code>, but also ensures that the new contents …\nSignals a memory allocation error.\nReallocates memory with the global allocator.\nShrinks or grows a block of memory to the given <code>new_size</code> …\nAttempts to shrink the memory block.\nA trait for borrowing data.\nA trait for mutably borrowing data.\nBorrowed data.\nA clone-on-write smart pointer.\nOwned data.\nThe resulting type after obtaining ownership.\nA generalization of <code>Clone</code> to borrowed data.\nImmutably borrows from an owned value.\nMutably borrows from an owned value.\nUses borrowed data to replace owned data, usually by …\nCreates an owned Cow&lt;’a, B&gt; with the default value for …\nSCALE encode this type to bytes, possibly with the help of …\nConverts a <code>String</code> into an <code>Owned</code> variant. No heap …\nConverts a string slice into a <code>Borrowed</code> variant. No heap …\nReturns the argument unchanged.\nCreates a <code>Borrowed</code> variant of <code>Cow</code> from a reference to <code>Vec</code>.\nConverts a <code>&amp;</code><code>CString</code> into a borrowed <code>Cow</code> without copying or …\nCreates a clone-on-write pointer from an owned instance of …\nMoves the string into a <code>Cow::Owned</code>.\nCreates a clone-on-write pointer from a reference to …\nConverts a <code>String</code> reference into a <code>Borrowed</code> variant. No …\nConverts a <code>CStr</code> into a borrowed <code>Cow</code> without copying or …\nConverts a <code>CString</code> into an owned <code>Cow</code> without copying or …\nCreates a clone-on-write pointer from a reference to <code>Path</code>.\nCreates a <code>Borrowed</code> variant of <code>Cow</code> from a reference to an …\nConverts the string reference into a <code>Cow::Borrowed</code>.\nConverts the string reference into a <code>Cow::Borrowed</code>.\nCreates an <code>Owned</code> variant of <code>Cow</code> from an owned instance of …\nCreates a <code>Borrowed</code> variant of <code>Cow</code> from a slice.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nExtracts the owned data.\nReturns true if the data is borrowed, i.e. if <code>to_mut</code> would …\nReturns true if the data is owned, i.e. if <code>to_mut</code> would be …\nAcquires a mutable reference to the owned form of the data.\nCreates owned data from borrowed data, usually by cloning.\nA pointer type that uniquely owns a heap allocation of …\nThinBox.\nConstructs a <code>Box&lt;T&gt;</code> by calling the <code>exchange_malloc</code> lang …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nMoves a type to the heap with its <code>Metadata</code> stored in the …\nMoves a type to the heap with its <code>Metadata</code> stored in the …\nMoves a type to the heap with its <code>Metadata</code> stored in the …\nA wrapper for <code>&amp;[u8]</code> representing a human-readable string …\nA wrapper for <code>Vec&lt;u8&gt;</code> representing a human-readable string …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreates a <code>ByteStr</code> slice from anything that can be …\nThe memory allocator returned an error\nAn ordered map based on a B-Tree.\nAn ordered set based on a B-Tree.\nA priority queue implemented with a binary heap.\nError due to the computed capacity exceeding the collection…\nA doubly-linked list with owned nodes.\nThe error type for <code>try_reserve</code> methods.\nDetails of the allocation that caused a <code>TryReserveError</code>\nA double-ended queue implemented with a growable ring …\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …\nMoves all elements from <code>other</code> into <code>self</code>, leaving <code>other</code> …\nMoves all elements from <code>other</code> into <code>self</code>, leaving <code>other</code> …\nMoves all elements from <code>other</code> to the end of the list.\nMoves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …\nReturns a pair of slices which contain, in order, the …\nReturns a slice of all values in the underlying vector, in …\nReturns a pair of slices which contain, in order, the …\nProvides a reference to the back element, or <code>None</code> if the …\nProvides a reference to the back element, or <code>None</code> if the …\nProvides a mutable reference to the back element, or <code>None</code> …\nProvides a mutable reference to the back element, or <code>None</code> …\nA priority queue implemented with a binary heap.\nBinary searches this <code>VecDeque</code> for a given element. If the …\nBinary searches this <code>VecDeque</code> with a comparator function.\nBinary searches this <code>VecDeque</code> with a key extraction …\nReturns the intersection of <code>self</code> and <code>rhs</code> as a new …\nReturns the union of <code>self</code> and <code>rhs</code> as a new <code>BTreeSet&lt;T&gt;</code>.\nReturns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …\nAn ordered map based on a B-Tree.\nAn ordered set based on a B-Tree.\nReturns the number of elements the binary heap can hold …\nReturns the number of elements the deque can hold without …\nDrops all items from the binary heap.\nClears the map, removing all elements.\nClears the set, removing all elements.\nRemoves all elements from the <code>LinkedList</code>.\nClears the deque, removing all values.\nOverwrites the contents of <code>self</code> with a clone of the …\nOverwrites the contents of <code>self</code> with a clone of the …\nOverwrites the contents of <code>self</code> with a clone of the …\nReturns <code>true</code> if the set contains an element equal to the …\nReturns <code>true</code> if the <code>LinkedList</code> contains an element equal …\nReturns <code>true</code> if the deque contains an element equal to the …\nReturns <code>true</code> if the map contains a value for the specified …\nProvides a cursor at the back element.\nProvides a cursor with editing operations at the back …\nProvides a cursor at the front element.\nProvides a cursor with editing operations at the front …\nCreates an empty <code>BinaryHeap&lt;T&gt;</code>.\nCreates an empty <code>BTreeMap</code>.\nCreates an empty <code>BTreeSet</code>.\nCreates an empty <code>LinkedList&lt;T&gt;</code>.\nCreates an empty deque.\nVisits the elements representing the difference, i.e., the …\nClears the binary heap, returning an iterator over the …\nRemoves the specified range from the deque in bulk, …\nClears the binary heap, returning an iterator over the …\nSCALE encode this type to bytes, possibly with the help of …\nSCALE encode this type to bytes, possibly with the help of …\nSCALE encode this type to bytes, possibly with the help of …\nSCALE encode this type to bytes, possibly with the help of …\nSCALE encode this type to bytes, possibly with the help of …\nGets the given key’s corresponding entry in the map for …\nGets the given value’s corresponding entry in the set …\nCreates an iterator that visits elements (key-value pairs) …\nCreates an iterator that visits elements in the specified …\nCreates an iterator which uses a closure to determine if …\nReturns the contents of the “front” slice as returned …\nReturns a reference to the first element in the set, if …\nReturns the first entry in the map for in-place …\nReturns the first key-value pair in the map. The key in …\nReturns the argument unchanged.\nConverts a <code>Vec&lt;T&gt;</code> into a <code>BinaryHeap&lt;T&gt;</code>.\nConverts a <code>[(K, V); N]</code> into a <code>BTreeMap&lt;K, V&gt;</code>.\nReturns the argument unchanged.\nConverts a <code>[T; N]</code> into a <code>BTreeSet&lt;T&gt;</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>[T; N]</code> into a <code>LinkedList&lt;T&gt;</code>.\nReturns the argument unchanged.\nTurn a <code>Vec&lt;T&gt;</code> into a <code>VecDeque&lt;T&gt;</code>.\nConverts a <code>[T; N]</code> into a <code>VecDeque&lt;T&gt;</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAlways evaluates to <code>TryReserveErrorKind::CapacityOverflow</code>.\nConstructs a <code>BTreeMap&lt;K, V&gt;</code> from an iterator of key-value …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nProvides a reference to the front element, or <code>None</code> if the …\nProvides a reference to the front element, or <code>None</code> if the …\nProvides a mutable reference to the front element, or <code>None</code> …\nProvides a mutable reference to the front element, or <code>None</code> …\nReturns a reference to the value corresponding to the key.\nReturns a reference to the element in the set, if any, …\nProvides a reference to the element at the given index.\nReturns the key-value pair corresponding to the supplied …\nReturns a mutable reference to the value corresponding to …\nProvides a mutable reference to the element at the given …\nInserts the given <code>value</code> into the set if it is not present, …\nInserts a value computed from <code>f</code> into the set if the given …\nReturns a reference to the value corresponding to the …\nInserts a key-value pair into the map.\nAdds a value to the set.\nInserts an element at <code>index</code> within the deque, shifting all …\nVisits the elements representing the intersection, i.e., …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a consuming iterator, that is, one that moves each …\nGets an owning iterator over the entries of the map, …\nGets an iterator for moving out the <code>BTreeSet</code>’s contents …\nConsumes the list into an iterator yielding elements by …\nConsumes the deque into a front-to-back iterator yielding …\nReturns an iterator which retrieves elements in heap order.\nCreates a consuming iterator visiting all the keys, in …\nConsumes the <code>BinaryHeap</code> and returns a vector in sorted …\nCreates a consuming iterator visiting all the values, in …\nConsumes the <code>BinaryHeap</code> and returns the underlying vector …\nReturns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …\nChecks if the binary heap is empty.\nReturns <code>true</code> if the map contains no elements.\nReturns <code>true</code> if the set contains no elements.\nReturns <code>true</code> if the <code>LinkedList</code> is empty.\nReturns <code>true</code> if the deque is empty.\nReturns <code>true</code> if the set is a subset of another, i.e., <code>other</code>…\nReturns <code>true</code> if the set is a superset of another, i.e., …\nReturns an iterator visiting all values in the underlying …\nGets an iterator over the entries of the map, sorted by …\nGets an iterator that visits the elements in the <code>BTreeSet</code> …\nProvides a forward iterator.\nReturns a front-to-back iterator.\nGets a mutable iterator over the entries of the map, …\nProvides a forward iterator with mutable references.\nReturns a front-to-back iterator that returns mutable …\nGets an iterator over the keys of the map, in sorted order.\nDetails about the allocation that caused the error\nReturns a reference to the last element in the set, if any.\nReturns the last entry in the map for in-place …\nReturns the last key-value pair in the map. The key in …\nReturns the length of the binary heap.\nReturns the number of elements in the map.\nReturns the number of elements in the set.\nReturns the length of the <code>LinkedList</code>.\nReturns the number of elements in the deque.\nA doubly-linked list with owned nodes.\nReturns a <code>Cursor</code> pointing at the gap before the smallest …\nReturns a <code>Cursor</code> pointing at the gap before the smallest …\nReturns a <code>CursorMut</code> pointing at the gap before the …\nReturns a <code>CursorMut</code> pointing at the gap before the …\nRearranges the internal storage of this deque so it is one …\nCreates an empty <code>BinaryHeap</code> as a max-heap.\nMakes a new, empty <code>BTreeMap</code>.\nMakes a new, empty <code>BTreeSet</code>.\nCreates an empty <code>LinkedList</code>.\nCreates an empty deque.\nCreates an empty <code>BinaryHeap</code> as a max-heap, using <code>A</code> as …\nMakes a new empty BTreeMap with a reasonable choice for B.\nMakes a new <code>BTreeSet</code> with a reasonable choice of B.\nConstructs an empty <code>LinkedList&lt;T, A&gt;</code>.\nCreates an empty deque.\nReturns the index of the partition point according to the …\nReturns the greatest item in the binary heap, or <code>None</code> if …\nReturns a mutable reference to the greatest item in the …\nRemoves the greatest item from the binary heap and returns …\nRemoves the last element from a list and returns it, or …\nRemoves the last element from the deque and returns it, or …\nRemoves and returns the last element from the deque if the …\nRemoves and returns the first element in the map. The key …\nRemoves the first element from the set and returns it, if …\nRemoves the first element and returns it, or <code>None</code> if the …\nRemoves the first element and returns it, or <code>None</code> if the …\nRemoves and returns the first element from the deque if …\nRemoves and returns the last element in the map. The key …\nRemoves the last element from the set and returns it, if …\nPushes an item onto the binary heap.\nAppends an element to the back of a list.\nAppends an element to the back of the deque.\nAdds an element first in the list.\nPrepends an element to the deque.\nConstructs a double-ended iterator over a sub-range of …\nConstructs a double-ended iterator over a sub-range of …\nCreates an iterator that covers the specified range in the …\nConstructs a mutable double-ended iterator over a …\nCreates an iterator that covers the specified mutable …\nFill <code>buf</code> with the contents of the “front” slice as …\nRemoves a key from the map, returning the value at the key …\nIf the set contains an element equal to the value, removes …\nRemoves the element at the given index and returns it.\nRemoves and returns the element at <code>index</code> from the deque. …\nRemoves a key from the map, returning the stored key and …\nAdds a value to the set, replacing the existing element, …\nReserves capacity for at least <code>additional</code> elements more …\nReserves capacity for at least <code>additional</code> more elements to …\nReserves the minimum capacity for at least <code>additional</code> …\nReserves the minimum capacity for at least <code>additional</code> more …\nModifies the deque in-place so that <code>len()</code> is equal to …\nModifies the deque in-place so that <code>len()</code> is equal to …\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRetains only the elements specified by the predicate.\nRotates the double-ended queue <code>n</code> places to the left.\nRotates the double-ended queue <code>n</code> places to the right.\nDiscards capacity with a lower bound.\nShrinks the capacity of the deque with a lower bound.\nDiscards as much additional capacity as possible.\nShrinks the capacity of the deque as much as possible.\nSplits the collection into two at the given key. Returns …\nSplits the collection into two at the value. Returns a new …\nSplits the list into two at the given index. Returns …\nSplits the deque into two at the given index.\nReturns the difference of <code>self</code> and <code>rhs</code> as a new <code>BTreeSet&lt;T&gt;</code>…\nSwaps elements at indices <code>i</code> and <code>j</code>.\nRemoves an element from anywhere in the deque and returns …\nRemoves an element from anywhere in the deque and returns …\nVisits the elements representing the symmetric difference, …\nRemoves and returns the element in the set, if any, that …\nShortens the deque, keeping the first <code>len</code> elements and …\nShortens the deque, keeping the last <code>len</code> elements and …\nTries to insert a key-value pair into the map, and returns …\nTries to reserve capacity for at least <code>additional</code> elements …\nTries to reserve capacity for at least <code>additional</code> more …\nTries to reserve the minimum capacity for at least …\nTries to reserve the minimum capacity for at least …\nCreates an empty deque with space for at least <code>capacity</code> …\nVisits the elements representing the union, i.e., all the …\nReturns a <code>Cursor</code> pointing at the gap after the greatest key\nReturns a <code>Cursor</code> pointing at the gap after the greatest …\nReturns a <code>CursorMut</code> pointing at the gap after the greatest …\nReturns a <code>CursorMut</code> pointing at the gap after the greatest …\nGets an iterator over the values of the map, in order by …\nGets a mutable iterator over the values of the map, in …\nA double-ended queue (deque) implemented with a growable …\nCreates an empty <code>BinaryHeap</code> with at least the specified …\nCreates an empty deque with space for at least <code>capacity</code> …\nCreates an empty <code>BinaryHeap</code> with at least the specified …\nCreates an empty deque with space for at least <code>capacity</code> …\nThe layout of allocation request that failed\nA priority queue implemented with a binary heap.\nA draining iterator over the elements of a <code>BinaryHeap</code>.\nA draining iterator over the elements of a <code>BinaryHeap</code>.\nAn owning iterator over the elements of a <code>BinaryHeap</code>.\nAn iterator over the elements of a <code>BinaryHeap</code>.\nStructure wrapping a mutable reference to the greatest …\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nCreates an empty <code>binary_heap::Iter</code>.\nCreates an empty <code>binary_heap::IntoIter</code>.\nRemoves heap elements in heap order.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRemoves the peeked value from the heap and returns it.\nSifts the current element to its new position.\nAn ordered map based on a B-Tree.\nA cursor over a <code>BTreeMap</code>.\nA cursor over a <code>BTreeMap</code> with editing operations.\nA cursor over a <code>BTreeMap</code> with editing operations, and …\nA view into a single entry in a map, which may either be …\nAn iterator produced by calling <code>extract_if</code> on BTreeMap.\nAn owning iterator over the entries of a <code>BTreeMap</code>, sorted …\nAn owning iterator over the keys of a <code>BTreeMap</code>.\nAn owning iterator over the values of a <code>BTreeMap</code>.\nAn iterator over the entries of a <code>BTreeMap</code>.\nA mutable iterator over the entries of a <code>BTreeMap</code>.\nAn iterator over the keys of a <code>BTreeMap</code>.\nAn occupied entry.\nA view into an occupied entry in a <code>BTreeMap</code>. It is part of …\nThe error returned by <code>try_insert</code> when the key already …\nAn iterator over a sub-range of entries in a <code>BTreeMap</code>.\nA mutable iterator over a sub-range of entries in a …\nError type returned by <code>CursorMut::insert_before</code> and …\nA vacant entry.\nA view into a vacant entry in a <code>BTreeMap</code>. It is part of …\nAn iterator over the values of a <code>BTreeMap</code>.\nA mutable iterator over the values of a <code>BTreeMap</code>.\nProvides in-place mutable access to an occupied entry …\nReturns a read-only cursor pointing to the same location …\nReturns a read-only cursor pointing to the same location …\nCreates an empty <code>btree_map::Iter</code>.\nCreates an empty <code>btree_map::IterMut</code>.\nCreates an empty <code>btree_map::IntoIter</code>.\nCreates an empty <code>btree_map::Keys</code>.\nCreates an empty <code>btree_map::Values</code>.\nCreates an empty <code>btree_map::ValuesMut</code>.\nCreates an empty <code>btree_map::IntoKeys</code>.\nCreates an empty <code>btree_map::IntoValues</code>.\nCreates an empty <code>btree_map::Range</code>.\nCreates an empty <code>btree_map::RangeMut</code>.\nThe entry in the map that was already occupied.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGets a reference to the value in the entry.\nGets a mutable reference to the value in the entry.\nSets the value of the entry with the <code>VacantEntry</code>’s key, …\nSets the value of the entry with the <code>OccupiedEntry</code>’s key,\nInserts a new key-value pair into the map in the gap that …\nInserts a new key-value pair into the map in the gap that …\nInserts a new key-value pair into the map in the gap that …\nInserts a new key-value pair into the map in the gap that …\nInserts a new key-value pair into the map in the gap that …\nInserts a new key-value pair into the map in the gap that …\nInserts a new key-value pair into the map in the gap that …\nInserts a new key-value pair into the map in the gap that …\nSets the value of the entry, and returns an <code>OccupiedEntry</code>.\nSets the value of the entry with the <code>VacantEntry</code>’s key, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTake ownership of the key.\nConverts the entry into a mutable reference to its value.\nReturns a reference to this entry’s key.\nGets a reference to the key that would be used when …\nGets a reference to the key in the entry.\nAdvances the cursor to the next gap, returning the key and …\nAdvances the cursor to the next gap, returning the key and …\nAdvances the cursor to the next gap, returning the key and …\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nEnsures a value is in the entry by inserting, if empty, …\nReturns a reference to the key and value of the next …\nReturns a reference to the key and value of the next …\nReturns a reference to the key and value of the next …\nReturns a reference to the key and value of the previous …\nReturns a reference to the key and value of the previous …\nReturns a reference to the key and value of the previous …\nAdvances the cursor to the previous gap, returning the key …\nAdvances the cursor to the previous gap, returning the key …\nAdvances the cursor to the previous gap, returning the key …\nTakes the value of the entry out of the map, and returns …\nTake ownership of the key and value from the map.\nRemoves the next element from the <code>BTreeMap</code>.\nRemoves the next element from the <code>BTreeMap</code>.\nRemoves the preceding element from the <code>BTreeMap</code>.\nRemoves the preceding element from the <code>BTreeMap</code>.\nThe value which was not inserted, because the entry was …\nConverts the cursor into a <code>CursorMutKey</code>, which allows …\nAn ordered set based on a B-Tree.\nA cursor over a <code>BTreeSet</code>.\nA cursor over a <code>BTreeSet</code> with editing operations.\nA cursor over a <code>BTreeSet</code> with editing operations, and …\nA lazy iterator producing elements in the difference of …\nA view into a single entry in a set, which may either be …\nAn iterator produced by calling <code>extract_if</code> on BTreeSet.\nA lazy iterator producing elements in the intersection of …\nAn owning iterator over the items of a <code>BTreeSet</code> in …\nAn iterator over the items of a <code>BTreeSet</code>.\nAn occupied entry.\nA view into an occupied entry in a <code>BTreeSet</code>. It is part of …\nAn iterator over a sub-range of items in a <code>BTreeSet</code>.\nA lazy iterator producing elements in the symmetric …\nA lazy iterator producing elements in the union of <code>BTreeSet</code>…\nError type returned by <code>CursorMut::insert_before</code> and …\nA vacant entry.\nA view into a vacant entry in a <code>BTreeSet</code>. It is part of …\nReturns a read-only cursor pointing to the same location …\nReturns a read-only cursor pointing to the same location …\nCreates an empty <code>btree_set::Iter</code>.\nCreates an empty <code>btree_set::IntoIter</code>.\nCreates an empty <code>btree_set::Range</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns a reference to this entry’s value.\nGets a reference to the value in the entry.\nGets a reference to the value that would be used when …\nSets the value of the entry, and returns an <code>OccupiedEntry</code>.\nSets the value of the entry with the VacantEntry’s value.\nInserts a new element into the set in the gap that the …\nInserts a new element into the set in the gap that the …\nInserts a new element into the set in the gap that the …\nInserts a new element into the set in the gap that the …\nInserts a new element into the set in the gap that the …\nInserts a new element into the set in the gap that the …\nInserts a new element into the set in the gap that the …\nInserts a new element into the set in the gap that the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTake ownership of the value.\nAdvances the cursor to the next gap, returning the element …\nAdvances the cursor to the next gap, returning the  …\nAdvances the cursor to the next gap, returning the element …\nEnsures a value is in the entry by inserting if it was …\nReturns a reference to the next element without moving the …\nReturns a reference to the next element without moving the …\nReturns a reference to next element without moving the …\nReturns a reference to the previous element without moving …\nReturns a reference to the previous element without moving …\nReturns a reference to the previous element without moving …\nAdvances the cursor to the previous gap, returning the …\nAdvances the cursor to the previous gap, returning the …\nAdvances the cursor to the previous gap, returning the …\nTakes the value out of the entry, and returns it.\nRemoves the next element from the <code>BTreeSet</code>.\nRemoves the next element from the <code>BTreeSet</code>.\nRemoves the preceding element from the <code>BTreeSet</code>.\nRemoves the preceding element from the <code>BTreeSet</code>.\nConverts the cursor into a <code>CursorMutKey</code>, which allows …\nA cursor over a <code>LinkedList</code>.\nA cursor over a <code>LinkedList</code> with editing operations.\nAn iterator produced by calling <code>extract_if</code> on LinkedList.\nAn owning iterator over the elements of a <code>LinkedList</code>.\nAn iterator over the elements of a <code>LinkedList</code>.\nA mutable iterator over the elements of a <code>LinkedList</code>.\nA doubly-linked list with owned nodes.\nReturns a read-only cursor pointing to the current element.\nProvides a reference to the cursor’s parent list.\nProvides a read-only reference to the cursor’s parent …\nProvides a reference to the back element of the cursor’s …\nProvides a reference to the back element of the cursor’s …\nProvides a mutable reference to back element of the cursor…\nReturns a reference to the element that the cursor is …\nReturns a reference to the element that the cursor is …\nCreates an empty <code>linked_list::Iter</code>.\nCreates an empty <code>linked_list::IntoIter</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nProvides a reference to the front element of the cursor’…\nProvides a reference to the front element of the cursor’…\nProvides a mutable reference to the front element of the …\nReturns the cursor position index within the <code>LinkedList</code>.\nReturns the cursor position index within the <code>LinkedList</code>.\nInserts a new element into the <code>LinkedList</code> after the …\nInserts a new element into the <code>LinkedList</code> before the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMoves the cursor to the next element of the <code>LinkedList</code>.\nMoves the cursor to the next element of the <code>LinkedList</code>.\nMoves the cursor to the previous element of the <code>LinkedList</code>.\nMoves the cursor to the previous element of the <code>LinkedList</code>.\nReturns a reference to the next element.\nReturns a reference to the next element.\nReturns a reference to the previous element.\nReturns a reference to the previous element.\nRemoves the last element from the cursor’s parent list …\nRemoves the first element from the cursor’s parent list …\nAppends an element to the back of the cursor’s parent …\nAppends an element to the front of the cursor’s parent …\nRemoves the current element from the <code>LinkedList</code>.\nRemoves the current element from the <code>LinkedList</code> without …\nInserts the elements from the given <code>LinkedList</code> after the …\nInserts the elements from the given <code>LinkedList</code> before the …\nSplits the list into two after the current element. This …\nSplits the list into two before the current element. This …\nA draining iterator over the elements of a <code>VecDeque</code>.\nAn owning iterator over the elements of a <code>VecDeque</code>.\nAn iterator over the elements of a <code>VecDeque</code>.\nA mutable iterator over the elements of a <code>VecDeque</code>.\nA double-ended queue implemented with a growable ring …\nViews the underlying data as a pair of subslices of the …\nViews the underlying data as a pair of subslices of the …\nViews the underlying data as a pair of subslices of the …\nCreates an empty <code>vec_deque::IterMut</code>.\nCreates an empty <code>vec_deque::Iter</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nViews the underlying data as a pair of subslices of the …\nA type representing an owned, C-compatible, nul-terminated …\nAn error indicating that a nul byte was not in the …\nAn error indicating invalid UTF-8 when converting a <code>CString</code>…\nAn error indicating that an interior nul byte was found.\nReturns the contents of this <code>CString</code> as a slice of bytes.\nReturns a slice of <code>u8</code>s bytes that were attempted to …\nEquivalent to <code>CString::as_bytes()</code> except that the returned …\nExtracts a <code>CStr</code> slice containing the entire string.\n<code>CString</code> and its related types.\nCreates an empty <code>CString</code>.\nReturns the argument unchanged.\nConverts a &amp;CStr into a <code>CString</code> by copying the contents …\nConverts a Vec&lt;NonZero&lt;u8&gt;&gt; into a <code>CString</code> without copying …\nConverts a Box&lt;CStr&gt; into a <code>CString</code> without copying or …\nConverts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>CString</code>, by copying the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nRetakes ownership of a <code>CString</code> that was transferred to C …\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nConverts a string <code>s</code> into a <code>CString</code>.\nCreates a C-compatible string by consuming a byte vector, …\nAttempts to converts a Vec&lt;u8&gt; to a <code>CString</code>.\nConverts a Vec&lt;u8&gt; to a <code>CString</code> without checking the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this <code>CString</code> into a boxed <code>CStr</code>.\nConsumes the <code>CString</code> and returns the underlying byte …\nReturns the bytes that were attempted to convert to a …\nEquivalent to <code>CString::into_bytes()</code> except that the …\nConsumes this error, returning original <code>CString</code> which …\nConsumes the <code>CString</code> and transfers ownership of the string …\nConverts the <code>CString</code> into a <code>String</code> if it contains valid …\nConsumes this error, returning the underlying vector of …\nCreates a new C-compatible string from a container of …\nReturns the position of the nul byte in the slice that …\nAccess the underlying UTF-8 error that was the cause of …\nA type representing an owned, C-compatible, nul-terminated …\nAn error indicating that a nul byte was not in the …\nAn error indicating invalid UTF-8 when converting a <code>CString</code>…\nAn error indicating that an interior nul byte was found.\nA single-threaded reference-counting pointer. ‘Rc’ …\nA uniquely owned <code>Rc</code>.\n<code>Weak</code> is a version of <code>Rc</code> that holds a non-owning reference …\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nProvides a raw pointer to the data.\nReturns a raw pointer to the object <code>T</code> pointed to by this …\nConverts to <code>Rc&lt;[T]&gt;</code>.\nConverts to <code>Rc&lt;T&gt;</code>.\nMakes a clone of the <code>Rc</code> pointer.\nMakes a clone of the <code>Weak</code> pointer that points to the same …\nComparison for two <code>Rc</code>s.\nComparison for two <code>UniqueRc</code>s.\nDecrements the strong reference count on the <code>Rc&lt;T&gt;</code> …\nDecrements the strong reference count on the <code>Rc&lt;T&gt;</code> …\nCreates a new <code>Rc&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.\nCreates an empty str inside an Rc\nCreates an empty <code>[T]</code> inside an Rc\nCreates an empty CStr inside an Rc\nConstructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory. …\nAttempts to downcast the <code>Rc&lt;dyn Any&gt;</code> to a concrete type.\nDowncasts the <code>Rc&lt;dyn Any&gt;</code> to a concrete type.\nCreates a new <code>Weak</code> pointer to this allocation.\nCreates a new weak reference to the <code>UniqueRc</code>.\nDrops the <code>Rc</code>.\nDrops the <code>Weak</code> pointer.\nSCALE encode this type to bytes, possibly with the help of …\nEquality for two <code>Rc</code>s.\nEquality for two <code>UniqueRc</code>s.\nCopies the string into a newly allocated Rc&lt;OsStr&gt;.\nConverts an <code>OsString</code> into an Rc&lt;OsStr&gt; by moving the …\nConverts a generic type <code>T</code> into an <code>Rc&lt;T&gt;</code>\nConverts a <code>PathBuf</code> into an Rc&lt;Path&gt; by moving the <code>PathBuf</code> …\nConverts a <code>[T; N]</code> into an <code>Rc&lt;[T]&gt;</code>.\nAllocates a reference-counted slice and fills it by …\nAllocates a reference-counted slice and fills it by …\nAllocates a reference-counted string slice and copies <code>v</code> …\nAllocates a reference-counted string slice and copies <code>v</code> …\nConverts a <code>Path</code> into an <code>Rc</code> by copying the <code>Path</code> data into a …\nConverts a <code>Path</code> into an <code>Rc</code> by copying the <code>Path</code> data into a …\nAllocates a reference-counted string slice and copies <code>v</code> …\nConverts a <code>CString</code> into an Rc&lt;CStr&gt; by moving the <code>CString</code> …\nMove a boxed object to a new, reference counted, …\nReturns the argument unchanged.\nConverts a <code>&amp;CStr</code> into a <code>Rc&lt;CStr&gt;</code>, by copying the contents …\nAllocates a reference-counted slice and moves <code>v</code>’s items …\nCreates a reference-counted pointer from a clone-on-write …\nConverts a reference-counted string slice into a byte …\nCopies the string into a newly allocated Rc&lt;OsStr&gt;.\nConverts a <code>&amp;mut CStr</code> into a <code>Rc&lt;CStr&gt;</code>, by copying the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nTakes each element in the <code>Iterator</code> and collects it into an …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nConstructs an <code>Rc&lt;T&gt;</code> from a raw pointer.\nConverts a raw pointer previously created by <code>into_raw</code> back …\nConstructs an <code>Rc&lt;T, A&gt;</code> from a raw pointer in the provided …\nConverts a raw pointer previously created by <code>into_raw</code> back …\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\n‘Greater than or equal to’ comparison for two <code>Rc</code>s.\n‘Greater than or equal to’ comparison for two <code>UniqueRc</code>…\nReturns a mutable reference into the given <code>Rc</code>, if there are\nReturns a mutable reference into the given <code>Rc</code>, without any …\nGreater-than comparison for two <code>Rc</code>s.\nGreater-than comparison for two <code>UniqueRc</code>s.\nIncrements the strong reference count on the <code>Rc&lt;T&gt;</code> …\nIncrements the strong reference count on the <code>Rc&lt;T&gt;</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the reference-counted slice into a …\nReturns the inner value, if the <code>Rc</code> has exactly one strong …\nConsumes the <code>Rc</code>, returning the wrapped pointer.\nConsumes the <code>Weak&lt;T&gt;</code> and turns it into a raw pointer.\nConsumes the <code>Rc</code>, returning the wrapped pointer and …\nConsumes the <code>Weak&lt;T&gt;</code>, returning the wrapped pointer and …\nConverts the <code>UniqueRc</code> into a regular <code>Rc</code>.\n‘Less than or equal to’ comparison for two <code>Rc</code>s.\n‘Less than or equal to’ comparison for two <code>UniqueRc</code>s.\nLess-than comparison for two <code>Rc</code>s.\nLess-than comparison for two <code>UniqueRc</code>s.\nMakes a mutable reference into the given <code>Rc</code>.\nInequality for two <code>Rc</code>s.\nInequality for two <code>UniqueRc</code>s.\nConstructs a new <code>Rc&lt;T&gt;</code>.\nConstructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory. …\nCreates a new <code>UniqueRc</code>.\nConstructs a new <code>Rc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the …\nConstructs a new <code>Rc&lt;T, A&gt;</code> in the given allocator while …\nConstructs a new <code>Rc</code> in the provided allocator.\nConstructs a new <code>Weak&lt;T&gt;</code>, without allocating any memory, …\nCreates a new <code>UniqueRc</code> in the provided allocator.\nConstructs a new <code>Rc</code> with uninitialized contents.\nConstructs a new <code>Rc</code> with uninitialized contents in the …\nConstructs a new reference-counted slice with …\nConstructs a new reference-counted slice with …\nConstructs a new <code>Rc</code> with uninitialized contents, with the …\nConstructs a new <code>Rc</code> with uninitialized contents, with the …\nConstructs a new reference-counted slice with …\nConstructs a new reference-counted slice with …\nPartial comparison for two <code>Rc</code>s.\nPartial comparison for two <code>UniqueRc</code>s.\nConstructs a new <code>Pin&lt;Rc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…\nConstructs a new <code>Pin&lt;Rc&lt;T&gt;&gt;</code> in the provided allocator. If <code>T</code>…\nReturns <code>true</code> if the two <code>Rc</code>s point to the same allocation …\nReturns <code>true</code> if the two <code>Weak</code>s point to the same allocation …\nGets the number of strong (<code>Rc</code>) pointers to this allocation.\nGets the number of strong (<code>Rc</code>) pointers pointing to this …\nConstructs a new <code>Rc&lt;T&gt;</code>, returning an error if the …\nConstructs a new <code>Rc&lt;T&gt;</code> in the provided allocator, …\nConstructs a new <code>Rc</code> with uninitialized contents, returning …\nConstructs a new <code>Rc</code> with uninitialized contents, in the …\nConstructs a new <code>Rc</code> with uninitialized contents, with the …\nConstructs a new <code>Rc</code> with uninitialized contents, with the …\nReturns the inner value, if the <code>Rc</code> has exactly one strong …\nIf we have the only reference to <code>T</code> then unwrap it. …\nAttempts to upgrade the <code>Weak</code> pointer to an <code>Rc</code>, delaying …\nGets the number of <code>Weak</code> pointers to this allocation.\nGets the number of <code>Weak</code> pointers pointing to this …\nAn iterator over a slice in (non-overlapping) chunks (<code>N</code> …\nAn iterator over a slice in (non-overlapping) mutable …\nA windowed iterator over a slice in overlapping chunks (<code>N</code> …\nAn iterator over slice in (non-overlapping) chunks …\nAn iterator over slice in (non-overlapping) mutable chunks …\nAn iterator over a slice in (non-overlapping) chunks (…\nAn iterator over a slice in (non-overlapping) chunks (…\nAn iterator over a slice in (non-overlapping) mutable …\nAn iterator over a slice in (non-overlapping) mutable …\nHelper trait for <code>[T]::concat</code>.\nAn iterator over the escaped version of a byte slice.\nThe error type returned by <code>get_disjoint_mut</code>.\nAn index provided was out-of-bounds for the slice.\nImmutable slice iterator\nMutable slice iterator.\nHelper trait for <code>[T]::join</code>\nThe resulting type after concatenation\nThe resulting type after concatenation\nThe output type returned by methods.\nTwo indices provided were overlapping.\nAn iterator over a slice in (non-overlapping) chunks (…\nAn iterator over a slice in (non-overlapping) chunks (…\nAn iterator over a slice in (non-overlapping) mutable …\nAn iterator over a slice in (non-overlapping) mutable …\nAn iterator over subslices separated by elements that …\nAn iterator over the subslices of the vector which are …\nAn iterator over subslices separated by elements that …\nAn iterator over subslices separated by elements that …\nA helper trait used for indexing operations.\nAn iterator over subslices separated by elements that …\nAn iterator over subslices separated by elements that …\nAn iterator over the mutable subslices of the vector which …\nAn iterator over the mutable subslices of the vector which …\nAn iterator over subslices separated by elements that …\nAn iterator over subslices separated by elements that …\nAn iterator over overlapping subslices of length <code>size</code>.\nViews the underlying data as a mutable subslice of the …\nViews the underlying data as a subslice of the original …\nViews the underlying data as a subslice of the original …\nReturns a slice which contains items not yet handled by …\nImplementation of <code>[T]::concat</code>\nCreates an empty slice iterator.\nCreates an empty slice iterator.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a reference to T into a slice of length 1 …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nForms a mutable slice from a pointer range.\nForms a slice from a pointer range.\nForms a slice from a pointer and a length.\nPerforms the same functionality as <code>from_raw_parts</code>, except …\nConverts a reference to T into a slice of length 1 …\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns a shared reference to the output at this location, …\nReturns a mutable reference to the output at this …\nReturns a pointer to the output at this location, without …\nReturns a mutable pointer to the output at this location, …\nReturns a shared reference to the output at this location, …\nReturns a mutable reference to the output at this …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the remainder of the original slice that is not …\nReturns the remainder of the original slice that is not …\nReturns the remainder of the original slice that is not …\nViews the underlying data as a subslice of the original …\nImplementation of <code>[T]::join</code>\nPerforms bounds checking of a range.\nReturns the remainder of the original slice that is not …\nReturns the remainder of the original slice that is not …\nReturns the remainder of the original slice that is not …\nPerforms bounds checking of a range without panicking.\nAn iterator over the bytes of a string slice.\nAn iterator over the <code>char</code>s of a string slice, and their …\nAn iterator over the <code>char</code>s of a string slice.\nAn iterator of <code>u16</code> over the string encoded as UTF-16.\nThe associated error which can be returned from parsing.\nThe return type of <code>str::escape_debug</code>.\nThe return type of <code>str::escape_default</code>.\nThe return type of <code>str::escape_unicode</code>.\nParse a value from a string\nAn iterator over the lines of a string, as string slices.\nCreated with the method <code>lines_any</code>.\nCreated with the method <code>match_indices</code>.\nCreated with the method <code>matches</code>.\nAn error returned when parsing a <code>bool</code> using <code>from_str</code> fails\nCreated with the method <code>rmatch_indices</code>.\nCreated with the method <code>rmatches</code>.\nCreated with the method <code>rsplit</code>.\nCreated with the method <code>rsplitn</code>.\nCreated with the method <code>rsplit_terminator</code>.\nCreated with the method <code>split</code>.\nAn iterator over the non-ASCII-whitespace substrings of a …\nAn iterator over the substrings of a string, terminated by …\nCreated with the method <code>splitn</code>.\nCreated with the method <code>split_terminator</code>.\nAn iterator over the non-whitespace substrings of a string,\nAn item returned by the <code>Utf8Chunks</code> iterator.\nAn iterator used to decode a slice of mostly UTF-8 bytes …\nErrors which can occur when attempting to interpret a …\nViews the underlying data as a subslice of the original …\nViews the underlying data as a subslice of the original …\nProvides more information about the failure:\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a boxed slice of bytes to a boxed string slice …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nCreates a <code>&amp;str</code> from a pointer and a length.\nCreates a <code>&amp;mut str</code> from a pointer and a length.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nParses a string <code>s</code> to return a value of this type.\nConverts a slice of bytes to a string slice.\nConverts a mutable slice of bytes to a mutable string …\nConverts a slice of bytes to a string slice without …\nConverts a slice of bytes to a string slice without …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the invalid sequence that caused a failure.\nReturns the byte position of the next character, or the …\nThe string Pattern API.\nReturns remainder of the split string.\nReturns remainder of the split string.\nReturns remainder of the split string.\nReturns remainder of the split string.\nReturns remainder of the split string.\nReturns remainder of the split string.\nReturns remainder of the split string.\nReturns the remaining lines of the split string.\nReturns remainder of the split string\nReturns remainder of the split string.\nReturns the next validated UTF-8 substring.\nReturns the index in the given string up to which valid …\nAssociated type for <code>&lt;&amp;[char; N] as Pattern&gt;::Searcher&lt;&#39;a&gt;</code>.\nAssociated type for <code>&lt;[char; N] as Pattern&gt;::Searcher&lt;&#39;a&gt;</code>.\nType returned by char types.\nAssociated type for <code>&lt;F as Pattern&gt;::Searcher&lt;&#39;a&gt;</code>.\nAssociated type for <code>&lt;char as Pattern&gt;::Searcher&lt;&#39;a&gt;</code>.\nAssociated type for <code>&lt;&amp;[char] as Pattern&gt;::Searcher&lt;&#39;a&gt;</code>.\nExpresses that every byte of the haystack has been …\nA marker trait to express that a <code>ReverseSearcher</code> can be …\nExpresses that a match of the pattern has been found at …\nA string pattern.\nExpresses that <code>haystack[a..b]</code> has been rejected as a …\nA reverse searcher for a string pattern.\nResult of calling <code>Searcher::next()</code> or …\nA searcher for a string pattern.\nAssociated searcher for this pattern\nAssociated type for <code>&lt;&amp;str as Pattern&gt;::Searcher&lt;&#39;a&gt;</code>.\nType returned by String and str types.\nResult of calling <code>Pattern::as_utf8_pattern()</code>. Can be used …\nReturns the pattern as utf-8 bytes if possible.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGetter for the underlying string to be searched in\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs the associated searcher from <code>self</code> and the …\nChecks whether the pattern matches anywhere in the haystack\nChecks whether the pattern matches at the front of the …\nChecks whether the pattern matches at the back of the …\nPerforms the next search step starting from the front.\nPerforms the next search step starting from the back.\nFinds the next <code>Match</code> result. See <code>next()</code>.\nFinds the next <code>Match</code> result. See <code>next_back()</code>.\nFinds the next <code>Reject</code> result. See <code>next()</code> and <code>next_match()</code>.\nFinds the next <code>Reject</code> result. See <code>next_back()</code>.\nRemoves the pattern from the front of haystack, if it …\nRemoves the pattern from the back of haystack, if it …\nA draining iterator for <code>String</code>.\nA possible error value when converting a <code>String</code> from a …\nA possible error value when converting a <code>String</code> from a …\nAn iterator over the <code>char</code>s of a string.\nA type alias for <code>Infallible</code>.\nA UTF-8–encoded, growable string.\nA trait for converting a value to a <code>String</code>.\nReturns a byte slice of this <code>String</code>’s contents.\nReturns a slice of <code>u8</code>s bytes that were attempted to …\nConverts a <code>String</code> into a mutable string slice.\nReturns a mutable reference to the contents of this <code>String</code>.\nReturns the remaining (sub)string of this iterator as a …\nExtracts a string slice containing the entire <code>String</code>.\nViews the underlying data as a subslice of the original …\nReturns this <code>String</code>’s capacity, in bytes.\nTruncates this <code>String</code>, removing all contents.\nClones the contents of <code>source</code> into <code>self</code>.\nCreates an empty <code>String</code>.\nRemoves the specified range from the string in bulk, …\nSCALE encode this type to bytes, possibly with the help of …\nCopies elements from <code>src</code> range to the end of the string.\nReturns the argument unchanged.\nConverts the given boxed <code>str</code> slice to a <code>String</code>. It is …\nReturns the argument unchanged.\nConverts a <code>&amp;String</code> into a <code>String</code>.\nAllocates an owned <code>String</code> from a single character.\nConverts a <code>&amp;mut str</code> into a <code>String</code>.\nConverts a <code>&amp;str</code> into a <code>String</code>.\nConverts a clone-on-write string to an owned instance of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nCreates a new <code>String</code> from a pointer, a length and a …\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nDecode a native endian UTF-16–encoded vector <code>v</code> into a …\nDecode a native endian UTF-16–encoded slice <code>v</code> into a …\nDecode a UTF-16BE–encoded vector <code>v</code> into a <code>String</code>, …\nDecode a UTF-16BE–encoded slice <code>v</code> into a <code>String</code>, …\nDecode a UTF-16LE–encoded vector <code>v</code> into a <code>String</code>, …\nDecode a UTF-16LE–encoded slice <code>v</code> into a <code>String</code>, …\nConverts a vector of bytes to a <code>String</code>.\nConverts a slice of bytes to a string, including invalid …\nConverts a <code>Vec&lt;u8&gt;</code> to a <code>String</code>, substituting invalid UTF-8 …\nConverts a vector of bytes to a <code>String</code> without checking …\nInserts a character into this <code>String</code> at a byte position.\nInserts a string slice into this <code>String</code> at a byte position.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this <code>String</code> into a Box&lt;str&gt;.\nConverts a <code>String</code> into a byte vector.\nReturns the bytes that were attempted to convert to a …\nConverts a <code>String</code> into an iterator over the <code>char</code>s of the …\nDecomposes a <code>String</code> into its raw components: …\nConsumes the <code>IntoChars</code>, returning the remaining string.\nConverts the bytes into a <code>String</code> lossily, substituting …\nReturns <code>true</code> if this <code>String</code> has a length of zero, and <code>false</code>…\nConsumes and leaks the <code>String</code>, returning a mutable …\nReturns the length of this <code>String</code>, in bytes, not <code>char</code>s or …\nCreates a new empty <code>String</code>.\nRemoves the last character from the string buffer and …\nAppends the given <code>char</code> to the end of this <code>String</code>.\nAppends a given string slice onto the end of this <code>String</code>.\nRemoves a <code>char</code> from this <code>String</code> at a byte position and …\nRemove all matches of pattern <code>pat</code> in the <code>String</code>.\nRemoves the specified range in the string, and replaces it …\nReserves capacity for at least <code>additional</code> bytes more than …\nReserves the minimum capacity for at least <code>additional</code> …\nRetains only the characters specified by the predicate.\nShrinks the capacity of this <code>String</code> with a lower bound.\nShrinks the capacity of this <code>String</code> to match its length.\nSplits the string into two at the given byte index.\nConverts the given value to a <code>String</code>.\nShortens this <code>String</code> to the specified length.\nConverts a <code>CString</code> into a <code>String</code> if it contains valid …\nConverts the given <code>Vec&lt;u8&gt;</code> into a  <code>String</code> if it contains …\nTries to reserve capacity for at least <code>additional</code> bytes …\nTries to reserve the minimum capacity for at least …\nCreates a new empty <code>String</code> with at least the specified …\nFetch a <code>Utf8Error</code> to get more details about the conversion …\nCreates a new empty <code>String</code> with at least the specified …\nA thread-safe reference-counting pointer. ‘Arc’ stands …\nA uniquely owned <code>Arc</code>.\n<code>Weak</code> is a version of <code>Arc</code> that holds a non-owning reference …\nAn analogous trait to <code>Wake</code> but used to construct a …\nThe implementation of waking a task on an executor.\nWake this task.\nWake this task.\nWake this task without consuming the waker.\nWake this task without consuming the local waker.\nA draining iterator for <code>Vec&lt;T&gt;</code>.\nAn iterator which uses a closure to determine if an …\nAn iterator that moves out of a vector.\nA splicing iterator for <code>Vec</code>.\nA contiguous growable array type, written as <code>Vec&lt;T&gt;</code>, short …\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nReturns a reference to the underlying allocator.\nReturns the remaining items of this iterator as a mutable …\nReturns the remaining items of this iterator as a slice.\nReturns the remaining items of this iterator as a slice.\nCreates an empty <code>vec::IntoIter</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKeep unyielded elements in the source <code>Vec</code>.\nA bounded map based on a B-Tree.\nA bounded set based on a B-Tree.\nA bounded slice.\nA bounded vector.\nCreate an object through truncation.\nCreate an object through truncation.\nA weakly bounded vector.\nAcala - https://acala.network/\nAn opaque 32-byte cryptographic identifier.\nA container for results of parsing the address uri string.\nErrors that are possible during parsing the address URI.\nAjuna Network - https://ajuna.io\nAllfeat Network - https://allfeat.network\nAltair - https://centrifuge.io/\nAmplitude chain - https://pendulumchain.org/\nAnmol Network - https://anmol.network/\nAres Protocol - https://www.aresprotocol.com/\nAstar Network - https://astar.network\nAventus Mainnet - https://aventus.io\nBajun Network - https://ajuna.io\nBare 32-bit Ed25519 public key.\nBare 32-bit ECDSA SECP-256k1 public key.\nBare 32-bit Schnorr/Ristretto (S/R 25519) public key.\nBasilisk - https://bsx.fi\nBifrost - https://bifrost.finance/\nBitgreen - https://bitgreen.org/\nBittensor - https://bittensor.com\nTrait used for types that are really just a fixed-length …\nCalamari: Manta Canary Network - https://manta.network\nCentrifuge Chain - https://centrifuge.io/\nCere Network - https://cere.network\nCESS - https://cess.cloud\nCESS Testnet - https://cess.cloud\nChainflip - https://chainflip.io/\nChainX - https://chainx.org/\nCloudWalk Network Mainnet - …\nClover Finance - https://clover.finance\nComposable Finance - https://composable.finance\nAutomata ContextFree - https://ata.network\nCORD Network - https://cord.network/\nCrust Network - https://crust.network\nGeneric byte array holding some crypto-related raw data.\nType which has a particular kind of crypto associated with …\nAn identifier for a specific cryptographic algorithm used …\nThe address of the associated root phrase for our publicly …\nThe root phrase for our publicly known keys.\nDark Mainnet\nDarwinia Network - https://darwinia.network\nDataHighway\nDENTNet - https://www.dentnet.io\nUsed for immutable dereferencing operations, like <code>*v</code>.\nDerivable key trait.\nAn error when deriving a key.\nA since derivation junction description. It is the single …\nDICO - https://dico.io\nDock Mainnet - https://dock.io\nDorafactory Polkadot Network - https://dorafactory.org\nDummy cryptography. Doesn’t do anything.\nEdgeware - https://edgewa.re\nEfinity - https://efinity.io/\nEquilibrium Network - https://equilibrium.io\nEnergy Web X - https://www.energyweb.org\nExpose a reference to an inner secret\nFragnova Network - https://fragnova.com\nFrequency - https://www.frequency.xyz\nCreate random values of <code>Self</code> given a stream of entropy.\nĞ1 - https://duniter.org\nGEEK Network - https://geek.gl\nGenshiro Network - https://genshiro.equilibrium.io\nGM - https://gmordie.com\nGolden Gate - https://ggxchain.io/\nGolden Gate Sydney - https://ggxchain.io/\nGORO Network - https://goro.network\nHard (“hardened”) derivation. Public keys do not have …\nHashed Network - https://hashed.network\nHeiko - https://parallel.fi/\nHumanode Network - https://humanode.io\nHydraDX - https://hydradx.io\nAnmol Network Ibtida Canary network - …\nICE Network - https://icenetwork.io\nImpact Protocol Network - https://impactprotocol.network/\nThe inner type it is wrapping.\nIntegritee - https://integritee.network\nIntegritee Incognito - https://integritee.network\nInterlay - https://interlay.io/\nThe overall format was invalid (e.g. the seed phrase …\nThe supplied password was invalid.\nThe derivation path was invalid (e.g. contains soft …\nThe seed phrase provided is not a valid BIP39 phrase.\nThe seed is invalid (bad content).\nThe seed has an invalid length.\nOne type is wrapped by another.\nThe length of the junction identifier. Note that this is …\nJoystream - https://www.joystream.org\nJupiter - https://jupiter.patract.io\nKabocha - https://kabocha.network\nKapex - https://totemaccounting.com\nKarmacoin - https://karmaco.in\nKarura - https://karura.network/\nKatal Chain\nAn identifier for a type of cryptographic key.\nKICO - https://dico.io\nKILT Spiritnet - https://kilt.io/\nKintsugi - https://interlay.io/\nKrest Network - https://www.peaq.network/\nKrigan Network - https://krigan.network\nKulupu - https://kulupu.network/\nKusama Relay Chain - https://kusama.network\nThe “length” of the values of this type, which is …\nLaminar - http://laminar.network/\nLitentry Network - https://litentry.com/\nLitmus Network - https://litentry.com/\nlogion network - https://logion.network\nLuhn Network - https://luhn.network\nManta network - https://manta.network\nMathChain mainnet - https://mathwallet.org\nMathChain testnet - https://mathwallet.org\nMetaquity Network - https://metaquity.xyz/\nMoonbeam - https://moonbeam.network\nMoonriver - https://moonbeam.network\nMoonsama - https://moonsama.com\nNeatcoin Mainnet - https://neatcoin.org\nNFTMart - https://nftmart.io\nNodle Chain - https://nodle.io/\nOAK Network - https://oak.tech\nOriginTrail Parachain - https://parachain.origintrail.io/\n3DP network - https://3dpass.org\n3DP test network - https://3dpass.org\nTrait suitable for typical cryptographic PKI key pair type.\nThe pair key type of this crypto.\nParallel - https://parallel.fi/\nPeaq Network - https://www.peaq.network/\nPeerplays - https://www.peerplays.com/\nPendulum chain - https://pendulumchain.org/\nPhala Network - https://phala.network\nPicasso - https://picasso.composable.finance\nPioneer Network by Bit.Country - https://bit.country\nPolimec Chain - https://polimec.io/\nPolkadex Mainnet - https://polkadex.trade\nPolkadex Parachain - https://polkadex.trade\nPolkadot Relay Chain - https://polkadot.network\nPolkaFoundry Network - https://polkafoundry.com\nPolkaSmith Canary Network - https://polkafoundry.com\nPolymesh - https://polymath.network/\nPontem Network - https://pontem.network\nTrait suitable for cryptographic public keys.\nThe type which is used to encode a public key.\nGeneric encoded public key.\nAn error type for SS58 decoding.\nQUARTZ by UNIQUE - https://unique.network\nThis prefix is reserved.\nThis prefix is reserved.\nLaminar Reynolds Canary - http://laminar.network/\nRobonomics - https://robonomics.network\nSapphire by Unique - https://unique.network\nSeals Network - https://seals.app\nSecret strings\nAn error with the interpretation of a secret.\nA secret uri (<code>SURI</code>) that can be used to generate a key …\nThe type used to (minimally) encode the data required to …\nShiftNrg\nTrait suitable for cryptographic signatures.\nThe type used to represent a signature. Can be created …\nGeneric encoded signature.\nSNOW: ICE Canary Network - https://icenetwork.io\nSocial Network - https://social.network\nSocietal - https://www.sctl.xyz\nSoft (vanilla) derivation. Public keys have a …\nA soft key was found in the path (and is unsupported).\nSORA Network - https://sora.org\nSORA Polkadot Parachain - https://sora.org\nSORA Kusama Parachain - https://sora.org\nA custom address format. See also <code>Ss58AddressFormatRegistry</code>\nA known address (sub)format/network ID for SS58.\nKey that can be encoded to/from SS58.\nStafi - https://stafi.io\nSubsocial\nSubspace - https://subspace.network\nSubspace testnet - https://subspace.network\nSubstrate - https://substrate.io/\nSynesthesia - https://synesthesia.network/\nt3rn - https://t3rn.io/\nTangle Network - https://www.webb.tools/\nThe resulting type after dereferencing.\nTernoa - https://www.ternoa.network\nTidefi - https://tidefi.com\nTinker - https://invarch.network\nTotem - https://totemaccounting.com\nSimilar to <code>From</code>, except that the onus is on the part of …\nThe counterpart to <code>UncheckedFrom</code>.\nUniArts Network - https://uniarts.me\nUnique Network - https://unique.network\nVara Network - https://vara-network.io/\nValiu Liquidity Network - https://valiu.com/\nTrait grouping types shared by a VRF signer and verifiers.\nVRF input.\nVRF pre-output.\nVRF Public Key.\nVRF Secret Key.\nVRF signing data.\nVRF signature.\nWatr Protocol - https://www.watr.org\nOpposite of <code>IsWrappedBy</code> - denotes a type which is a simple …\nxx network - https://xx.network\nZeitgeist - https://zeitgeist.pm\nZERO - https://zero.io\nZERO Alphaville - https://zero.io\nTrait for securely erasing values from memory.\nDerive the <code>Zeroize</code> trait.\nAll known address formats.\nnames of all address formats\nReturn a slice filled with raw data.\nGet a reference to the inner type that is wrapped.\nGet a reference to the inner type that is wrapped.\nReturn a slice filled with raw data.\nCustom constructor\nReturns default SS58 format used by the current active …\nDereferences the value.\nDerive a child key from a series of given junctions.\nDerive a child key from a series of given junctions.\nDerive a child key from a series of given junctions.\nExpose secret: this is the only method providing access to …")