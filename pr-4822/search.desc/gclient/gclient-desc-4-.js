searchState.loadedDescShard("gclient", 4, "Get a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nThe origin filter prevent the call to be dispatched.\n<code>:code</code> was updated.\nError for the System pallet\nEvent for the System pallet.\nAn extrinsic failed.\nAn extrinsic completed successfully.\nFailed to extract the runtime version from the new runtime.\nThe name of specification does not match between the …\nAn account was reaped.\nA multi-block migration is ongoing and prevents the …\nA new account was created.\nSuicide called when the account has non-default composite …\nThere is a non-zero reference count preventing the account …\nNo upgrade authorized.\nOn on-chain remark happened.\nThe specification version is not allowed to decrease …\nThe submitted code is not authorized.\nAn upgrade was authorized.\nProvide the preimage (runtime binary) <code>code</code> for an upgrade …\nAuthorize an upgrade to a given <code>code_hash</code> for the runtime. …\nAuthorize an upgrade to a given <code>code_hash</code> for the runtime. …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nKill all storage items with a key that starts with the …\nKill some items from storage.\nMake some on-chain remark.\nMake some on-chain remark and emit event.\nSet the new runtime code.\nSet the new runtime code without doing any checks of the …\nSet the number of pages in the WebAssembly environment’s …\nSet some items of storage.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nA given equivocation report is valid but already …\nThe <code>Error</code> enum of this pallet.\nSubmitted configuration is invalid.\nAn equivocation proof provided as part of an equivocation …\nA key ownership proof provided as part of an equivocation …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPlan an epoch config change. The epoch config change is …\nReport authority equivocation/misbehavior. This method …\nReport authority equivocation/misbehavior. This method …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA error in the list interface implementation.\nMoved an account from one bag to another.\nUpdated the score of some account to the given amount.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nMove the caller’s Id directly in front of <code>lighter</code>.\nSame as [<code>Pallet::put_in_front_of</code>], but it can be called by …\nDeclare that some <code>dislocated</code> account has, through rewards …\nA balance was set by root.\nSome amount was burned from an account.\nContains a variant per dispatchable extrinsic that this …\nBeneficiary account must pre-exist.\nThe delta cannot be zero.\nSome amount was deposited (e.g. for transaction fees).\nAn account was removed whose balance was non-zero but …\nAn account was created with some free balance.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nValue too low to create account due to existential deposit.\nA vesting schedule already exists for this account.\nTransfer/payment would kill account.\nSome balance was frozen.\nBalance too low to send value.\nThe issuance cannot be modified since it is already …\nTotal issuance was increased by <code>amount</code>, creating a credit …\nAccount liquidity restrictions prevent withdrawal.\nSome balance was locked.\nSome amount was minted into an account.\nTotal issuance was decreased by <code>amount</code>, creating a debt to …\nSome balance was moved from the reserve of the first …\nSome balance was reserved (moved from free to reserved).\nSome amount was restored into an account.\nSome amount was removed from the account (e.g. for …\nSome amount was suspended from an account (it can be …\nSome balance was thawed.\nNumber of freezes exceed <code>MaxFreezes</code>.\nNumber of holds exceed <code>VariantCountOf&lt;T::RuntimeHoldReason&gt;</code>…\nNumber of named reserves exceed <code>MaxReserves</code>.\nThe <code>TotalIssuance</code> was forcefully changed.\nTransfer succeeded.\nSome balance was unlocked.\nSome balance was unreserved (moved from reserved to free).\nAn account was upgraded.\nVesting balance too high to send value.\nSome amount was withdrawn from the account (e.g. for …\nBurn the specified liquid free balance from the origin …\nAdjust the total issuance in a saturating way.\nSet the regular balance of a given account.\nExactly as <code>transfer_allow_death</code>, except the origin must be …\nUnreserve some balance from a user by force.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nTransfer the entire transferable balance from the caller …\nTransfer some liquid free balance to another account.\nSame as the <code>transfer_allow_death</code> call, but with a check …\nUpgrade a specified account.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA bounty is approved.\nA bounty is awarded to a beneficiary.\nA bounty proposal is funded and became active.\nA bounty is cancelled.\nA bounty is claimed by beneficiary.\nA bounty expiry is extended.\nNew bounty proposal.\nA bounty proposal was rejected; funds were slashed.\nContains a variant per dispatchable extrinsic that this …\nA bounty curator is accepted.\nA bounty curator is proposed.\nA bounty curator is unassigned.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe bounty cannot be closed because it has active child …\nProposer’s balance is too low.\nInvalid bounty fee.\nNo proposal or bounty at that index.\nInvalid bounty value.\nA bounty payout is pending. To cancel the bounty, you must …\nThe bounties cannot be claimed/closed because it’s still …\nThe reason given is just too big.\nRequire bounty curator.\nToo many approvals are already queued.\nThe bounty status is unexpected.\nAccept the curator role for a bounty. A deposit will be …\nApprove a bounty proposal. At a later time, the bounty …\nAward bounty to a beneficiary account. The beneficiary …\nClaim the payout from an awarded bounty after payout delay.\nCancel a proposed or active bounty. All the funds will be …\nExtend the expiry time of an active bounty.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPropose a new bounty.\nPropose a curator to a funded bounty.\nUnassign curator from a bounty.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA child-bounty is added.\nA child-bounty is awarded to a beneficiary.\nContains a variant per dispatchable extrinsic that this …\nA child-bounty is cancelled.\nA child-bounty is claimed by beneficiary.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe bounty balance is not enough to add new child-bounty.\nThe parent bounty is not in active state.\nNumber of child bounties exceeds limit …\nAccept the curator role for the child-bounty.\nAdd a new child-bounty.\nAward child-bounty to a beneficiary.\nClaim the payout from an awarded child-bounty after payout …\nCancel a proposed or active child-bounty. Child-bounty …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPropose curator for funded child-bounty.\nUnassign curator from a child-bounty.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe account is already delegating.\nThe account currently has votes attached to it and the …\nThe class ID supplied is invalid.\nContains a variant per dispatchable extrinsic that this …\nThe class must be supplied since it is not easily …\nAn account has delegated their vote to another account. …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nToo high a balance was provided that the account cannot …\nMaximum number of votes reached.\nThe actor has no permission to conduct the action.\nThe actor has no permission to conduct the action right …\nDelegation to oneself makes no sense.\nThe account is not currently delegating.\nPoll is not ongoing.\nThe given account did not vote on the poll.\nAn [account] has cancelled a previous delegation operation.\nA vote that been removed\nAn account that has voted\nDelegate the voting power (with some given conviction) of …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nRemove a vote for a poll.\nRemove a vote for a poll.\nUndelegate the voting power of the sending account for a …\nRemove the lock caused by prior voting/delegating which …\nVote in a poll. If <code>vote.is_aye()</code>, the vote is to enact the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSome bound not met\nContains a variant per dispatchable extrinsic that this …\nThe call is not allowed at this point.\nAn election failed.\nThe election has been finalized, with the given …\nError of the pallet that can be returned in response to …\nThe <code>Event</code> enum of this pallet\nThe fallback failed\n<code>Self::insert_submission</code> returned an invalid index.\nSnapshot metadata should exist but didn’t.\nOCW submitted solution for wrong round\nThere was a phase transition in a given round.\nSubmission was prepared for a different round.\nSubmission was too early.\nSubmission was too weak, score-wise.\nWrong number of winners presented.\nAn account has been rewarded for their signed submission …\nThe origin failed to pay the deposit.\nWitness data to dispatchable is invalid.\nThe queue was full, and the solution was not better than …\nThe signed submission consumes too much weight\nAn account has been slashed for submitting an invalid …\nA solution was stored with the given compute.\nSubmitted solution has too many winners\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nTrigger the governance fallback.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet a solution in the queue, to be handed out to the …\nSet a new value for <code>MinimumUntrustedScore</code>.\nSubmit a solution for the signed phase.\nSubmit a solution for the unsigned phase.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nProgram is active.\nContains a variant per dispatchable extrinsic that this …\nCode already exists.\nAny data related to program codes changed.\nCode does not exist.\nThe code supplied to <code>upload_code</code> or <code>upload_program</code> exceeds …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nGas limit too high.\nGear::run() already included in current block.\nProgram is terminated.\nNot enough balance to execute an action.\nMessage wasn’t found in the mailbox.\nMessage queue processing is disabled.\nUser sends message to program, which was successfully …\nMessages execution delayed (waited) and successfully added …\nMessage is ready to continue its execution and was removed …\nThe result of processing the messages within the block.\nMessage gas tree is not found.\nProgram already exists.\nAny data related to programs changed.\nFailed to create a program.\nProgram with the specified id is not found.\nThe program rent logic is disabled.\nThe pseudo-inherent extrinsic that runs queue processing …\nBlock count doesn’t cover MinimalResumePeriod.\nMessage marked as “read” and removes it from <code>Mailbox</code>. …\nSomebody sent a message to the user.\nClaim value from message in <code>Mailbox</code>.\nTransfers value from chain of terminated or exited …\nCreates program via <code>code_id</code> from storage.\nA dummy extrinsic with programmatically set weight.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nProcess message queue\nSends a message to a program or to another account.\nSend reply on message in <code>Mailbox</code>.\nSets <code>ExecuteInherent</code> flag.\nSaves program <code>code</code> in storage.\nCreates program initialization request (message), that is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Error</code> enum of this pallet.\nInsufficient user balance.\nInsufficient bank account balance. <strong>Must be unreachable in </strong>…\nDeposit of funds that will not keep bank account alive. …\nInsufficient user’s bank account gas balance.\nInsufficient user’s bank account gas balance.\nOverflow during funds transfer. <strong>Must be unreachable in </strong>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGrandpa validator’s keys set was hashed and set in …\nBridge got cleared on initialization of the second block …\nOptimistically, single-time called event defining that …\nThe error happens when bridge got called before proper …\nThe error happens when bridge got called when paused.\nBridge was paused and temporary doesn’t process any …\nBridge was unpaused and from now on processes any incoming …\nContains a variant per dispatchable extrinsic that this …\nPallet Gear Eth Bridge’s error.\nPallet Gear Eth Bridge’s event.\nThe error happens when bridging thorough builtin and …\nThe error happens when bridging message sent with too big …\nA new message was queued for bridging.\nThe error happens when bridging queue capacity exceeded, …\nMerkle root of the queue changed: new messages queued …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRoot extrinsic that pauses pallet. When paused, no new …\nExtrinsic that inserts message in a bridging queue, …\nRoot extrinsic that sets fee for the transport of messages.\nRoot extrinsic that unpauses pallet. When paused, no new …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\n<code>GasTree::consume</code> called on node, which has some balance …\n<code>GasTree::consume</code> called on node, which has some system …\nThe <code>Error</code> enum of this pallet.\nErrors stating that gas tree has been invalidated\n<code>GasTree::create</code> called with some value amount leading to …\nEither <code>GasTree::consume</code> or <code>GasTree::spent</code> called on a node …\nOutput of <code>Tree::consume</code> procedure that wasn’t expected.\nNode type that can’t occur if algorithm work well\nValue must have been caught or moved upstream, but was …\nValue must have been blocked, but was either moved or …\nValue must have been caught, but was missed or blocked …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>Error</code> enum of this pallet.\nOccurs when given value already exists in mailbox.\nOccurs when mailbox’s element wasn’t found in storage.\nOccurs when given key already exists in queue.\nOccurs when queue’s element wasn’t found in storage.\nOccurs when queue’s head should contain value, but it’…\nOccurs when queue’s head should be empty, but it …\nOccurs when queue’s tail element contains link to the …\nOccurs when while searching queue’s pre-tail, element …\nOccurs when queue’s tail should contain value, but it’…\nOccurs when queue’s tail should be empty, but it …\nOccurs when given value already exists in waitlist.\nOccurs when waitlist’s element wasn’t found in storage.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>Error</code> enum of this pallet.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nOccurs when given task already exists in task pool.\nThe <code>Error</code> enum of this pallet.\nOccurs when task wasn’t found in storage.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nBurned from the pool.\nContains a variant per dispatchable extrinsic that this …\nDeposited to the pool.\nError for the staking rewards pallet.\nThe <code>Event</code> enum of this pallet\nPool not replenished due to error.\nFailure to withdraw funds from the rewards pool.\nIdeal staking ratio changed.\nMinted to the pool.\nTarget inflation changed.\nTransferred from the pool to an external account.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe origin is not eligible to execute call.\nError trying transfer balance to/from voucher account.\nContains a variant per dispatchable extrinsic that this …\nVoucher is disabled for code uploading, but requested.\nVoucher update function tries to cut voucher ability of …\nVoucher issue/prolongation duration out of [min; max] …\nThe <code>Error</code> enum of this pallet.\nPallet Gear Voucher event.\nDestination program is not in whitelisted set for voucher.\nVoucher with given identifier doesn’t exist for given …\nVoucher still valid and couldn’t be revoked.\nTry to whitelist more programs than allowed.\nFailed to query destination of the prepaid call.\nVoucher has been declined (set to expired state).\nVoucher has expired and couldn’t be used.\nVoucher has been issued.\nVoucher has been revoked by owner.\nVoucher has been updated.\nExecute prepaid call with given voucher id.\nDecline existing and not expired voucher.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIssue a new voucher.\nRevoke existing voucher.\nUpdate existing voucher.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nAttempt to signal GRANDPA change with one already pending.\nA given equivocation report is valid but already …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nAn equivocation proof provided as part of an equivocation …\nA key ownership proof provided as part of an equivocation …\nNew authority set has been applied.\nAttempt to signal GRANDPA pause when the authority set isn…\nCurrent authority set has been paused.\nAttempt to signal GRANDPA resume when the authority set isn…\nCurrent authority set has been resumed.\nCannot signal forced change so soon after last.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nNote that the current authority set of the GRANDPA …\nReport voter equivocation/misbehavior. This method will …\nReport voter equivocation/misbehavior. This method will …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAccount ID is already named.\nA username authority was added.\nA username authority was removed.\nIdentity pallet declaration.\nA dangling username (as in, a username corresponding to an …\nEmpty index.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nFee is changed.\nA name was cleared, and the given balance returned.\nA name was removed and the given balance slashed.\nA name was set or reset (which will remove all judgements).\nThe index is invalid.\nInvalid judgement.\nThe signature on a username was not valid.\nThe provided suffix is too long.\nThe target is invalid.\nThe username does not meet the requirements.\nThe provided judgement was for a different identity.\nJudgement given.\nA judgement was given by a registrar.\nError that occurs when there is an issue paying for …\nA judgement was asked from a registrar.\nA judgement request was retracted.\nThe authority cannot allocate any more usernames.\nNo identity found.\nThe requested username does not exist.\nThe username cannot be forcefully removed because it can …\nAccount isn’t found.\nAccount isn’t named.\nSub-account isn’t owned by sender.\nSender is not a sub-account.\nThe sender does not have permission to issue a username.\nA queued username passed its expiration without being …\nA username was set as a primary and can be looked up from …\nA registrar was added.\nSetting this username requires a signature, but none was …\nSticky judgement.\nA sub-identity was added to an identity and the deposit …\nA sub-identity was removed from an identity and the …\nA sub-identity was cleared, and the given deposit …\nMaximum amount of registrars reached. Cannot add any more.\nToo many subs-accounts.\nA username was queued, but <code>who</code> must accept it prior to …\nA username was set for <code>who</code>.\nThe username is already taken.\nAccept a given username that an <code>authority</code> granted. The …\nAdd a registrar to the system.\nAdd the given account to the sender’s subs.\nAdd an <code>AccountId</code> with permission to grant usernames with a …\nCancel a previous request.\nClear an account’s identity info and all sub-accounts …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nRemove an account’s identity and sub-account information …\nProvide a judgement for an account’s identity.\nRemove the sender as a sub-account.\nRemove a username that corresponds to an account with no …\nRemove an expired username approval. The username was …\nRemove the given account from the sender’s subs.\nRemove <code>authority</code> from the username authorities.\nAlter the associated name of the given sub-account.\nRequest a judgement from a registrar.\nChange the account associated with a registrar.\nSet the fee required for a judgement to be requested from …\nSet the field information for a registrar.\nSet an account’s identity information and reserve the …\nSet a given username as the primary. The username should …\nSet the sub-accounts of the sender.\nSet the username for <code>who</code>. Must be called by a username …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAt the end of the session, no offence was committed.\nContains a variant per dispatchable extrinsic that this …\nDuplicated heartbeat.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA new heartbeat was received from <code>AuthorityId</code>.\nNon existent public key.\nAt the end of the session, at least one validator was …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nComplexity:\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCall is already approved by this signatory.\nThe data to be stored is already stored.\nContains a variant per dispatchable extrinsic that this …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe maximum weight information provided was too low.\nThreshold must be 2 or greater.\nA multisig operation has been approved by someone.\nA multisig operation has been cancelled.\nA multisig operation has been executed.\nA new multisig operation has begun.\nCall doesn’t need any (more) approvals.\nNo timepoint was given, yet the multisig operation is …\nMultisig operation not found when attempting to cancel.\nOnly the account that originally created the multisig is …\nThe sender was contained in the other signatories; it …\nThe signatories were provided out of order; they should be …\nThere are too few signatories in the list.\nThere are too many signatories in the list.\nA timepoint was given, yet no multisig operation is …\nA different timepoint was given to the multisig operation …\nRegister approval for a dispatch to be made from a …\nRegister approval for a dispatch to be made from a …\nImmediately dispatch a multi-signature call using a single …\nCancel a pre-existing, on-going multisig transaction. Any …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn account is already delegating in another pool. An …\nThe pool or member delegation has already migrated to …\nBonding extra is restricted to the exact pending reward …\nA member has became bonded in a pool.\nContains a variant per dispatchable extrinsic that this …\nThe pools state cannot be changed.\nNone of the funds can be withdrawn yet because the bonding …\nThe submitted changes to commission change rate are not …\nNot enough blocks have surpassed since the last commission …\nThe supplied commission exceeds global maximum commission.\nThe supplied commission exceeds the max allowed commission.\nA pool has been created.\nSome error occurred that should never happen. This should …\nA pool has been destroyed.\nThe caller does not have adequate permissions.\nThe <code>Error</code> enum of this pallet.\nEvents of this pallet.\nThe member is fully unbonded (and thus cannot access the …\nPool id provided is not correct/usable.\nThe pool’s max commission cannot be set higher than the …\nToo many members in the pool or system.\nThe system is maxed out on pools.\nThe member cannot unbond further chunks due to reaching …\nA member has been removed from a pool.\nMetadata exceeds [<code>Config::MaxMetadataLen</code>]\nTopped up deficit in frozen ED of the reward pool.\nClaimed excess frozen ED of af the reward pool.\nThe amount does not meet the minimum bond to either join …\nNo commission current has been set.\nThere is no pending commission to claim.\nA pool must be in [<code>PoolState::Destroying</code>] in order for the …\nEither a) the caller cannot make a valid kick or b) the …\nThe pool or member delegation has not migrated yet to …\nThe caller does not have nominating permissions for the …\nThe pool is not open to join\nThis call is not allowed in the current state of the …\nNo imbalance in the ED deposit for the pool.\nNo slash pending that can be applied to the member.\nThe transaction could not be executed due to overflow risk …\nA payout has been made to a member.\nPartial unbonding now allowed permissionlessly.\nA pool’s commission <code>change_rate</code> has been changed.\nPool commission claim permission has been updated.\nPool commission has been claimed.\nA pool’s commission setting has been changed.\nPool id currently in use.\nA pool’s maximum commission setting has been changed.\nAn account is not a member.\nA (bonded) pool id does not exist.\nThe active balance of pool <code>pool_id</code> has been slashed to …\nA reward pool does not exist. In all cases this is a …\nThe roles of a pool have been updated to the given new …\nThe state of a pool has changed\nA sub pool does not exist.\nA member has unbonded from their pool.\nThe unbond pool at <code>era</code> of pool <code>pool_id</code> has been slashed to …\nA member has withdrawn from their pool.\nTop up the deficit or withdraw the excess ED from the pool.\nApply a pending slash on a member.\nBond <code>extra</code> more funds from <code>origin</code> into the pool to which …\n<code>origin</code> bonds funds from <code>extra</code> for some pool member <code>member</code> …\nChill on behalf of the pool.\nClaim pending commission.\nA bonded member can use this to claim their payout based …\n<code>origin</code> can claim payouts on some pool member <code>other</code>’s …\nCreate a new delegation pool.\nCreate a new delegation pool with a previously used pool id\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStake funds with a pool. The amount to bond is transferred …\nMigrates delegated funds from the pool account to the …\nMigrate pool from [<code>adapter::StakeStrategyType::Transfer</code>] to\nNominate on behalf of the pool.\nCall <code>withdraw_unbonded</code> for the pools account. This call …\nAllows a pool member to set a claim permission to allow or …\nSet the commission of a pool. Both a commission percentage …\nSet the commission change rate for a pool.\nSet or remove a pool’s commission claim permission.\nSet the maximum commission of a pool.\nUpdate configurations for the nomination pools. The origin …\nSet a new metadata for the pool.\nSet a new state for the pool.\nUnbond up to <code>unbonding_points</code> of the <code>member_account</code>’s …\nUpdate the roles of the pool.\nWithdraw unbonded funds from <code>member_account</code>. If no bonded …\nEvents type.\nThere is an offence reported of the given <code>kind</code> happened at …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPreimage has already been noted on-chain.\nContains a variant per dispatchable extrinsic that this …\nA preimage has ben cleared.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe user is not authorized to perform this action.\nThe preimage cannot be removed since it has not yet been …\nThe preimage request cannot be removed since no …\nA preimage has been noted.\nA preimage may not be removed when there are outstanding …\nA preimage has been requested.\nPreimage is too large to store on-chain.\nToo few hashes were requested to be upgraded (i.e. zero).\nMore than <code>MAX_HASH_UPGRADE_BULK_COUNT</code> hashes were …\nEnsure that the a bulk of pre-images is upgraded.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegister a preimage on-chain.\nRequest a preimage be uploaded to the chain without paying …\nClear an unrequested preimage from the runtime storage.\nClear a previously made request for a preimage.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn announcement was placed to make a call in the future.\nContains a variant per dispatchable extrinsic that this …\nAccount is already a proxy.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nCall may not be made by proxy because it may escalate its …\nCannot add self as proxy.\nProxy registration not found.\nSender is not a proxy of the account to be proxied.\nA proxy was added.\nA proxy was executed correctly, with the given.\nA proxy was removed.\nA pure account has been created by new proxy with given …\nThere are too many proxies registered or too many …\nAnnouncement, if made at all, was made too recently.\nA call which is incompatible with the proxy type’s …\nRegister a proxy account for the sender that is able to …\nPublish the hash of a proxy-call that will be made in the …\nSpawn a fresh new account that is guaranteed to be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRemoves a previously spawned pure proxy.\nDispatch the given <code>call</code> from an account that the sender is …\nDispatch the given <code>call</code> from an account that the sender is …\nRemove the given announcement of a delegate.\nRemove a given announcement.\nUnregister all proxy accounts for the sender.\nUnregister a proxy account for the sender.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAccount is already a member.\nContains a variant per dispatchable extrinsic that this …\nUnexpected error in state.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe information provided is incorrect.\nA member <code>who</code> has been added.\nThe member <code>who</code> had their <code>AccountId</code> changed to <code>new_who</code>.\nThe member <code>who</code> of given <code>rank</code> has been removed from the …\nThe origin is not sufficiently privileged to do the …\nThere are no further records to be removed.\nAccount is not a member.\nThe given poll index is unknown or has closed.\nThe given poll is still ongoing.\nThe member <code>who</code>se rank has been changed to the given <code>rank</code>.\nThe member’s rank is too low to vote.\nThe new member to exchange is the same as the old member\nThe max member count for the rank has been reached.\nThe member <code>who</code> has voted for the <code>poll</code> with the given <code>vote</code> …\nIntroduce a new member.\nRemove votes from the given poll. It must have ended.\nDecrement the rank of an existing member by one. If the …\nExchanges a member with a new account and the same …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nIncrement the rank of an existing member by one.\nRemove the member entirely.\nAdd an aye or nay vote for the sender to the given …\nA referendum has been approved and its proposal has been …\nA referendum has been approved and its proposal has been …\nThe referendum index provided is invalid in this context.\nThe referendum status is invalid for this operation.\nThe track identifier given was invalid.\nContains a variant per dispatchable extrinsic that this …\nA referendum has been cancelled.\nA referendum has been cancelled.\nA referendum has ended its confirmation phase and is ready …\nA referendum has ended its confirmation phase and is ready …\nThe decision deposit has been placed.\nThe decision deposit has been placed.\nThe decision deposit has been refunded.\nThe decision deposit has been refunded.\nA referendum has moved into the deciding phase.\nA referendum has moved into the deciding phase.\nA deposit has been slashed.\nA deposit has been slashed.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe <code>Event</code> enum of this pallet\nThere are already a full complement of referenda in …\nReferendum’s decision deposit is already paid.\nA referendum has been killed.\nA referendum has been killed.\nMetadata for a referendum has been cleared.\nMetadata for a referendum has been cleared.\nMetadata for a referendum has been set.\nMetadata for a referendum has been set.\nThe deposit cannot be refunded since none was made.\nThe deposit refunder is not the depositor.\nNo track exists for the proposal origin.\nReferendum is not ongoing.\nThere was nothing to do in the advancement.\nThe preimage does not exist.\nThe preimage is stored with a different length than the …\nThe queue of the track is empty.\nA proposal has been rejected by referendum.\nA proposal has been rejected by referendum.\nThe submission deposit has been refunded.\nThe submission deposit has been refunded.\nA referendum has been submitted.\nA referendum has been submitted.\nA referendum has been timed out without being decided.\nA referendum has been timed out without being decided.\nAny deposit cannot be refunded until after the decision is …\nCancel an ongoing referendum.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCancel an ongoing referendum and slash the deposits.\nAdvance a referendum onto its next logical state. Only …\nAdvance a track onto its next logical state. Only used …\nPost the Decision Deposit for a referendum.\nRefund the Decision Deposit for a closed referendum back …\nRefund the Submission Deposit for a closed referendum back …\nSet or clear metadata of a referendum.\nPropose a referendum on a privileged action.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nThe call for the provided hash was not found so the task …\nCanceled some task.\nDispatched some task.\nThe <code>Error</code> enum of this pallet.\nEvents type.\nFailed to schedule a call\nAttempt to use a non-named function on a named task.\nCannot find the scheduled call.\nThe given task was unable to be renewed since the agenda …\nThe given task can never be executed since it is …\nReschedule failed because it does not change scheduled …\nCancel a retry configuration for some task.\nThe given task was unable to be retried since the agenda …\nSet a retry configuration for some task.\nScheduled some task.\nGiven target block number is in the past.\nCancel an anonymously scheduled task.\nCancel a named scheduled task.\nRemoves the retry configuration of a task.\nCancel the retry configuration of a named task.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAnonymously schedule a task.\nAnonymously schedule a task after a delay.\nSchedule a named task.\nSchedule a named task after a delay.\nSet a retry configuration for a task so that, in case its …\nSet a retry configuration for a named task so that, in …\nContains a variant per dispatchable extrinsic that this …\nRegistered duplicate key.\nError for the session pallet.\nThe <code>Event</code> enum of this pallet\nInvalid ownership proof.\nNew session has happened. Note that the argument is the …\nKey setting account is not live, so it’s impossible to …\nNo associated validator ID for account.\nNo keys are associated with this account.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nRemoves any session key(s) of the function caller.\nSets the session key(s) of the function caller to <code>keys</code>. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStash is already bonded.\nRewards for this era have already been claimed for this …\nController is already paired.\nInternal state has become somehow corrupted and the …\nA nomination target was supplied that was blocked or …\nAn account has bonded this amount. [stash, amount]\nSome bound is not met.\nContains a variant per dispatchable extrinsic that this …\nThe user has enough bond and thus cannot be chilled …\nCannot reset a ledger.\nAn account has stopped participating as either a validator …\nCommission is too low. Must be at least <code>MinCommission</code>.\nReport of a controller batch deprecation.\nUsed when attempting to use deprecated controller account …\nDuplicate index.\nTargets cannot be empty.\nThe era payout has been set; the first balance is the …\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA new force era mode was set.\nAttempting to target a stash that still has funds.\nIncorrect previous history depth input provided.\nIncorrect number of slashing spans provided.\nCannot have a validator or nominator role, with value less …\nInvalid era to reward.\nInvalid number of nominations.\nNo nominators exist on this page.\nSlash record index out of bounds.\nA nominator has been kicked from a validator.\nCan not schedule more unlock chunks.\nCan not rebond without unlocking chunks.\nNot a controller account.\nNot enough funds available to withdraw.\nItems are not sorted and unique.\nNot a stash account.\nAn old slashing report from a prior era was discarded …\nThe stakers’ rewards are getting paid.\nProvided reward destination is not allowed.\nThe nominator has been rewarded by this amount to this …\nA slash for the given validator, for the given percentage …\nA staker (validator or nominator) has been slashed by the …\nTargets size limit reached.\nVoters size limit reached.\nA new set of stakers was elected.\nThe election failed. No new era is planned.\nThere are too many nominators in the system. Governance …\nToo many nomination targets supplied.\nThere are too many validator candidates in the system. …\nAn account has unbonded this amount.\nA validator has set their preferences.\nOperation not allowed for virtual stakers.\nAn account has called <code>withdraw_unbonded</code> and removed …\nTake the origin account as a stash and lock up <code>value</code> of …\nAdd some extra amount that have appeared in the stash …\nCancel enactment of a deferred slash.\nDeclare no desire to either validate or nominate.\nDeclare a <code>controller</code> to stop participating as either a …\nUpdates a batch of controller accounts to their …\nForce a validator to have at least the minimum commission. …\nForce there to be a new era at the end of the next …\nForce there to be a new era at the end of sessions …\nForce there to be no new eras indefinitely.\nForce a current staker to become completely unstaked, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nIncrements the ideal number of validators up to maximum of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRemove the given nominations from the calling validator.\nDeclare the desire to nominate <code>targets</code> for the origin …\nPay out next page of the stakers behind a validator for …\nPay out a page of the stakers behind a validator for the …\nRemove all data structures concerning a staker/stash once …\nRebond a portion of the stash scheduled to be unlocked.\nRestores the state of a ledger which is in an inconsistent …\nScale up the ideal number of validators by a factor up to …\n(Re-)sets the controller of a stash to the stash itself. …\nSet the validators who cannot be slashed (if any).\nSets the minimum amount of commission that each validators …\n(Re-)set the payment target for a controller.\nUpdate the various staking configurations .\nSets the ideal number of validators.\nSchedule a portion of the stash to be unlocked ready for …\nMigrates an account’s <code>RewardDestination::Controller</code> to …\nDeclare the desire to validate for the origin controller.\nRemove any unlocked chunks from the <code>unlocking</code> queue from …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nError for the Sudo pallet.\nThe <code>Event</code> enum of this pallet\nThe sudo key has been updated.\nThe key was permanently removed.\nSender must be the Sudo account.\nA sudo call just took place.\nA sudo_as call just took place.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nPermanently removes the sudo key.\nAuthenticates the current sudo key and sets the given …\nAuthenticates the sudo key and dispatches a function call …\nAuthenticates the sudo key and dispatches a function call …\nAuthenticates the sudo key and dispatches a function call …\nContains a variant per dispatchable extrinsic that this …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nSet the current time.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Event</code> enum of this pallet\nA transaction fee <code>actual_fee</code>, of which <code>tip</code> was added to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe payment has already been attempted.\nA new asset spend proposal has been approved.\nAn approved spend was voided.\nSome funds have been allocated.\nSome of our funds have been burnt.\nContains a variant per dispatchable extrinsic that this …\nSome funds have been deposited.\nThe spend is not yet eligible for payout.\nError for the treasury pallet.\nThe <code>Event</code> enum of this pallet\nThe balance of the asset kind is not convertible to the …\nThe payment has neither failed nor succeeded yet.\nThe spend origin is valid but the amount it is allowed to …\nNo proposal, bounty or spend at that index.\nThe payout was not yet attempted/claimed.\nA payment happened.\nA payment failed and can be retried.\nThere was some issue with the mechanism of payment.\nProposal has not been approved.\nSpending has finished; this is the amount that rolls over …\nA new spend proposal has been approved.\nThe spend has expired and cannot be claimed.\nA spend was processed and removed from the storage. It …\nWe have ended a spend period and will now allocate funds.\nToo many approvals in the queue.\nThe inactive funds of the pallet have been updated.\nCheck the status of the spend and remove it from the …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nClaim a spend.\nForce a previously approved proposal to be removed from …\nPropose and approve a spend of treasury funds.\nPropose and approve a spend of treasury funds.\nVoid previously approved spend.\nBatch of dispatches completed fully with no error.\nBatch of dispatches completed but has errors.\nBatch of dispatches did not complete fully. Index of first …\nContains a variant per dispatchable extrinsic that this …\nA call was dispatched.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nA single item within a Batch of dispatches has completed …\nA single item within a Batch of dispatches has completed …\nToo many calls batched.\nSend a call through an indexed pseudonym of the sender.\nSend a batch of dispatch calls.\nSend a batch of dispatch calls and atomically execute them.\nDispatches a function call with a provided origin.\nSend a batch of dispatch calls. Unlike <code>batch</code>, it allows …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nDispatch a function call with a specified weight.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAmount being transferred is too low to create a vesting …\nThe account already has <code>MaxVestingSchedules</code> count of …\nContains a variant per dispatchable extrinsic that this …\nError for the vesting pallet.\nThe <code>Event</code> enum of this pallet\nFailed to create a new schedule because some parameter was …\nThe account given is not vesting.\nAn index was out of bounds of the vesting schedules.\nAn [account] has become fully vested.\nThe amount vested has been updated. This could indicate a …\nForce remove a vesting schedule\nForce a vested transfer.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nMerge two vesting schedules together, creating a new …\nUnlock any vested funds of the sender account.\nUnlock any vested funds of a <code>target</code> account.\nCreate a vested transfer.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nContains a variant per dispatchable extrinsic that this …\nThe call was already whitelisted; No-Op.\nThe call was not whitelisted.\nThe <code>Error</code> enum of this pallet.\nThe <code>Event</code> enum of this pallet\nThe weight of the decoded call was higher than the witness.\nThe preimage of the call hash could not be loaded.\nThe call could not be decoded.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe call for the provided hash was not found so the task …\nCanceled some task.\nDispatched some task.\nEvents type.\nThe given task was unable to be renewed since the agenda …\nThe given task can never be executed since it is …\nCancel a retry configuration for some task.\nThe given task was unable to be retried since the agenda …\nSet a retry configuration for some task.\nScheduled some task.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>Event</code> enum of this pallet\nNew session has happened. Note that the argument is the …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nAn account has bonded this amount. [stash, amount]\nAn account has stopped participating as either a validator …\nReport of a controller batch deprecation.\nThe era payout has been set; the first balance is the …\nThe <code>Event</code> enum of this pallet\nA new force era mode was set.\nA nominator has been kicked from a validator.\nAn old slashing report from a prior era was discarded …\nThe stakers’ rewards are getting paid.\nThe nominator has been rewarded by this amount to this …\nA slash for the given validator, for the given percentage …\nA staker (validator or nominator) has been slashed by the …\nTargets size limit reached.\nVoters size limit reached.\nA new set of stakers was elected.\nThe election failed. No new era is planned.\nAn account has unbonded this amount.\nA validator has set their preferences.\nAn account has called <code>withdraw_unbonded</code> and removed …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nBurned from the pool.\nDeposited to the pool.\nThe <code>Event</code> enum of this pallet\nIdeal staking ratio changed.\nMinted to the pool.\nTarget inflation changed.\nTransferred from the pool to an external account.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nStorage of pallet <code>AuthorityDiscovery</code>.\nStorage of pallet <code>Authorship</code>.\nStorage of pallet <code>Babe</code>.\nStorage of pallet <code>BagsList</code>.\nStorage of pallet <code>Balances</code>.\nStorage of pallet <code>Bounties</code>.\nStorage of pallet <code>ChildBounties</code>.\nStorage of pallet <code>ConvictionVoting</code>.\nStorage of pallet <code>ElectionProviderMultiPhase</code>.\nStorage of pallet <code>FellowshipCollective</code>.\nStorage of pallet <code>FellowshipReferenda</code>.\nStorage of pallet <code>GearBank</code>.\nStorage of pallet <code>GearEthBridge</code>.\nStorage of pallet <code>GearGas</code>.\nStorage of pallet <code>GearMessenger</code>.\nStorage of pallet <code>GearProgram</code>.\nStorage of pallet <code>GearScheduler</code>.\nStorage of pallet <code>Gear</code>.\nStorage of pallet <code>GearVoucher</code>.\nStorage of pallet <code>Grandpa</code>.\nStorage of pallet <code>Historical</code>.\nStorage of pallet <code>Identity</code>.\nStorage of pallet <code>ImOnline</code>.\nStorage of pallet <code>Multisig</code>.\nStorage of pallet <code>NominationPools</code>.\nStorage of pallet <code>Offences</code>.\nStorage of pallet <code>Preimage</code>.\nStorage of pallet <code>Proxy</code>.\nStorage of pallet <code>Referenda</code>.\nStorage of pallet <code>Scheduler</code>.\nStorage of pallet <code>Session</code>.\nStorage of pallet <code>StakingRewards</code>.\nStorage of pallet <code>Staking</code>.\nShow the call info.\nStorage of pallet <code>Sudo</code>.\nStorage of pallet <code>System</code>.\nStorage of pallet <code>Timestamp</code>.\nStorage of pallet <code>TransactionPayment</code>.\nStorage of pallet <code>Treasury</code>.\nStorage of pallet <code>Vesting</code>.\nStorage of pallet <code>Whitelist</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nreturns call name.\nThe <code>Event</code> enum of this pallet\nThe sudo key has been updated.\nThe key was permanently removed.\nA sudo call just took place.\nA sudo_as call just took place.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\n<code>:code</code> was updated.\nEvent for the System pallet.\nAn extrinsic failed.\nAn extrinsic completed successfully.\nAn account was reaped.\nA new account was created.\nOn on-chain remark happened.\nAn upgrade was authorized.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>Event</code> enum of this pallet\nA transaction fee <code>actual_fee</code>, of which <code>tip</code> was added to …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nA new asset spend proposal has been approved.\nAn approved spend was voided.\nSome funds have been allocated.\nSome of our funds have been burnt.\nSome funds have been deposited.\nThe <code>Event</code> enum of this pallet\nA payment happened.\nA payment failed and can be retried.\nSpending has finished; this is the amount that rolls over …\nA new spend proposal has been approved.\nA spend was processed and removed from the storage. It …\nWe have ended a spend period and will now allocate funds.\nThe inactive funds of the pallet have been updated.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nBatch of dispatches completed fully with no error.\nBatch of dispatches completed but has errors.\nBatch of dispatches did not complete fully. Index of first …\nA call was dispatched.\nThe <code>Event</code> enum of this pallet\nA single item within a Batch of dispatches has completed …\nA single item within a Batch of dispatches has completed …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>Event</code> enum of this pallet\nAn [account] has become fully vested.\nThe amount vested has been updated. This could indicate a …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nThe <code>Event</code> enum of this pallet\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.")