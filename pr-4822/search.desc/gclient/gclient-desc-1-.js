searchState.loadedDescShard("gclient", 1, "A format filterer, can be used to ensure that …\nA format filterer, can be used to ensure that …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a random value of <code>Self</code> given a stream of random …\nCreate a new instance from the given full public key.\nA new instance from an H256.\nA new instance from an H512.\nconst function to convert <code>Ss58AddressFormat</code> to u16\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nReturns the KeyPair from the English BIP39 seed <code>phrase</code>, or …\nConstruct from raw array.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerate new key pair from the provided <code>seed</code>.\nMake a new key pair from secret seed material. The slice …\nA new instance from the given slice that should be …\nSome if the string is a properly encoded SS58Check address.\nSome if the string is a properly encoded SS58Check address.\nSome if the string is a properly encoded SS58Check address.\nSome if the string is a properly encoded SS58Check address.\nSome if the string is a properly encoded SS58Check …\nSome if the string is a properly encoded SS58Check …\nInterprets the string <code>s</code> in order to generate a key pair.\nInterprets the string <code>s</code> in order to generate a key Pair. …\nSome if the string is a properly encoded SS58Check …\nSome if the string is a properly encoded SS58Check …\nGenerate new secure (random) key pair.\nGenerate new secure (random) key pair and provide the …\nCreates an instance of <code>Error::MissingCharacterInHardPath</code> …\nCreates an instance of <code>Error::InvalidCharacterInPass</code> using …\nCreates an instance of <code>Error::InvalidCharacterInPhrase</code> …\nCreates an instance of <code>Error::MissingCharacterInSoftPath</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA custom format is one that is not already known.\nNetwork/AddressType is reserved for future use.\nThe junctions as part of the uri.\nKnown key types; this also functions as a global registry …\nParses the given string.\nPassword.\nOptional password as given as part of the uri.\nKey derivation paths, ordered as in input string,\nThe phrase to derive the private key.\nPhrase, hexadecimal string, or ss58-compatible string.\nAddress prefix used on the network\nGet the public key.\nRecover the public key from this signature and a message.\nRecover the public key from this signature and a …\nSet the default SS58 “version”.\nSign a message.\nConstruct from raw array.\nReturn a vec filled with raw data.\nReturn a <code>Vec&lt;u8&gt;</code> filled with raw data.\nReturn the ss58-check string for this key.\nReturn the ss58-check string for this key.\nReturn the ss58-check string for this key.\nReturn the ss58-check string for this key.\nTokens used on the given network.\nConvert from an instance of <code>T</code> to Self. This is not …\nThe counterpart to <code>unchecked_from</code>.\nReturns either the input address format or the default.\nVerify a signature on a message. Returns true if the …\nGet VRF-specific pre-output.\nSign VRF-specific data.\nVerify input data signature.\nZero out this object from memory using Rust intrinsics …\nKey type for controlling an account in a Substrate …\nKey type for Aura module, built-in. Identified as <code>aura</code>.\nKey type for AuthorityDiscovery module, built-in. …\nKey type for Babe module, built-in. Identified as <code>babe</code>.\nKey type for BEEFY module.\nA key type ID useful for tests.\nKey type for Grandpa module, built-in. Identified as <code>gran</code>.\nKey type for ImOnline module, built-in. Identified as <code>imon</code>.\nKey type for Mixnet module, used to sign key-exchange …\nKey type for Sassafras module, built-in. Identified as <code>sass</code>…\nKey type for staking, built-in. Identified as <code>stak</code>.\nA key type for signing statements\nGeneric byte array holding some crypto-related raw data.\nGeneric encoded public key.\nTag used for generic public key bytes.\nGeneric encoded signature.\nTag used for generic signature bytes.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nExecutes the wrapped closure on drop.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCreates a new <code>DeferGuard</code> with the given closure.\nAn identifier used to match public keys against ecdsa keys\nThe byte length of public key\nA key pair.\nThe ECDSA compressed public key.\nThe byte length of signature\nA signature (a 512-bit value, plus 8 bits for recovery ID).\nDerive a child key from a series of given junctions.\nReturns the argument unchanged.\nExactly as <code>from_string</code> except that if no matches are found …\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nMake a new key pair from secret seed material. The slice …\nCalls <code>U::from(self)</code>.\nGet the public key.\nGet the seed for this key.\nSign a message.\nSign a pre-hashed message\nReturn a vec filled with raw data.\nVerify a signature on a message. Returns true if the …\nVerify a signature on a message. Returns true if the …\nVerify a signature on a pre-hashed message. Return <code>true</code> if …\nAn identifier used to match public keys against ed25519 …\nThe byte length of public key\nA key pair.\nA public key.\nThe byte length of signature\nA signature.\nDerive a child key from a series of given junctions.\nReturns the argument unchanged.\nExactly as <code>from_string</code> except that if no matches are found …\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nMake a new key pair from secret seed material. The slice …\nCalls <code>U::from(self)</code>.\nGet the public key.\nGet the seed for this key.\nSign a message.\nReturn a vec filled with raw data.\nVerify a signature on a message.\nFixed-size uninterpreted hash type with 20 bytes (160 …\nFixed-size uninterpreted hash type with 32 bytes (256 …\nFixed-size uninterpreted hash type with 64 bytes (512 …\nHash conversion. Used to convert between unbound …\nDo a Blake2 128-bit hash and return result.\nDo a Blake2 256-bit hash and return result.\nDo a Blake2 512-bit hash and return result.\nDo a Blake2 512-bit hash and place result in <code>dest</code>.\nDo a Blake2 64-bit hash and return result.\nDo a keccak 256-bit hash and return result.\nDo a keccak 512-bit hash and return result.\nDo a sha2 256-bit hash and return result.\nDo a XX 128-bit hash and return result.\nDo a XX 128-bit hash and place result in <code>dest</code>.\nDo a XX 256-bit hash and return result.\nDo a XX 256-bit hash and place result in <code>dest</code>.\nDo a XX 64-bit hash and return result.\nDo a XX 64-bit hash and place result in <code>dest</code>.\nSimple trait to transform various types to <code>&amp;[u8]</code>\nSimple wrapper to display hex representation of bytes.\nTransform <code>self</code> into <code>&amp;[u8]</code>.\nFormat into ASCII + # + hex, suitable for storage key …\nCreate new instance that will display <code>d</code> as a hex string …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nExecution context extra capabilities.\nA externalities extension for accessing the Offchain DB.\nThe requested action couldn’t been completed within a …\nDeadline was reached while we waited for this request to …\nDuration type\nAn extended externalities for offchain workers.\nThe request has finished with given status code.\nExternal http calls.\nAn error enum returned by some http methods.\nOpaque type for offchain http requests.\nStatus of the HTTP request\nThe ID of the request is invalid in this context.\nThe passed ID is invalid in this context.\nThere was an IO Error while processing the request.\nAn error has occurred during the request, for example a …\nKeystore access.\nAn identifier for a type of cryptographic key.\nLocal storage is revertible and fork-aware. It means that …\nAn <code>*Externalities</code> implementation with limited capabilities.\nAccess to opaque network state.\nManage the authorized nodes\nAccess to offchain worker DB (read only).\nAccess to offchain worker DB (writes).\nThe offchain database extension that will be registered at …\nChange to be applied to the offchain worker db in regards …\nOffchain DB persistent (non-fork-aware) storage.\nThe offchain worker extension that will be registered at …\nSimple blob to hold a <code>Multiaddr</code> without committing to its …\nA blob to hold information about the local node’s …\nPersistent storage is non-revertible and not fork-aware. …\nRandomness source.\nRemove the data associated with the key\nPersistent storage prefix used by the Offchain Worker API …\nOverwrite the value of an associated key\nA type of supported crypto.\nAccess time related functionality\nOpaque timestamp type\nAbstraction over transaction pool.\nAn externalities extension to submit transactions to the …\nIncrease the timestamp by given <code>Duration</code>.\nReturns the set containing all flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReplace the value in storage if given old_value matches …\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns a saturated difference (Duration) between two …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nList of addresses the node knows it can be reached as.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nCreate new duration representing given number of …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreates new <code>Timestamp</code> given unix timestamp in milliseconds.\nRetrieve a value from storage under given key and prefix.\nAppend header to the request.\nInitiates a http request given HTTP verb and the URL.\nWrite a chunk of request body.\nRead all response headers.\nRead a chunk of body response to given buffer.\nBlock and wait for the responses for given requests.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if no flags are currently stored.\nReturns if the local node is a potential validator.\nRemoves a value in the local storage.\nSets a value in the local storage if it matches current …\nGets a value from the local storage.\nSets a value in the local storage.\nReturns number of milliseconds this Duration represents.\nReturns information about the local node’s network state.\nCreate new externalities limited to given <code>capabilities</code>.\nCreate new <code>OpaqueMultiaddr</code>\nCreate a new instance of <code>Self</code>.\nCreate a new instance of <code>OffchainDbExt</code>.\nCreate a new instance of <code>TransactionPoolExt</code>.\nReturns the complement of this set of flags.\nPeerId of the local node in SCALE encoded.\nReturns a random seed.\nClear a storage entry under given key and prefix.\nRemoves the specified flags in-place.\nPersist a value in storage under given key and prefix.\nInserts or removes the specified flags depending on the …\nSet the authorized nodes from runtime.\nPause the execution until <code>deadline</code> is reached.\nIn-memory implementation of offchain workers database.\nDecrease the timestamp by given <code>Duration</code>\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nSubmit transaction.\nReturns the symmetric difference between the flags in <code>self</code> …\nUtilities for offchain calls testing.\nReturns current UNIX timestamp (in millis)\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturn number of milliseconds since UNIX epoch.\nIn-memory storage for offchain workers.\nOffchain DB that implements <code>DbExternalities</code> for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the offchain storage and iterate over all key …\nIterate over all key value pairs by reference.\nCreate new instance of Offchain DB.\nRemove a key and its associated value from the offchain …\nInternal state of the externalities.\nPending request.\nThe internal state of the fake transaction pool.\nImplementation of offchain externalities used for tests.\nSharable “persistent” offchain storage for test.\nImplementation of transaction pool used for test.\nApply a set of off-chain changes directly to the test …\nRequest body\nAdd expected HTTP request.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nAsserts that pending request has been submitted and fills …\nRetrieve a key from the test backend.\nRequest headers\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLocal storage\nEncoded Metadata\nHTTP method\nCreate a new and empty offchain storage db for persistent …\nCreate new <code>TestOffchainExt</code> and a reference to the internal …\nCreate new <code>TestTransactionPoolExt</code> and a reference to the …\nPersistent local storage\nNumber of bytes already read from the response body.\nA list of pending requests.\nResponse body\nResponse headers\nA supposedly random seed.\nHas the request been sent already.\nA timestamp simulating the current time.\nA vector of transactions submitted from the runtime.\nURI\nCreate new <code>TestOffchainExt</code> and a reference to the internal …\nA key pair.\nA public key.\nA pair of signatures of different types\nDerive a child key from a series of given junctions.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nGet the seed/secret key for each key and then concatenate …\nA <strong>data structure</strong> that can be deserialized from any data …\nA <strong>data format</strong> that can deserialize any data structure …\nThe error type that can be returned if some error occurs …\nThe error type when some error occurs during serialization.\nThe output type produced by this <code>Serializer</code> during …\nA <strong>data structure</strong> that can be serialized into any data …\nType returned from <code>serialize_map</code> for serializing the …\nType returned from <code>serialize_seq</code> for serializing the …\nType returned from <code>serialize_struct</code> for serializing the …\nType returned from <code>serialize_struct_variant</code> for …\nType returned from <code>serialize_tuple</code> for serializing the …\nType returned from <code>serialize_tuple_struct</code> for serializing …\nType returned from <code>serialize_tuple_variant</code> for serializing …\nA <strong>data format</strong> that can serialize any data structure …\nCollect an iterator as a map.\nCollect an iterator as a sequence.\nSerialize a string produced by an implementation of <code>Display</code>…\nGeneric data structure deserialization framework.\nDeserialize this value from the given Serde deserializer.\nRequire the <code>Deserializer</code> to figure out how to drive the …\nHint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.\nHint that the <code>Deserialize</code> type is expecting a byte array …\nHint that the <code>Deserialize</code> type is expecting a byte array …\nHint that the <code>Deserialize</code> type is expecting a <code>char</code> value.\nHint that the <code>Deserialize</code> type is expecting an enum value …\nHint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.\nHint that the <code>Deserialize</code> type is expecting the name of a …\nHint that the <code>Deserialize</code> type needs to deserialize a …\nHint that the <code>Deserialize</code> type is expecting a map of …\nHint that the <code>Deserialize</code> type is expecting a newtype …\nHint that the <code>Deserialize</code> type is expecting an optional …\nHint that the <code>Deserialize</code> type is expecting a sequence of …\nHint that the <code>Deserialize</code> type is expecting a string value …\nHint that the <code>Deserialize</code> type is expecting a string value …\nHint that the <code>Deserialize</code> type is expecting a struct with …\nHint that the <code>Deserialize</code> type is expecting a sequence of …\nHint that the <code>Deserialize</code> type is expecting a tuple struct …\nHint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.\nHint that the <code>Deserialize</code> type is expecting a unit value.\nHint that the <code>Deserialize</code> type is expecting a unit struct …\nHelper macro when implementing the <code>Deserializer</code> part of a …\nDetermine whether <code>Deserialize</code> implementations should …\nDetermine whether <code>Serialize</code> implementations should …\nGeneric data structure serialization framework.\nSerialize this value into the given Serde serializer.\nSerialize a <code>bool</code> value.\nSerialize a chunk of raw byte data.\nSerialize a character.\nSerialize an <code>f32</code> value.\nSerialize an <code>f64</code> value.\nSerialize an <code>i128</code> value.\nSerialize an <code>i16</code> value.\nSerialize an <code>i32</code> value.\nSerialize an <code>i64</code> value.\nSerialize an <code>i8</code> value.\nBegin to serialize a map. This call must be followed by …\nSerialize a newtype struct like <code>struct Millimeters(u8)</code>.\nSerialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.\nSerialize a <code>None</code> value.\nBegin to serialize a variably sized sequence. This call …\nSerialize a <code>Some(T)</code> value.\nSerialize a <code>&amp;str</code>.\nBegin to serialize a struct like …\nBegin to serialize a struct variant like <code>E::S</code> in …\nBegin to serialize a statically sized sequence whose …\nBegin to serialize a tuple struct like …\nBegin to serialize a tuple variant like <code>E::T</code> in …\nSerialize a <code>u128</code> value.\nSerialize a <code>u16</code> value.\nSerialize a <code>u32</code> value.\nSerialize a <code>u64</code> value.\nSerialize a <code>u8</code> value.\nSerialize a <code>()</code> value.\nSerialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.\nSerialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.\nThe input contained a boolean value that was not expected.\nThe input contained a <code>&amp;[u8]</code> or <code>Vec&lt;u8&gt;</code> that was not …\nThe input contained a <code>char</code> that was not expected.\nA <strong>data structure</strong> that can be deserialized from any data …\nA data structure that can be deserialized without …\n<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …\nA <strong>data format</strong> that can deserialize any data structure …\nThe type of the deserializer being converted into.\nThe input contained an enum that was not expected.\nProvides a <code>Visitor</code> access to the data of an enum in the …\nThe <code>Error</code> trait allows <code>Deserialize</code> implementations to …\nThe error type that can be returned if some error occurs …\nThe error type that can be returned if some error occurs …\nThe error type that can be returned if some error occurs …\nThe error type that can be returned if some error occurs …\nThe error type that can be returned if some error occurs …\n<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …\nThe input contained a floating point <code>f32</code> or <code>f64</code> that was …\nAn efficient way of discarding data from a deserializer.\nConverts an existing value into a <code>Deserializer</code> from which …\nThe input contained a map that was not expected.\nProvides a <code>Visitor</code> access to each entry of a map in the …\nThe input contained a newtype struct that was not expected.\nThe input contained a newtype variant that was not …\nThe input contained an <code>Option&lt;T&gt;</code> that was not expected.\nA message stating what uncategorized thing the input …\nThe input contained a sequence that was not expected.\nProvides a <code>Visitor</code> access to each element of a sequence in …\nThe input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …\n<code>Error</code> is a trait representing the basic expectations for …\nThe input contained a <code>&amp;str</code> or <code>String</code> that was not expected.\nThe input contained a struct variant that was not expected.\nThe input contained a tuple variant that was not expected.\n<code>Unexpected</code> represents an unexpected invocation of any one …\nThe input contained a unit <code>()</code> that was not expected.\nThe input contained a unit variant that was not expected.\nThe input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or <code>u64</code>…\nThe type produced by using this seed.\nThe value produced by this visitor.\nThe <code>Visitor</code> that will be used to deserialize the content …\n<code>VariantAccess</code> is a visitor that is created by the …\nThis trait represents a visitor that walks through a …\nRaised when there is general error when deserializing a …\nEquivalent to the more common <code>Deserialize::deserialize</code> …\nDeserialize this value from the given Serde deserializer.\nRequire the <code>Deserializer</code> to figure out how to drive the …\nHint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.\nHint that the <code>Deserialize</code> type is expecting a byte array …\nHint that the <code>Deserialize</code> type is expecting a byte array …\nHint that the <code>Deserialize</code> type is expecting a <code>char</code> value.\nHint that the <code>Deserialize</code> type is expecting an enum value …\nHint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.\nHint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.\nHint that the <code>Deserialize</code> type is expecting the name of a …\nHint that the <code>Deserialize</code> type needs to deserialize a …\nHint that the <code>Deserialize</code> type is expecting a map of …\nHint that the <code>Deserialize</code> type is expecting a newtype …\nHint that the <code>Deserialize</code> type is expecting an optional …\nHint that the <code>Deserialize</code> type is expecting a sequence of …\nHint that the <code>Deserialize</code> type is expecting a string value …\nHint that the <code>Deserialize</code> type is expecting a string value …\nHint that the <code>Deserialize</code> type is expecting a struct with …\nHint that the <code>Deserialize</code> type is expecting a sequence of …\nHint that the <code>Deserialize</code> type is expecting a tuple struct …\nHint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.\nHint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.\nHint that the <code>Deserialize</code> type is expecting a unit value.\nHint that the <code>Deserialize</code> type is expecting a unit struct …\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nAttempts to downcast the box to a concrete type.\nForwards to the method defined on the type <code>dyn Error</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns some mutable reference to the inner value if it is …\nForwards to the method defined on the type <code>dyn Error</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns some reference to the inner value if it is of type …\nRaised when a <code>Deserialize</code> struct type received more than …\nFormat a message stating what data this Visitor expects to …\nFormat an explanation of what data was being expected. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this value into a deserializer.\nRaised when deserializing a sequence or map and the input …\nRaised when a <code>Deserialize</code> receives a type different from …\nRaised when a <code>Deserialize</code> receives a value of the right …\nForwards to the method defined on the type <code>dyn Error</code>.\nReturns <code>true</code> if the inner type is the same as <code>T</code>.\nForwards to the method defined on the type <code>dyn Error</code>.\nDetermine whether <code>Deserialize</code> implementations should …\nRaised when a <code>Deserialize</code> struct type expected to receive …\nCalled when deserializing a variant with a single value.\nCalled when deserializing a variant with a single value.\nThis returns <code>Ok(Some(value))</code> for the next value in the …\nThis returns <code>Ok(Some(value))</code> for the next value in the …\nThis returns <code>Ok(Some((key, value)))</code> for the next …\nThis returns <code>Ok(Some((key, value)))</code> for the next …\nThis returns <code>Ok(Some(key))</code> for the next key in the map, or …\nThis returns <code>Ok(Some(key))</code> for the next key in the map, or …\nThis returns a <code>Ok(value)</code> for the next value in the map.\nThis returns a <code>Ok(value)</code> for the next value in the map.\nProvides type-based access to context intended for error …\nProvides type-based access to context intended for error …\nReturns the number of elements remaining in the sequence, …\nReturns the number of entries remaining in the map, if …\nReturns the lower-level source of this error, if any.\nReturns the lower-level source of this error, if any.\nReturns an iterator starting with the current error and …\nCalled when deserializing a struct-like variant.\nCalled when deserializing a tuple-like variant.\nCalled when deserializing a variant with no values.\nRaised when a <code>Deserialize</code> struct type received a field …\nRaised when a <code>Deserialize</code> enum type received a variant …\nBuilding blocks for deserializing basic values using the …\n<code>variant</code> is called to identify which variant to deserialize.\n<code>variant</code> is called to identify which variant to deserialize.\nThe input contains a boolean.\nThe input contains a byte array that lives at least as …\nThe input contains a string that lives at least as long as …\nThe input contains a byte array and ownership of the byte …\nThe input contains a byte array. The lifetime of the byte …\nThe input contains a <code>char</code>.\nThe input contains an enum.\nThe input contains an <code>f32</code>.\nThe input contains an <code>f64</code>.\nThe input contains a <code>i128</code>.\nThe input contains an <code>i16</code>.\nThe input contains an <code>i32</code>.\nThe input contains an <code>i64</code>.\nThe input contains an <code>i8</code>.\nThe input contains a key-value map.\nThe input contains a newtype struct.\nThe input contains an optional that is absent.\nThe input contains a sequence of elements.\nThe input contains an optional that is present.\nThe input contains a string. The lifetime of the string is …\nThe input contains a string and ownership of the string is …\nThe input contains a <code>u128</code>.\nThe input contains a <code>u16</code>.\nThe input contains a <code>u32</code>.\nThe input contains a <code>u64</code>.\nThe input contains a <code>u8</code>.\nThe input contains a unit <code>()</code>.\nA deserializer holding a <code>bool</code>.\nA deserializer holding a <code>&amp;[u8]</code> with a lifetime tied to …\nA deserializer holding a <code>&amp;str</code> with a lifetime tied to …\nA deserializer holding a <code>&amp;[u8]</code>. Always calls …\nA deserializer holding a <code>char</code>.\nA deserializer holding a <code>Cow&lt;str&gt;</code>.\nA deserializer holding an <code>EnumAccess</code>.\nA minimal representation of all possible errors that can …\nA deserializer holding an <code>f32</code>.\nA deserializer holding an <code>f64</code>.\nA deserializer holding an <code>i128</code>.\nA deserializer holding an <code>i16</code>.\nA deserializer holding an <code>i32</code>.\nA deserializer holding an <code>i64</code>.\nA deserializer holding an <code>i8</code>.\nA deserializer holding an <code>isize</code>.\nA deserializer holding a <code>MapAccess</code>.\nA deserializer that iterates over a map.\nA deserializer holding a <code>SeqAccess</code>.\nA deserializer that iterates over a sequence.\nA deserializer holding a <code>&amp;str</code>.\nA deserializer holding a <code>String</code>.\nA deserializer holding a <code>u128</code>.\nA deserializer holding a <code>u16</code>.\nA deserializer holding a <code>u32</code>.\nA deserializer holding a <code>u64</code>.\nA deserializer holding a <code>u8</code>.\nA deserializer holding a <code>()</code>.\nA deserializer holding a <code>usize</code>.\nCheck for remaining elements after passing a …\nCheck for remaining elements after passing a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new borrowed deserializer from the given string.\nCreate a new deserializer from the given bytes.\nCreate a new borrowed deserializer from the given borrowed …\nConstruct a new <code>MapDeserializer&lt;I, E&gt;</code>.\nConstruct a new <code>SeqDeserializer&lt;I, E&gt;</code>.\nConstruct a new <code>SeqAccessDeserializer&lt;A&gt;</code>.\nConstruct a new <code>MapAccessDeserializer&lt;A&gt;</code>.\nConstruct a new <code>EnumAccessDeserializer&lt;A&gt;</code>.\nTrait used by <code>Serialize</code> implementations to generically …\nThe error type when some error occurs during serialization.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nMust match the <code>Error</code> type of our <code>Serializer</code>.\nHelper type for implementing a <code>Serializer</code> that does not …\nThe output type produced by this <code>Serializer</code> during …\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nMust match the <code>Ok</code> type of our <code>Serializer</code>.\nA <strong>data structure</strong> that can be serialized into any data …\nReturned from <code>Serializer::serialize_map</code>.\nType returned from <code>serialize_map</code> for serializing the …\nReturned from <code>Serializer::serialize_seq</code>.\nType returned from <code>serialize_seq</code> for serializing the …\nReturned from <code>Serializer::serialize_struct</code>.\nType returned from <code>serialize_struct</code> for serializing the …\nReturned from <code>Serializer::serialize_struct_variant</code>.\nType returned from <code>serialize_struct_variant</code> for …\nReturned from <code>Serializer::serialize_tuple</code>.\nType returned from <code>serialize_tuple</code> for serializing the …\nReturned from <code>Serializer::serialize_tuple_struct</code>.\nType returned from <code>serialize_tuple_struct</code> for serializing …\nReturned from <code>Serializer::serialize_tuple_variant</code>.\nType returned from <code>serialize_tuple_variant</code> for serializing …\nA <strong>data format</strong> that can serialize any data structure …\n<code>Error</code> is a trait representing the basic expectations for …\nCollect an iterator as a map.\nCollect an iterator as a sequence.\nSerialize a string produced by an implementation of <code>Display</code>…\nUsed when a <code>Serialize</code> implementation encounters any error …\nFinish serializing a sequence.\nFinish serializing a tuple.\nFinish serializing a tuple struct.\nFinish serializing a tuple variant.\nFinish serializing a map.\nFinish serializing a struct.\nFinish serializing a struct variant.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nDetermine whether <code>Serialize</code> implementations should …\nSerialize this value into the given Serde serializer.\nSerialize a <code>bool</code> value.\nSerialize a chunk of raw byte data.\nSerialize a character.\nSerialize a sequence element.\nSerialize a tuple element.\nSerialize a map entry consisting of a key and a value.\nSerialize an <code>f32</code> value.\nSerialize an <code>f64</code> value.\nSerialize a tuple struct field.\nSerialize a tuple variant field.\nSerialize a struct field.\nSerialize a struct variant field.\nSerialize an <code>i128</code> value.\nSerialize an <code>i16</code> value.\nSerialize an <code>i32</code> value.\nSerialize an <code>i64</code> value.\nSerialize an <code>i8</code> value.\nSerialize a map key.\nBegin to serialize a map. This call must be followed by …\nSerialize a newtype struct like <code>struct Millimeters(u8)</code>.\nSerialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.\nSerialize a <code>None</code> value.\nBegin to serialize a variably sized sequence. This call …\nSerialize a <code>Some(T)</code> value.\nSerialize a <code>&amp;str</code>.\nBegin to serialize a struct like …\nBegin to serialize a struct variant like <code>E::S</code> in …\nBegin to serialize a statically sized sequence whose …\nBegin to serialize a tuple struct like …\nBegin to serialize a tuple variant like <code>E::T</code> in …\nSerialize a <code>u128</code> value.\nSerialize a <code>u16</code> value.\nSerialize a <code>u32</code> value.\nSerialize a <code>u64</code> value.\nSerialize a <code>u8</code> value.\nSerialize a <code>()</code> value.\nSerialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.\nSerialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.\nSerialize a map value.\nIndicate that a struct field has been skipped.\nIndicate that a struct variant field has been skipped.\nA target for <code>core::write!</code> macro - constructs a string in …\nMemory allocation APIs.\nUtilities for dynamic typing or type reflection.\nShareable mutable containers.\nThe <code>Clone</code> trait for types that cannot be ‘implicitly …\nUtilities for comparing and ordering values.\nTraits for conversions between types.\nThe <code>Default</code> trait for types with a default value.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGeneric hashing support.\nFeature gate some code that should only be run when <code>std</code> …\nAccess the content of this <code>Writer</code> e.g. for printout\nCalls <code>U::from(self)</code>.\nConvert into the content of this <code>Writer</code>\nComposable external iteration.\nInitialize a key-value collection from array.\nPrimitive traits and types representing basic properties …\nBasic functions for dealing with memory.\nAdditional functionality for numerics.\nOverloadable operators.\nPrelude of common useful imports.\nError handling with the <code>Result</code> type.\nUseful synchronization primitives.\nTemporal quantification.\nCreates a <code>Vec</code> containing the arguments.\nThe <code>AllocError</code> error indicates an allocation failure that …\nAn implementation of <code>Allocator</code> can allocate, grow, shrink, …\nThe global memory allocator.\nA memory allocator that can be registered as the standard …\nLayout of a block of memory.\nThe <code>LayoutError</code> is returned when the parameters given to …\nThe default memory allocator provided by the operating …\nThe minimum byte alignment for a memory block of this …\nCreates a layout describing the record that can hold a …\nAllocates memory with the global allocator.\nAllocates memory as described by the given <code>layout</code>.\nAllocates zero-initialized memory with the global …\nBehaves like <code>alloc</code>, but also ensures that the contents are …\nAttempts to allocate a block of memory.\nBehaves like <code>allocate</code>, but also ensures that the returned …\nCreates a layout describing the record for a <code>[T; n]</code>.\nCreates a “by reference” adapter for this instance of …\nCreates a <code>NonNull</code> that is dangling, but well-aligned for …\nDeallocates memory with the global allocator.\nDeallocates the block of memory at the given <code>ptr</code> pointer …\nDeallocates the memory referenced by <code>ptr</code>.\nCreates a layout describing the record for <code>self</code> followed by\nCreates a layout describing the record for <code>self</code> followed by\nProduces layout describing a record that could be used to …\nProduces layout describing a record that could be used to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nConstructs a <code>Layout</code> from a given <code>size</code> and <code>align</code>, or …\nCreates a layout, bypassing all checks.\nAttempts to extend the memory block.\nBehaves like <code>grow</code>, but also ensures that the new contents …\nSignals a memory allocation error.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a <code>Layout</code> suitable for holding a value of type <code>T</code>.\nCreates a layout by rounding the size of this layout up to …\nReturns the amount of padding we must insert after <code>self</code> to …\nReallocates memory with the global allocator.\nShrinks or grows a block of memory to the given <code>new_size</code> …\nCreates a layout describing the record for <code>n</code> instances of …\nCreates a layout describing the record for <code>n</code> instances of …\nRegisters a custom allocation error hook, replacing any …\nAttempts to shrink the memory block.\nThe minimum size in bytes for a memory block of this …\nUnregisters the current allocation error hook, returning …\nA trait to emulate dynamic typing.\nA <code>TypeId</code> represents a globally unique identifier for a …\nForwards to the method defined on the type <code>Any</code>.\nReturns some mutable reference to the inner value if it is …\nForwards to the method defined on the type <code>dyn Any</code>.\nForwards to the method defined on the type <code>dyn Any</code>.\nReturns a mutable reference to the inner value as type …\nForwards to the method defined on the type <code>Any</code>.\nForwards to the method defined on the type <code>Any</code>.\nReturns some reference to the inner value if it is of type …\nForwards to the method defined on the type <code>dyn Any</code>.\nForwards to the method defined on the type <code>dyn Any</code>.\nReturns a reference to the inner value as type <code>dyn T</code>.\nForwards to the method defined on the type <code>Any</code>.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nForwards to the method defined on the type <code>Any</code>.\nForwards to the method defined on the type <code>dyn Any</code>.\nReturns <code>true</code> if the inner type is the same as <code>T</code>.\nReturns the <code>TypeId</code> of the generic type parameter.\nGets the <code>TypeId</code> of <code>self</code>.\nReturns the name of a type as a string slice.\nReturns the type name of the pointed-to value as a string …\nAn error returned by <code>RefCell::try_borrow</code>.\nAn error returned by <code>RefCell::try_borrow_mut</code>.\nA mutable memory location.\nA value which is initialized on the first access.\nA cell which can nominally be written to only once.\nWraps a borrowed reference to a value in a <code>RefCell</code> box. A …\nA mutable memory location with dynamically checked borrow …\nA wrapper type for a mutably borrowed value from a …\n<code>UnsafeCell</code>, but <code>Sync</code>.\nThe core primitive for interior mutability in Rust.\nReturns a <code>&amp;[Cell&lt;T&gt;; N]</code> from a <code>&amp;Cell&lt;[T; N]&gt;</code>\nGet an exclusive reference to the value within the …\nReturns a raw pointer to the underlying data in this cell.\nReturns a raw pointer to the underlying data in this cell.\nGet a shared reference to the value within the <code>UnsafeCell</code>.\nReturns a <code>&amp;[Cell&lt;T&gt;]</code> from a <code>&amp;Cell&lt;[T]&gt;</code>\nImmutably borrows the wrapped value.\nMutably borrows the wrapped value.\nPanics\nCopies a <code>Ref</code>.\nPanics\nPanics\nCreates a new lazy value using <code>Default</code> as the initializing …\nCreates a <code>Cell&lt;T&gt;</code>, with the <code>Default</code> value for T.\nCreates a <code>RefCell&lt;T&gt;</code>, with the <code>Default</code> value for T.\nCreates an <code>UnsafeCell</code>, with the <code>Default</code> value for T.\nCreates an <code>SyncUnsafeCell</code>, with the <code>Default</code> value for T.\nPanics\nMakes a new <code>Ref</code> for an optional component of the borrowed …\nMakes a new <code>RefMut</code> for an optional component of the …\nForces the evaluation of this lazy value and returns a …\nForces the evaluation of this lazy value and returns a …\nReturns the argument unchanged.\nCreates a new <code>OnceCell&lt;T&gt;</code> which already contains the given …\nReturns the argument unchanged.\nCreates a new <code>Cell&lt;T&gt;</code> containing the given value.\nReturns the argument unchanged.\nCreates a new <code>RefCell&lt;T&gt;</code> containing the given value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>UnsafeCell&lt;T&gt;</code> containing the given value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>SyncUnsafeCell&lt;T&gt;</code> containing the given value.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nReturns a <code>&amp;Cell&lt;T&gt;</code> from a <code>&amp;mut T</code>\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nConverts from <code>&amp;mut T</code> to <code>&amp;mut UnsafeCell&lt;T&gt;</code>.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nPanics\nReturns a reference to the value if initialized, or <code>None</code> …\nGets the reference to the underlying value.\nReturns a copy of the contained value.\nGets a mutable pointer to the wrapped value.\nGets a mutable pointer to the wrapped value.\nReturns a mutable reference to the value if initialized, …\nGets the mutable reference to the underlying value.\nReturns a mutable reference to the underlying data.\nReturns a mutable reference to the underlying data.\nReturns a mutable reference to the underlying data.\nReturns a mutable reference to the underlying data.\nGets the mutable reference of the contents of the cell, …\nGets the mutable reference of the contents of the cell, …\nGets the contents of the cell, initializing it to <code>f()</code> if …\nGets the contents of the cell, initializing it to <code>f()</code> if …\nPanics\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this <code>LazyCell</code> returning the stored value.\nConsumes the cell, returning the wrapped value.\nUnwraps the value, consuming the cell.\nConsumes the <code>RefCell</code>, returning the wrapped value.\nUnwraps the value, consuming the cell.\nUnwraps the value, consuming the cell.\nPanics\nConverts into a reference to the underlying data.\nConverts into a mutable reference to the underlying data.\nPanics\nMakes a new <code>Ref</code> for a component of the borrowed data.\nMakes a new <code>RefMut</code> for a component of the borrowed data, …\nSplits a <code>Ref</code> into multiple <code>Ref</code>s for different components …\nSplits a <code>RefMut</code> into multiple <code>RefMut</code>s for different …\nCreates a new lazy value with the given initializing …\nCreates a new uninitialized cell.\nCreates a new <code>Cell</code> containing the given value.\nCreates a new <code>RefCell</code> containing <code>value</code>.\nConstructs a new instance of <code>UnsafeCell</code> which will wrap …\nConstructs a new instance of <code>SyncUnsafeCell</code> which will …\nPanics\nGets a mutable pointer to the wrapped value. The …\nGets a mutable pointer to the wrapped value.\nReplaces the contained value with <code>val</code>, and returns the old …\nReplaces the wrapped value with a new one, returning the …\nReplace the value in this <code>UnsafeCell</code> and return the old …\nReplaces the wrapped value with a new one computed from <code>f</code>, …\nInitializes the contents of the cell to <code>value</code>.\nSets the contained value.\nSwaps the values of two <code>Cell</code>s.\nSwaps the wrapped value of <code>self</code> with the wrapped value of …\nTakes the value out of this <code>OnceCell</code>, moving it back to an …\nTakes the value of the cell, leaving <code>Default::default()</code> in …\nTakes the wrapped value, leaving <code>Default::default()</code> in its …\nImmutably borrows the wrapped value, returning an error if …\nMutably borrows the wrapped value, returning an error if …\nImmutably borrows the wrapped value, returning an error if …\nInitializes the contents of the cell to <code>value</code> if the cell …\nUndo the effect of leaked guards on the borrow state of …\nUpdates the contained value using a function.\nA common trait that allows explicit creation of a …\nDerive macro generating an impl of the trait <code>Clone</code>.\nA generalization of <code>Clone</code> to dynamically-sized types …\nTrait for objects whose <code>Clone</code> impl is lightweight (e.g. …\nReturns a duplicate of the value.\nPerforms copy-assignment from <code>self</code> to <code>dest</code>.\nTrait for comparisons corresponding to equivalence …\nDerive macro generating an impl of the trait <code>Eq</code>.\nAn ordering where a compared value is equal to another.\nAn ordering where a compared value is greater than another.\nAn ordering where a compared value is less than another.\nTrait for types that form a total order.\nDerive macro generating an impl of the trait <code>Ord</code>. The …\nAn <code>Ordering</code> is the result of a comparison between two …\nTrait for comparisons using the equality operator.\nDerive macro generating an impl of the trait <code>PartialEq</code>. …\nTrait for types that form a partial order.\nDerive macro generating an impl of the trait <code>PartialOrd</code>. …\nA helper struct for reverse ordering.\nRestrict a value to a certain interval.\nThis method returns an <code>Ordering</code> between <code>self</code> and <code>other</code>.\nTests for <code>self</code> and <code>other</code> values to be equal, and is used …\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nTests greater than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests greater than (for <code>self</code> and <code>other</code>) and is used by the …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the ordering is the <code>Equal</code> variant.\nReturns <code>true</code> if the ordering is either the <code>Greater</code> or <code>Equal</code>…\nReturns <code>true</code> if the ordering is the <code>Greater</code> variant.\nReturns <code>true</code> if the ordering is either the <code>Less</code> or <code>Equal</code> …\nReturns <code>true</code> if the ordering is the <code>Less</code> variant.\nReturns <code>true</code> if the ordering is not the <code>Equal</code> variant.\nTests less than or equal to (for <code>self</code> and <code>other</code>) and is …\nTests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> …\nCompares and returns the maximum of two values.\nCompares and returns the maximum of two values.\nReturns the maximum of two values with respect to the …\nReturns the element that gives the maximum value from the …\nCompares and returns the minimum of two values.\nCompares and returns the minimum of two values.\nReturns the minimum of two values with respect to the …\nReturns the element that gives the minimum value from the …\nCompares and sorts two values, returning minimum and …\nReturns minimum and maximum values with respect to the …\nReturns minimum and maximum values with respect to the …\nThis method returns an ordering between <code>self</code> and <code>other</code> …\nReverses the <code>Ordering</code>.\nChains two orderings.\nChains the ordering with the given function.\nUsed to do a cheap mutable-to-mutable reference conversion.\nUsed to do a cheap reference-to-reference conversion.\nThe type returned in the event of a conversion error.\nThe type returned in the event of a conversion error.\nSupporting trait for inherent methods of <code>f32</code> and <code>f64</code> such …\nUsed to do value-to-value conversions while consuming the …\nThe error type for errors that can never happen.\nA value-to-value conversion that consumes the input value. …\nSimple and safe type conversions that may fail in a …\nAn attempted conversion that consumes <code>self</code>, which may or …\nConverts this type into a mutable reference of the …\nConverts this type into a shared reference of the (usually …\nConverts to this type from the input type.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nThe identity function.\nConverts this type into the (usually inferred) input type.\nCalls <code>U::from(self)</code>.\nPerforms the conversion.\nPerforms the conversion.\nA trait for giving a type a useful default value.\nDerive macro generating an impl of the trait <code>Default</code>.\nReturns the “default value” for a type.\nA trait for creating instances of <code>Hasher</code>.\nUsed to create a default <code>BuildHasher</code> instance for types …\nThe default <code>Hasher</code> used by <code>RandomState</code>.\nA hashable type.\nDerive macro generating an impl of the trait <code>Hash</code>.\nA trait for hashing an arbitrary stream of bytes.\nType of the hasher that will be created.\n<code>RandomState</code> is the default state for <code>HashMap</code> types.\nAn implementation of SipHash 2-4.\nCreates a new hasher.\nConstructs a new <code>RandomState</code>.\nCreates a new <code>DefaultHasher</code> using <code>new</code>. See its …\nReturns the hash value for the values written so far.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nFeeds this value into the given <code>Hasher</code>.\nCalculates the hash of a single value.\nFeeds a slice of this type into the given <code>Hasher</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a new <code>RandomState</code> that is initialized with …\nCreates a new <code>DefaultHasher</code>.\nCreates a new BuildHasherDefault for Hasher <code>H</code>.\nCreates a new <code>SipHasher</code> with the two initial keys set to 0.\nCreates a <code>SipHasher</code> that is keyed off the provided keys.\nWrites some data into this <code>Hasher</code>.\nWrites a single <code>i128</code> into this hasher.\nWrites a single <code>i16</code> into this hasher.\nWrites a single <code>i32</code> into this hasher.\nWrites a single <code>i64</code> into this hasher.\nWrites a single <code>i8</code> into this hasher.\nWrites a single <code>isize</code> into this hasher.\nWrites a length prefix into this hasher, as part of being …\nWrites a single <code>str</code> into this hasher.\nWrites a single <code>u128</code> into this hasher.\nWrites a single <code>u16</code> into this hasher.\nWrites a single <code>u32</code> into this hasher.\nWrites a single <code>u64</code> into this hasher.\nWrites a single <code>u8</code> into this hasher.\nWrites a single <code>usize</code> into this hasher.\nAn iterator over <code>N</code> elements of the iterator at a time.\nLike <code>Iterator::by_ref</code>, but requiring <code>Sized</code> so it can …\nAn iterator that links two iterators together, in a chain.\nAn iterator that clones the elements of an underlying …\nAn iterator that copies the elements of an underlying …\nAn iterator that repeats endlessly.\nAn iterator able to yield elements from both ends.\nAn iterator that yields nothing.\nAn iterator that yields the current count and the element …\nAn iterator that knows its exact length.\nExtend a collection with the contents of an iterator.\nAn iterator that filters the elements of <code>iter</code> with …\nAn iterator that uses <code>f</code> to both filter and map elements …\nAn iterator that maps each element to an iterator, and …\nAn iterator that flattens one level of nesting in an …\nAn iterator over the values yielded by an underlying …\nAn iterator where each iteration calls the provided …\nConversion from an <code>Iterator</code>.\nAn iterator that yields <code>None</code> forever after the underlying …\nAn iterator that always continues to yield <code>None</code> when …\nAn iterator that calls a function with a reference to each …\nAn iterator adapter that places a separator between all …\nAn iterator adapter that places a separator between all …\nWhich kind of iterator are we turning this into?\nConversion into an <code>Iterator</code>.\nThe type of the elements being iterated over.\nThe type of the elements being iterated over.\nA trait for dealing with iterators.\nAn iterator that maps the values of <code>iter</code> with <code>f</code>.\nAn iterator that only accepts elements while <code>predicate</code> …\nAn iterator over the mapped windows of another iterator.\nAn iterator that yields an element exactly once.\nAn iterator that yields a single element of type <code>A</code> by …\nAn iterator with a <code>peek()</code> that returns an optional …\nTrait to represent types that can be created by …\nAn iterator that repeats an element endlessly.\nAn iterator that repeats an element an exact number of …\nAn iterator that repeats elements of type <code>A</code> endlessly by …\nA double-ended iterator with the direction inverted.\nAn iterator to maintain state while iterating another …\nAn iterator that skips over <code>n</code> elements of <code>iter</code>.\nAn iterator that rejects elements while <code>predicate</code> returns …\nObjects that have a notion of <em>successor</em> and <em>predecessor</em> …\nAn iterator for stepping iterators by a custom amount.\nAn iterator which, starting from an initial item, computes …\nTrait to represent types that can be created by summing up …\nAn iterator that only iterates over the first <code>n</code> iterations …\nAn iterator that only accepts elements while <code>predicate</code> …\nAn iterator that reports an accurate length using …\nA type that upholds all invariants of <code>Step</code>.\nAn iterator that iterates two other iterators …\nAdvances the iterator from the back by <code>n</code> elements.\nAdvances the iterator by <code>n</code> elements.\nTests if every element of the iterator matches a predicate.\nTests if any element of the iterator matches a predicate.\nReturns an iterator over <code>N</code> elements of the iterator at a …\nReturns the value that would be obtained by taking the …\nReturns the value that would be obtained by taking the …\nReturns the value that would be obtained by taking the …\nCreates a “by reference” adapter for this instance of …\nConverts the arguments to iterators and links them …\nTakes two iterators and creates a new iterator over both …\nCreates an iterator which <code>clone</code>s all of its elements.\nLexicographically compares the elements of this <code>Iterator</code> …\nLexicographically compares the elements of this <code>Iterator</code> …\nTransforms an iterator into a collection.\nCollects all the items from an iterator into a collection.\nCreates an iterator which copies all of its elements.\nConsumes the iterator, counting the number of iterations …\nRepeats an iterator endlessly.\nCreates a <code>Flatten</code> iterator from the default value of <code>I</code>.\nCreates a <code>Chain</code> from the default values for <code>A</code> and <code>B</code>.\nCreates a <code>Cloned</code> iterator from the default value of <code>I</code>\nCreates a <code>Copied</code> iterator from the default value of <code>I</code>\nCreates an <code>Enumerate</code> iterator from the default value of <code>I</code>\nCreates a <code>Fuse</code> iterator from the default value of <code>I</code>.\nCreates a <code>Rev</code> iterator from the default value of <code>I</code>\nCreates an iterator that yields nothing.\nCreates an iterator which gives the current iteration …\nDetermines if the elements of this <code>Iterator</code> are equal to …\nDetermines if the elements of this <code>Iterator</code> are equal to …\nExtends a collection with the contents of an iterator.\nExtends a collection with exactly one element.\nReserves capacity in a collection for the given number of …\nCreates an iterator which uses a closure to determine if …\nCreates an iterator that both filters and maps.\nSearches for an element of an iterator that satisfies a …\nApplies function to the elements of iterator and returns …\nCreates an iterator that works like map, but flattens …\nCreates an iterator that flattens nested structure.\nFolds every element into an accumulator by applying an …\nCalls a closure on each element of an iterator.\nReturns the value that would be obtained by taking the …\nReturns the value that would be obtained by taking the …\nReturns the value that would be obtained by taking the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new iterator where each iteration calls the …\nCreates an iterator with the provided closure …\nCreates a value from an iterator.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreates an iterator which ends after the first <code>None</code>.\nDetermines if the elements of this <code>Iterator</code> are …\nDetermines if the elements of this <code>Iterator</code> are …\nDoes something with each element of an iterator, passing …\nCreates a new iterator which places a copy of <code>separator</code> …\nCreates a new iterator which places an item generated by …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates an iterator from a value.\nReturns an iterator over the remaining elements of the …\nReturns <code>true</code> if the iterator is empty.\nChecks if the elements of this iterator are partitioned …\nChecks if the elements of this iterator are sorted.\nChecks if the elements of this iterator are sorted using …\nChecks if the elements of this iterator are sorted using …\nCreates a new closure that returns an iterator where each …\nConsumes the iterator, returning the last element.\nDetermines if the elements of this <code>Iterator</code> are …\nReturns the exact remaining length of the iterator.\nDetermines if the elements of this <code>Iterator</code> are …\nTakes a closure and creates an iterator which calls that …\nCreates an iterator that both yields elements based on a …\nCalls the given function <code>f</code> for each contiguous window of …\nReturns the maximum element of an iterator.\nReturns the element that gives the maximum value with …\nReturns the element that gives the maximum value from the …\nReturns the minimum element of an iterator.\nReturns the element that gives the minimum value with …\nReturns the element that gives the minimum value from the …\nDetermines if the elements of this <code>Iterator</code> are not equal …\nAdvances the iterator and returns the next value.\nOverflow Behavior\nRemoves and returns an element from the end of the …\nAdvances the iterator and returns an array containing the …\nConsume and return the next value of this iterator if a …\nConsume and return the next item if it is equal to <code>expected</code>…\nRetrieve the current position of the iterator.\nReturns the <code>n</code>th element of the iterator.\nReturns the <code>n</code>th element from the end of the iterator.\nCreates an iterator that yields an element exactly once.\nCreates an iterator that lazily generates a value exactly …\nLexicographically compares the <code>PartialOrd</code> elements of this …\nLexicographically compares the elements of this <code>Iterator</code> …\nConsumes an iterator, creating two collections from it.\nReorders the elements of this iterator <em>in-place</em> according …\nReturns a reference to the next() value without advancing …\nReturns a mutable reference to the next() value without …\nCreates an iterator which can use the <code>peek</code> and <code>peek_mut</code> …\nSearches for an element in an iterator, returning its …\nTakes an iterator and generates <code>Self</code> from the elements by …\nIterates over the entire iterator, multiplying all the …\nReduces the elements to a single one, by repeatedly …\nCreates a new iterator that endlessly repeats a single …\nCreates a new iterator that repeats a single element a …\nCreates a new iterator that repeats elements of type <code>A</code> …\nReverses an iterator’s direction.\nSearches for an element of an iterator from the back that …\nAn iterator method that reduces the iterator’s elements …\nSearches for an element in an iterator from the right, …\nAn iterator adapter which, like <code>fold</code>, holds internal …\nReturns the bounds on the remaining length of the iterator.\nCreates an iterator that skips the first <code>n</code> elements.\nCreates an iterator that <code>skip</code>s elements based on a …\nCreates an iterator starting at the same point, but …\nReturns the bounds on the number of <em>successor</em> steps …\nCreates an iterator which, starting from an initial item, …\nTakes an iterator and generates <code>Self</code> from the elements by …\nSums the elements of an iterator.\nCreates an iterator that yields the first <code>n</code> elements, or …\nCreates an iterator that yields elements based on a …\nFallibly transforms an iterator into a collection, short …\nApplies function to the elements of iterator and returns …\nAn iterator method that applies a function as long as it …\nAn iterator method that applies a fallible function to …\nReduces the elements to a single one by repeatedly …\nThis is the reverse version of <code>Iterator::try_fold()</code>: it …\nConverts an iterator of pairs into a pair of containers.\nConverts the arguments to iterators and zips them.\n‘Zips up’ two iterators into a single iterator of …\nDerive macro that makes a smart pointer usable with trait …\nDerive macro generating an impl of the trait <code>ConstParamTy</code>.\nA marker for types which can be used as types of <code>const</code> …\nTypes whose values can be duplicated simply by copying …\nDerive macro generating an impl of the trait <code>Copy</code>.\nA marker for types that can be dropped.\nThe type of the discriminant, which must satisfy the trait …\nCompiler-internal trait used to indicate the type of enum …\nA common trait implemented by all function pointers.\nUsed to determine whether a type contains any <code>UnsafeCell</code> …\nZero-sized type used to mark a type parameter as …\nZero-sized type used to mark a lifetime as contravariant.\nZero-sized type used to mark a type parameter as covariant.\nZero-sized type used to mark a lifetime as covariant.\nZero-sized type used to mark things that “act like” …\nZero-sized type used to mark a type parameter as invariant.\nZero-sized type used to mark a lifetime as invariant.\nA marker type which does not implement <code>Unpin</code>.\nA marker for pointer-like types.\nTypes that can be transferred across thread boundaries.\nTypes with a constant size known at compile time.\nRequired trait for constants used in pattern matches.\nTypes for which it is safe to share references between …\nA marker for tuple types.\nTypes that do not require any pinning guarantees.\nTypes that can be “unsized” to a dynamically-sized …\nA marker for types which can be used as types of <code>const</code> …\nDerive macro generating an impl of the trait <code>ConstParamTy</code>.\nA marker trait for phantom variance types.\nReturns the address of the function pointer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a new instance of the variance marker.\nConstructs a new instance of the variance marker.\nConstructs a new instance of the variance marker.\nConstructs a new instance of the variance marker.\nConstructs a new instance of the variance marker.\nConstructs a new instance of the variance marker.\nConstruct a variance marker; equivalent to <code>Default::default</code>…\nWith this, <code>TransmuteFrom</code> assumes only that you have …\nConfigurable proof assumptions of <code>TransmuteFrom</code>.\nOpaque type representing the discriminant of an enum.\nWith this, <code>TransmuteFrom</code> assumes only that you have …\nA wrapper to inhibit the compiler from automatically …\nA wrapper type to construct uninitialized instances of <code>T</code>.\nWith this, <code>TransmuteFrom</code> does not assume you have ensured …\nWith this, <code>TransmuteFrom</code> assumes only that you have …\nMarks that <code>Src</code> is transmutable into <code>Self</code>.\nWith this, <code>TransmuteFrom</code> assumes only that you have …\nReturns the ABI-required minimum alignment of a type in …\nReturns the ABI-required minimum alignment of the type of …\nReturns the ABI-required minimum alignment of the type of …\nWhen <code>false</code>, <code>TransmuteFrom</code> is not implemented for …\nCombine the assumptions of <code>self</code> and <code>other_assumptions</code>.\nExtracts the values from an array of <code>MaybeUninit</code> …\nReturns the contents of this <code>MaybeUninit</code> as a slice of …\nReturns the contents of this <code>MaybeUninit</code> as a mutable …\nGets a mutable pointer to the contained value. Reading …\nGets a pointer to the contained value. Reading from this …\nExtracts the value from the <code>MaybeUninit&lt;T&gt;</code> container. This …\nDrops the contained value in place.\nGets a mutable (unique) reference to the contained value.\nReads the value from the <code>MaybeUninit&lt;T&gt;</code> container. The …\nGets a shared reference to the contained value.\nRemove <code>other_assumptions</code> the obligations of <code>self</code>; e.g.:\nDeprecated version of <code>slice::write_clone_of_slice</code>.\nBitwise-copies a value.\nDeprecated version of <code>slice::write_copy_of_slice</code>.\nReturns a value uniquely identifying the enum variant in <code>v</code>.\nDisposes of a value.\nManually drops the contained value.\nDeprecated version of <code>slice::write_filled</code>.\nDeprecated version of <code>slice::write_iter</code>.\nDeprecated version of <code>slice::write_with</code>.\nTakes ownership and “forgets” about the value <strong>without </strong>…\nLike <code>forget</code>, but also accepts unsized values.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nExtracts the value from the <code>ManuallyDrop</code> container.\nWhen <code>false</code>, <code>TransmuteFrom</code> is not implemented for …\nReturns the ABI-required minimum alignment of a type in …\nReturns the ABI-required minimum alignment of the type of …\nReturns <code>true</code> if dropping values of type <code>T</code> matters.\nWrap a value to be manually dropped.\nCreates a new <code>MaybeUninit&lt;T&gt;</code> initialized with the given …\nExpands to the offset in bytes of a field from the …\nMoves <code>src</code> into the referenced <code>dest</code>, returning the previous …\nWhen <code>false</code>, <code>TransmuteFrom</code> is not implemented for …\nReturns the size of a type in bytes.\nReturns the size of the pointed-to value in bytes.\nReturns the size of the pointed-to value in bytes.\nDeprecated version of <code>slice::as_bytes</code>.\nDeprecated version of <code>slice::as_bytes_mut</code>.\nGets a mutable pointer to the first element of the array.\nGets a pointer to the first element of the array.\nDeprecated version of <code>slice::assume_init_mut</code>.\nDeprecated version of <code>slice::assume_init_ref</code>.\nSwaps the values at two mutable locations, without …\nReplaces <code>dest</code> with the default value of <code>T</code>, returning the …\nTakes the value from the <code>ManuallyDrop&lt;T&gt;</code> container out.\nReinterprets the bits of a value of one type as another …\nTransmutes a <code>Src</code> value into a <code>Self</code>.\nInterprets <code>src</code> as having type <code>&amp;Dst</code>, and then reads <code>src</code> …\nTransposes a <code>MaybeUninit&lt;[T; N]&gt;</code> into a <code>[MaybeUninit&lt;T&gt;; N]</code>…\nCreates a new <code>MaybeUninit&lt;T&gt;</code> in an uninitialized state.\nBypasses Rust’s normal memory-initialization checks by …\nWhen <code>false</code>, <code>TransmuteFrom</code> is not implemented for …\nReturns the number of variants in the enum type <code>T</code>.\nSets the value of the <code>MaybeUninit&lt;T&gt;</code>.\nReturns the value of type <code>T</code> represented by the all-zero …\nCreates a new <code>MaybeUninit&lt;T&gt;</code> in an uninitialized state, …\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nThe size of this non-zero integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nReturns the size of this integer type in bits.\nValue being parsed is empty.\nA classification of floating point numbers.\nPositive or negative infinity, which often results from …\nEnum to store the various types of errors that can cause …\nContains an invalid digit in its context.\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nThe largest value that can be represented by this non-zero …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nReturns the largest value that can be represented by this …\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nThe smallest value that can be represented by this non-zero\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nReturns the smallest value that can be represented by this …\nNaN (not a number): this value results from calculations …\nInteger is too small to store in target integer type.\nA value that is known not to equal zero.\nAn <code>i128</code> that is known not to equal zero.\nAn <code>i16</code> that is known not to equal zero.\nAn <code>i32</code> that is known not to equal zero.\nAn <code>i64</code> that is known not to equal zero.\nAn <code>i8</code> that is known not to equal zero.\nAn <code>isize</code> that is known not to equal zero.\nA <code>u128</code> that is known not to equal zero.\nA <code>u16</code> that is known not to equal zero.\nA <code>u32</code> that is known not to equal zero.\nA <code>u64</code> that is known not to equal zero.\nA <code>u8</code> that is known not to equal zero.\nA <code>usize</code> that is known not to equal zero.\nA regular floating point number, not any of the …\nAn error which can be returned when parsing a float.\nAn error which can be returned when parsing an integer.\nInteger is too large to store in target integer type.\nProvides intentionally-saturating arithmetic on <code>T</code>.\n“Subnormal” or “denormal” floating point …\nThe error type returned when a checked integral type …\nProvides intentionally-wrapped arithmetic on <code>T</code>.\nValue was Zero\nPositive or negative zero.\nA marker trait for primitive types which can be zero.\nComputes the absolute value of self. See <code>i16::abs</code> for …\nComputes the absolute value of self. See <code>i8::abs</code> for …\nComputes the absolute value of self. See <code>i64::abs</code> for …\nComputes the absolute value of self. See <code>i32::abs</code> for …\nComputes the absolute value of self. See <code>i128::abs</code> for …\nComputes the absolute value of self. See <code>isize::abs</code> for …\nSaturating absolute value. Computes <code>self.abs()</code>, returning …\nSaturating absolute value. Computes <code>self.abs()</code>, returning …\nSaturating absolute value. Computes <code>self.abs()</code>, returning …\nSaturating absolute value. Computes <code>self.abs()</code>, returning …\nSaturating absolute value. Computes <code>self.abs()</code>, returning …\nSaturating absolute value. Computes <code>self.abs()</code>, returning …\nComputes the absolute value of <code>self</code>, wrapping around at …\nComputes the absolute value of <code>self</code>, wrapping around at …\nComputes the absolute value of <code>self</code>, wrapping around at …\nComputes the absolute value of <code>self</code>, wrapping around at …\nComputes the absolute value of <code>self</code>, wrapping around at …\nComputes the absolute value of <code>self</code>, wrapping around at …\nReturns the bit pattern of <code>self</code> reinterpreted as a signed …\nReturns the bit pattern of <code>self</code> reinterpreted as a signed …\nReturns the bit pattern of <code>self</code> reinterpreted as a signed …\nReturns the bit pattern of <code>self</code> reinterpreted as a signed …\nReturns the bit pattern of <code>self</code> reinterpreted as a signed …\nReturns the bit pattern of <code>self</code> reinterpreted as a signed …\nReturns the bit pattern of <code>self</code> reinterpreted as an …\nReturns the bit pattern of <code>self</code> reinterpreted as an …\nReturns the bit pattern of <code>self</code> reinterpreted as an …\nReturns the bit pattern of <code>self</code> reinterpreted as an …\nReturns the bit pattern of <code>self</code> reinterpreted as an …\nReturns the bit pattern of <code>self</code> reinterpreted as an …\nChecked absolute value. Checks for overflow and returns …\nChecked absolute value. Checks for overflow and returns …\nChecked absolute value. Checks for overflow and returns …\nChecked absolute value. Checks for overflow and returns …\nChecked absolute value. Checks for overflow and returns …\nChecked absolute value. Checks for overflow and returns …\nAdds an unsigned integer to a non-zero value. Checks for …\nAdds an unsigned integer to a non-zero value. Checks for …\nAdds an unsigned integer to a non-zero value. Checks for …\nAdds an unsigned integer to a non-zero value. Checks for …\nAdds an unsigned integer to a non-zero value. Checks for …\nAdds an unsigned integer to a non-zero value. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nMultiplies two non-zero integers together. Checks for …\nChecked negation. Computes <code>-self</code>, returning <code>None</code> if …\nChecked negation. Computes <code>-self</code>, returning <code>None</code> if …\nChecked negation. Computes <code>-self</code>, returning <code>None</code> if …\nChecked negation. Computes <code>-self</code>, returning <code>None</code> if …\nChecked negation. Computes <code>-self</code>, returning <code>None</code> if …\nChecked negation. Computes <code>-self</code>, returning <code>None</code> if …\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nRaises non-zero value to an integer power. Checks for …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of ones in the binary representation of …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nReturns the number of zeros in the binary representation …\nCalculates the quotient of <code>self</code> and <code>rhs</code>, rounding the …\nCalculates the quotient of <code>self</code> and <code>rhs</code>, rounding the …\nCalculates the quotient of <code>self</code> and <code>rhs</code>, rounding the …\nCalculates the quotient of <code>self</code> and <code>rhs</code>, rounding the …\nCalculates the quotient of <code>self</code> and <code>rhs</code>, rounding the …\nCalculates the quotient of <code>self</code> and <code>rhs</code>, rounding the …\nSCALE encode this type to bytes, possibly with the help of …\nConverts NonZero&lt;u8&gt; to NonZero&lt;u128&gt; losslessly.\nConverts NonZero&lt;u64&gt; to NonZero&lt;i128&gt; losslessly.\nConverts NonZero&lt;u16&gt; to NonZero&lt;u64&gt; losslessly.\nReturns the argument unchanged.\nConverts NonZero&lt;u8&gt; to NonZero&lt;i64&gt; losslessly.\nConverts NonZero&lt;i8&gt; to NonZero&lt;i16&gt; losslessly.\nConverts NonZero&lt;u8&gt; to NonZero&lt;i128&gt; losslessly.\nConverts NonZero&lt;u8&gt; to NonZero&lt;i32&gt; losslessly.\nConverts NonZero&lt;u8&gt; to NonZero&lt;i16&gt; losslessly.\nConverts NonZero&lt;u8&gt; to NonZero&lt;isize&gt; losslessly.\nConverts NonZero&lt;u16&gt; to NonZero&lt;i32&gt; losslessly.\nConverts NonZero&lt;i8&gt; to NonZero&lt;i32&gt; losslessly.\nConverts NonZero&lt;i8&gt; to NonZero&lt;i64&gt; losslessly.\nConverts NonZero&lt;i8&gt; to NonZero&lt;i128&gt; losslessly.\nConverts NonZero&lt;u16&gt; to NonZero&lt;i64&gt; losslessly.\nConverts NonZero&lt;i8&gt; to NonZero&lt;isize&gt; losslessly.\nConverts NonZero&lt;i16&gt; to NonZero&lt;i32&gt; losslessly.\nConverts NonZero&lt;i16&gt; to NonZero&lt;i64&gt; losslessly.\nConverts NonZero&lt;i16&gt; to NonZero&lt;i128&gt; losslessly.\nConverts NonZero&lt;u16&gt; to NonZero&lt;i128&gt; losslessly.\nConverts NonZero&lt;i16&gt; to NonZero&lt;isize&gt; losslessly.\nConverts NonZero&lt;u32&gt; to NonZero&lt;i64&gt; losslessly.\nConverts NonZero&lt;u32&gt; to NonZero&lt;u128&gt; losslessly.\nConverts NonZero&lt;u32&gt; to NonZero&lt;u64&gt; losslessly.\nConverts NonZero&lt;u16&gt; to NonZero&lt;usize&gt; losslessly.\nConverts NonZero&lt;u32&gt; to NonZero&lt;i128&gt; losslessly.\nConverts NonZero&lt;u16&gt; to NonZero&lt;u32&gt; losslessly.\nConverts NonZero&lt;i64&gt; to NonZero&lt;i128&gt; losslessly.\nConverts NonZero&lt;u8&gt; to NonZero&lt;u16&gt; losslessly.\nConverts NonZero&lt;u8&gt; to NonZero&lt;u32&gt; losslessly.\nConverts NonZero&lt;u8&gt; to NonZero&lt;u64&gt; losslessly.\nConverts NonZero&lt;u16&gt; to NonZero&lt;u128&gt; losslessly.\nConverts NonZero&lt;i32&gt; to NonZero&lt;i128&gt; losslessly.\nConverts NonZero&lt;i32&gt; to NonZero&lt;i64&gt; losslessly.\nConverts NonZero&lt;u8&gt; to NonZero&lt;usize&gt; losslessly.\nConverts NonZero&lt;u64&gt; to NonZero&lt;u128&gt; losslessly.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from big endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts an integer from little endian to the target’s …\nConverts a reference to a non-zero mutable reference if …\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nConverts a mutable reference to a non-zero mutable …\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the contained value as a primitive type.\nReturns the base 10 logarithm of the number, rounded down.\nReturns the base 10 logarithm of the number, rounded down.\nReturns the base 10 logarithm of the number, rounded down.\nReturns the base 10 logarithm of the number, rounded down.\nReturns the base 10 logarithm of the number, rounded down.\nReturns the base 10 logarithm of the number, rounded down.\nReturns the base 2 logarithm of the number, rounded down.\nReturns the base 2 logarithm of the number, rounded down.\nReturns the base 2 logarithm of the number, rounded down.\nReturns the base 2 logarithm of the number, rounded down.\nReturns the base 2 logarithm of the number, rounded down.\nReturns the base 2 logarithm of the number, rounded down.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is negative and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if <code>self</code> is positive and <code>false</code> if the number …\nReturns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>true</code> if and only if <code>self == 2^k</code> for some <code>k</code>.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the least significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns <code>self</code> with only the most significant bit set.\nReturns the square root of the number, rounded down.\nReturns the square root of the number, rounded down.\nReturns the square root of the number, rounded down.\nReturns the square root of the number, rounded down.\nReturns the square root of the number, rounded down.\nReturns the square root of the number, rounded down.\nOutputs the detailed cause of parsing an integer failing.\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nReturns the number of leading zeros in the binary …\nCalculates the midpoint (average) between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint (average) between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint (average) between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint (average) between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint (average) between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint (average) between <code>self</code> and <code>rhs</code>.\nCreates a non-zero if the given value is not zero.\nCreates a non-zero without checking whether the value is …\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nReturns the smallest power of two greater than or equal to …\nComputes the absolute value of self, with overflow …\nComputes the absolute value of self, with overflow …\nComputes the absolute value of self, with overflow …\nComputes the absolute value of self, with overflow …\nComputes the absolute value of self, with overflow …\nComputes the absolute value of self, with overflow …\nNegates self, overflowing if this is equal to the minimum …\nNegates self, overflowing if this is equal to the minimum …\nNegates self, overflowing if this is equal to the minimum …\nNegates self, overflowing if this is equal to the minimum …\nNegates self, overflowing if this is equal to the minimum …\nNegates self, overflowing if this is equal to the minimum …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nRaises self to the power of <code>exp</code>, using exponentiation by …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the order of bits in the integer. The least …\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.\nReverses the bit pattern of the integer.")