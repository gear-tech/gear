searchState.loadedDescShard("pallet_gear_gas", 0, "Gear Gas Pallet\nFixed-size uninterpreted hash type with 32 bytes (256 …\nExtracts a byte slice containing the entire fixed hash.\nExtracts a mutable byte slice containing the entire fixed …\nExtracts a reference to the byte array containing the …\nExtracts a reference to the byte array containing the …\nReturns a mutable raw pointer to the value.\nReturns a constant raw pointer to the value.\nAssign the bytes from the byte slice <code>src</code> to <code>self</code>.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nConstructs a hash type from the given reference to the …\nConstructs a hash type from the given bytes array of fixed …\nConstructs a hash type from the given reference to the …\nReturns the argument unchanged.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nCreates a new hash type from the given <code>u64</code> value.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCreate a new fixed-hash from the given slice <code>src</code>.\nCreates a hash type instance from the given string.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if no bits are set.\nReturns the size of this hash in bytes.\nThe <code>pallet</code> module in each FRAME pallet hosts the most …\nCreate a new hash with cryptographically random content.\nCreate a new hash with cryptographically random content …\nAssign <code>self</code> to a cryptographically random value.\nAssign <code>self</code> to a cryptographically random value using the …\nReturns a new fixed hash where all bits are set to the …\nReturns the inner bytes array.\nReturns the lowest 8 bytes interpreted as big-endian.\nReturns the lowest 8 bytes interpreted as little-endian.\nReturns the lowest 8 bytes interpreted as native-endian.\nReturns a new zero-initialized fixed hash.\nStorage type is <code>StorageValue</code> with value type <code>Balance</code>.\nThe maximum amount of gas that can be used within a single …\nContains a variant per dispatchable extrinsic that this …\nConfiguration trait of this pallet.\n<code>GasTree::consume</code> called on node, which has some balance …\n<code>GasTree::consume</code> called on node, which has some system …\nA node created by “cutting” value from some other tree …\nThe <code>Error</code> enum of this pallet.\nA root node for each gas tree.\nStorage type is <code>StorageMap</code> with key type <code>Key</code> and value …\nType alias to <code>Pallet</code>, to be used by <code>construct_runtime</code>.\nThe <code>Pallet</code> struct, the main type that implements traits …\nErrors stating that gas tree has been invalidated\nA node used for gas reservation feature.\nA node, which is a part of the tree structure, that can be …\nStorage type is <code>StorageValue</code> with value type <code>Balance</code>.\n<code>GasTree::create</code> called with some value amount leading to …\nEither <code>GasTree::consume</code> or <code>GasTree::spent</code> called on a node …\nOutput of <code>Tree::consume</code> procedure that wasn’t expected.\nNode type that can’t occur if algorithm work well\nPretty same as <code>SpecifiedLocal</code>, but doesn’t have internal …\nValue must have been caught or moved upstream, but was …\nValue must have been blocked, but was either moved or …\nValue must have been caught, but was missed or blocked …\nAuto-generated docs-only module listing all defined …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFinalization\nInitialization\nAuto-generated docs-only module listing all (public and …\nWarning: Doc-Only\nWarning: Doc-Only\nWarning: Doc-Only\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")