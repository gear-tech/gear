runs:
  using: composite
  steps:
    - uses: awalsh128/cache-apt-pkgs-action@latest
      if: ${{ runner.os == 'Linux' }}
      with:
        packages: mold

    - name: "Setup linker on Linux"
      if: ${{ runner.os == 'Linux' }}
      run: |
        targets=("X86_64_UNKNOWN_LINUX_GNU" "X86_64_UNKNOWN_LINUX_MUSL" "AARCH64_UNKNOWN_LINUX_GNU" "AARCH64_UNKNOWN_LINUX_MUSL")
        for target in "${targets[@]}"
        do
          echo "CFLAGS_${target}=-fuse-ld=mold" >> $GITHUB_ENV
          echo "CXXFLAGS_${target}=-fuse-ld=mold" >> $GITHUB_ENV
          echo "CARGO_TARGET_${target}_RUSTFLAGS=-Clink-arg=-fuse-ld=mold" >> $GITHUB_ENV
        done
      shell: bash
    - name: "Setup linker on Windows"
      if: ${{ runner.os == 'Windows' }}
      run: |
        Add-Content -Path $Env:GITHUB_ENV -Value "CC_X86_64_PC_WINDOWS_MSVC=C:/Program Files/LLVM/bin/clang-cl.exe"
        Add-Content -Path $Env:GITHUB_ENV -Value "CXX_X86_64_PC_WINDOWS_MSVC=C:/Program Files/LLVM/bin/clang-cl.exe"
        Add-Content -Path $Env:GITHUB_ENV -Value "CFLAGS_X86_64_PC_WINDOWS_MSVC=-fuse-ld=lld"
        Add-Content -Path $Env:GITHUB_ENV -Value "CXXFLAGS_X86_64_PC_WINDOWS_MSVC=-fuse-ld=lld /EHsc"
        Add-Content -Path $Env:GITHUB_ENV -Value "RUSTC_LINKER=rust-lld"
      shell: powershell
    - name: "Setup linker on macOS"
      if: ${{ runner.os == 'macOS' }}
      run: "exit 0" # macOS already has the fastest linker by default
      shell: bash
