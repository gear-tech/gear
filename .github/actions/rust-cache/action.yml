name: sccache

inputs:
  aws-access-key-id:
    required: true
    description: AWS Access Key ID
  aws-secret-access-key:
    required: true
    description: AWS Secret Access Key
  key:
    required: false
    description: Cache key
    default: "default_key"
  workspaces:
    required: false
    description: Workspaces to cache

runs:
  using: composite
  steps:
    - uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: 'us-west-2'
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}

    - uses: mozilla-actions/sccache-action@v0.0.9
    - run: |
        echo "SCCACHE_BUCKET=gear-ci" >> $GITHUB_ENV
        echo "SCCACHE_REGION=us-west-2" >> $GITHUB_ENV
        echo "SCCACHE_S3_KEY_PREFIX=sccache/" >> $GITHUB_ENV
        
        echo "CARGO_INCREMENTAL=0" >> $GITHUB_ENV
        echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
      shell: bash

    - name: "Prepare cache key"
      id: cache-key
      run: |
        echo ${{ github.workflow }} >> ${{ runner.temp }}/rust-cache-key.txt
        echo ${{ github.job }}   >> ${{ runner.temp }}/rust-cache-key.txt
        echo ${{ inputs.key }}   >> ${{ runner.temp }}/rust-cache-key.txt
        echo $(rustc --version)  >> ${{ runner.temp }}/rust-cache-key.txt
        echo $CARGO_BUILD_TARGET >> ${{ runner.temp }}/rust-cache-key.txt
        echo $CARGO_ENCODED_RUSTFLAGS >> ${{ runner.temp }}/rust-cache-key.txt
        echo $RUSTFLAGS          >> ${{ runner.temp }}/rust-cache-key.txt
        cat rust-toolchain.toml  >> ${{ runner.temp }}/rust-cache-key.txt || true
        cat .cargo/config.toml   >> ${{ runner.temp }}/rust-cache-key.txt || true
        echo "value=$(git hash-object ${{ runner.temp }}/rust-cache-key.txt)" >> $GITHUB_OUTPUT
      shell: bash

    - uses: runs-on/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: cargo-${{ steps.cache-key.outputs.value }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          cargo-${{ steps.cache-key.outputs.value }}-
      env:
        RUNS_ON_S3_BUCKET_CACHE: gear-ci
