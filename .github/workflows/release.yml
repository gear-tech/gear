name: Release

on:
  pull_request: # TODO: Remove after debug
  push:
    tags: ['*']

env:
  CARGO_TERM_COLOR: always

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - id: version
        #run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT # TODO: Uncomment!
        run: echo "VERSION=${GITHUB_REF/refs\/pull\//}" >> $GITHUB_OUTPUT # TODO: Remove after debug

      - name: Show version
        run: echo ${{ steps.version.outputs.VERSION }}

    outputs:
      version: ${{ steps.version.outputs.VERSION }}

  build:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: wasm32-unknown-unknown
          profile: minimal

      - name: "Install: Build deps"
        run: |
          sudo apt update -y
          sudo apt install -y git clang curl libssl-dev llvm libudev-dev cmake protobuf-compiler wget bzip2

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Build production binaries
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --profile production

      - name: Prepare artifacts
        run: |
          mkdir -p artifact
          cp target/production/wbuild/gear-runtime/gear_runtime.compact.compressed.wasm artifact/
          cp target/production/wbuild/gear-runtime/gear_runtime.compact.wasm artifact/
          cp target/production/wbuild/gear-runtime/gear_runtime.wasm artifact/
          cp target/production/wbuild/vara-runtime/vara_runtime.compact.compressed.wasm artifact/
          cp target/production/wbuild/vara-runtime/vara_runtime.compact.wasm artifact/
          cp target/production/wbuild/vara-runtime/vara_runtime.wasm artifact/
          cp target/production/gear artifact/
          strip artifact/gear || true

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: Gear/Vara ${{ steps.version.outputs.VERSION }}
          draft: true # TODO: Remove after debug
          files: artifact/*
