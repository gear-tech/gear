name: PR

on:
  pull_request:
    branches: [master, vara-stage-1, vara-stage-2, vara-stage-3]

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: short
  TERM: xterm-256color
  BINARYEN_VERSION: version_111

jobs:
  status:
    runs-on: ubuntu-latest
    outputs:
      build: ${{ steps.check-labels.outputs.build }}
      cache: ${{ steps.check-commit-message.outputs.cache }}
    steps:
      - name: Check labels
        id: check-labels
        run: |
          SYNCHRONIZE=${{ contains(github.event.pull_request.labels.*.name, 'A0-pleasereview') }} \
              || ${{ contains(github.event.pull_request.labels.*.name, 'A2-mergeoncegreen') }}

          BUILD=false
          if $SYNCHRONIZE; then
              BUILD=true
          fi

          echo "build: ${BUILD}"
          echo "build=${BUILD}" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Check Commit Message
        id: check-commit-message
        run: |
          MESSAGE=$(git show -s --format=%s)
          CACHE=true
          if [[ $MESSAGE == *"[skip-cache]"* ]]; then
            CACHE=false
          fi

          echo "cache: ${CACHE}"
          echo "cache=${CACHE}" >> $GITHUB_OUTPUT

  check:
    runs-on: [self-hosted, epyc-4, k8s-runner]
    env:
      RUSTUP_HOME: /tmp/rustup_home
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: "ACTIONS: Checkout"
        uses: actions/checkout@v3

      - name: "Install: Set cargo path"
        run: echo "/tmp/cargo/bin" >> $GITHUB_PATH

      - name: "Install: Rust toolchain"
        uses: dsherret/rust-toolchain-file@v1

      - name: "Install: Build deps"
        run: |
          sudo apt update
          sudo apt install -y git clang curl libssl-dev llvm libudev-dev cmake protobuf-compiler wget bzip2
          sudo wget -c https://github.com/WebAssembly/binaryen/releases/download/$BINARYEN_VERSION/binaryen-$BINARYEN_VERSION-x86_64-linux.tar.gz -O - | sudo tar -xz -C .
          sudo cp binaryen-$BINARYEN_VERSION/bin/wasm-opt /usr/bin/

      - name: "Cache: Unpack" # TODO: Pack cache
        continue-on-error: true
        run: |
          tar -xf /cache/check_cargo_registry_${{ github.base_ref }}.tar -C /

      - name: "Check formatting: Gear"
        run: ./scripts/gear.sh format gear --check

      - name: "Check formatting: Examples"
        run: ./scripts/gear.sh format examples --check

      - name: "Check formatting: Doc"
        run: ./scripts/gear.sh format doc --check

      - name: "Check clippy: Gear"
        run: ./scripts/gear.sh clippy gear --all-targets --all-features --locked

      - name: "Check clippy: Examples"
        run: ./scripts/gear.sh clippy examples

      - name: "Test: Doc tests"
        run: ./scripts/gear.sh test doc

      - name: "Test: Changes in gsdk generated code"
        run: |
          GENERATED_CODE="gsdk/src/metadata/generated.rs"
          ./scripts/update-gsdk-metadata.sh
          if [[ $(git diff --stat $GENERATED_CODE) != '' ]]; then
            echo "Changes found in the gsdk generated code ($GENERATED_CODE). Please update it following the instructions in \`gsdk/HOW-TO-UPDATE.md\`."
            git --no-pager diff $GENERATED_CODE
            exit 1
          fi

  check-fuzzer:
    runs-on: [self-hosted, epyc-4, k8s-runner]
    env:
      RUSTUP_HOME: /tmp/rustup_home
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: "ACTIONS: Checkout"
        uses: actions/checkout@v3

      - name: "Install: Set cargo path"
        run: echo "/tmp/cargo/bin" >> $GITHUB_PATH

      - name: "Install: Rust toolchain"
        uses: dsherret/rust-toolchain-file@v1

      - name: "Install: Build deps"
        run: |
          sudo apt update
          sudo apt install -y git clang curl libssl-dev llvm libudev-dev cmake protobuf-compiler wget bzip2
          sudo wget -c https://github.com/WebAssembly/binaryen/releases/download/$BINARYEN_VERSION/binaryen-$BINARYEN_VERSION-x86_64-linux.tar.gz -O - | sudo tar -xz -C .
          sudo cp binaryen-$BINARYEN_VERSION/bin/wasm-opt /usr/bin/

      - name: Install cargo-fuzz
        run: cargo install cargo-fuzz

      - name: "Check fuzzer with mutation test"
        run: ./scripts/check-fuzzer.sh


  build:
    needs: status
    uses: ./.github/workflows/build.yml
    if: needs.status.outputs.build
    with:
      cache: ${{ github.base_ref }}
