name: PR

on:
  pull_request:
    branches: [master, vara-stage-1, vara-stage-2, vara-stage-3]
    types: [opened, synchronize, labeled]

jobs:
  status:
    runs-on: ubuntu-latest
    outputs:
      build: ${{ steps.check-labels.outputs.build }}
      cache: ${{ steps.check-commit-message.outputs.cache }}
      matched-labels: ${{ steps.check-labels.outputs.matched-labels }}
    steps:
      - name: Check labels
        id: check-labels
        run: |
          CREATED=${{ contains(fromJSON('["A0-pleasereview", "A2-mergeoncegreen"]'), github.event.label.name ) }}

          SYNCHRONIZE=${{ contains(github.event.pull_request.labels.*.name, 'A0-pleasereview') }} \
              || ${{ contains(github.event.pull_request.labels.*.name, 'A2-mergeoncegreen') }}

          BUILD=false
          if $CREATED || $SYNCHRONIZE; then
              BUILD=true
          fi

          echo "synchronize: ${SYNCHRONIZE}"
          echo "build: ${BUILD}"
          echo "matched-labels: ${CREATED}"
          echo "build=${BUILD}" >> $GITHUB_OUTPUT
          echo "matched-labels=${CREATED}" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Check Commit Message
        id: check-commit-message
        run: |
          MESSAGE=$(git show -s --format=%s)
          CACHE=true
          if [[ $MESSAGE == *"[skip-cache]"* ]]; then
            CACHE=false
          fi

          echo "cache: ${CACHE}"
          echo "cache=${CACHE}" >> $GITHUB_OUTPUT

  dispatch-ci:
    needs: status
    runs-on: ubuntu-latest
    if: ${{ needs.status.outputs.matched-labels == 'true' || github.event.label.name == '' }}
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'CI.yaml',
              ref: ${{ github.ref_name }},
              inputs: {
                build: ${{ needs.status.outputs.build }},
                cache: ${{ needs.status.outputs.cache }}
              }
            })
