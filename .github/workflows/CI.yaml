name: CI

on:
  push:
    branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: short
  TERM: xterm-256color
  BINARYEN_VERSION: version_111

jobs:
  check:
    runs-on: [kuberunner, github-runner-01]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: recursive

      - name: "Install: Rust toolchain"
        uses: dsherret/rust-toolchain-file@v1

      - name: "Install: Foundry"
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: "Install: Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: "Show: Versioning"
        run: |
          ./scripts/gear.sh show
          forge --version

      - name: "Check: ethexe contracts"
        run: |
          cd ethexe/contracts
          forge fmt --check
          forge build --sizes
          forge test -vvv

      - name: "Check: workspace formatting"
        run: ./scripts/gear.sh format gear --check

      - name: "Check: ethexe clippy allowing unused code"
        run: cargo clippy -p "ethexe-*" --all-targets --locked -- --no-deps -D warnings

      - name: "Build: ethexe"
        run: cargo build --release -p ethexe-cli

      - name: "Test: ethexe CLI"
        run: cargo test --release -p ethexe-cli

      - name: "Test: ethexe Network"
        run: cargo test --release -p ethexe-network

      - name: "Test: ethexe Db"
        run: cargo test --release -p ethexe-db

      - name: "Test: ethexe Observer"
        run: cargo test --release -p ethexe-observer

      - name: "Test: ethexe processor"
        run: cargo test --release -p ethexe-processor
