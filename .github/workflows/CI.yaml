name: CI

on:
  schedule:
    - cron: "0 3 * * *"
  push:
    branches: [master, vara-stage-1, vara-stage-2, vara-stage-3]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: short
  TERM: xterm-256color
  BINARYEN_VERSION: version_111

jobs:
  # TODO: add to specific branches.
  # spec_version:
  #   runs-on: [kuberunner]
  #   steps:
  #     - name: "ACTIONS: Checkout"
  #       uses: actions/checkout@v4

  #     - name: "Fetch origin"
  #       run: git fetch origin

  #     - name: "Check spec version"
  #       if: ${{ ! contains(github.event.pull_request.labels.*.name, 'A4-insubstantial') }}
  #       run: ./scripts/check-spec.sh

  cache:
    runs-on: ubuntu-latest
    outputs:
      sccache_path: ${{ steps.sccache.outputs.sccache_path }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: "CACHE: Set sccache path"
        id: sccache
        run: |
          sccache_path="/mnt/sccache/$(echo ${GITHUB_REF#refs/heads/} | tr / _)"
          echo "sccache_path=$sccache_path" >> $GITHUB_OUTPUT

  check:
    needs: [cache]
    uses: ./.github/workflows/check.yml
    with:
      cache: ${{ needs.cache.outputs.sccache_path }}

  build:
    needs: [cache]
    uses: ./.github/workflows/build.yml
    with:
      cache: ${{ needs.cache.outputs.sccache_path }}
      macos: true
      win-native: true

  upload:
    if: github.event_name == 'push' && github.ref_name == 'master'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Delete previous release
        uses: dev-drprasad/delete-tag-and-release@v1.0.1
        with:
          delete_release: true
          tag_name: build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Sleep
        run: sleep 10

      - name: Upload
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          tag_name: build
          draft: false
          fail_on_unmatched_files: true
          files: artifact/*
