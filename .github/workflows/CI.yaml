name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always
  TERM: xterm-256color

jobs:
  check:
    runs-on: self-hosted
    steps:
      - name: "ACTIONS: Checkout"
        uses: actions/checkout@v2

      - name: "Install: Nightly toolchain"
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: clippy, rustfmt
          target: wasm32-unknown-unknown

      - name: "Check formatting: Gear"
        run: ./scripts/gear.sh format gear --check

      - name: "Check formatting: Examples"
        run: ./scripts/gear.sh format examples --check

      - name: "Check formatting: Doc"
        run: ./scripts/gear.sh format doc --check

      - name: "Check clippy: Gear"
        run: ./scripts/gear.sh clippy gear

      - name: "Check clippy: Examples"
        run: ./scripts/gear.sh clippy examples

      - name: "Check compile: Node benchmark"
        run: ./scripts/gear.sh check benchmark

  build:
    runs-on: self-hosted
    steps:
      - name: "ACTIONS: Checkout"
        uses: actions/checkout@v2

      - name: "Install: Nightly toolchain"
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: wasm32-unknown-unknown

      - name: "Install: Node.js"
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: "Show: Versioning"
        run: ./scripts/gear.sh show

      - name: "Install: Node.js packages"
        run: ./scripts/gear.sh init js

      - name: "ACTIONS: Artifact cache"
        uses: Swatinem/rust-cache@v1

      - name: "Build: Gear"
        run: ./scripts/gear.sh build gear --release --locked

      - name: "Build: Examples (WASM)"
        run: ./scripts/gear.sh build examples --locked

      - name: "Build: Split examples by .opt and .meta"
        run: ./scripts/gear.sh build examples-proc

      - name: "Test: Gear workspace"
        run: ./scripts/gear.sh test gear --release

      - name: "Test: Gear pallet" # Temporary feature to test sandbox backend
        run: ./scripts/gear.sh test pallet --release

      - name: "Test: JS metadata"
        run: ./scripts/gear.sh test js

      - name: "Test: Process node testsuite"
        run: ./scripts/gear.sh test ntest

  gtest:
    runs-on: self-hosted
    steps:
      - name: "ACTIONS: Checkout"
        uses: actions/checkout@v2

      - name: "Install: Nightly toolchain"
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: wasm32-unknown-unknown

      - name: "Install: Node.js"
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: "Show: Versioning"
        run: ./scripts/gear.sh show

      - name: "Install: Node.js packages"
        run: ./scripts/gear.sh init js

      - name: "ACTIONS: Artifact cache"
        uses: Swatinem/rust-cache@v1

      - name: "Build: Split examples by .opt and .meta"
        run: ./scripts/gear.sh build wasm-proc

      - name: "Build: Examples (WASM)"
        run: ./scripts/gear.sh build examples --locked

      - name: "Build: Split examples by .opt and .meta"
        run: ./scripts/gear.sh build examples-proc

      - name: "Test: Process gear-test"
        run: ./scripts/gear.sh test gtest -vv