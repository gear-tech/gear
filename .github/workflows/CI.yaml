name: CI

on:
  schedule:
    - cron: "0 3 * * *"
  push:
    branches: [master, vara-stage-1, vara-stage-2, vara-stage-3]

  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: short
  TERM: xterm-256color
  BINARYEN_VERSION: version_111

jobs:
  # TODO: add to specific branches.
  # spec_version:
  #   runs-on: [self-hosted, epyc]
  #   steps:
  #     - name: Cancel Previous Runs
  #       if: ${{ github.event_name == 'pull_request' }}
  #       uses: styfle/cancel-workflow-action@0.11.0
  #       with:
  #         access_token: ${{ github.token }}

  #     - name: "ACTIONS: Checkout"
  #       uses: actions/checkout@v3

  #     - name: "Fetch origin"
  #       run: git fetch origin

  #     - name: "Check spec version"
  #       if: ${{ ! contains(github.event.pull_request.labels.*.name, 'A4-insubstantial') }}
  #       run: ./scripts/check-spec.sh

  check:
    uses: ./.github/workflows/check.yml
    with:
      cache: ${{ github.ref_name }}

  build:
    uses: ./.github/workflows/build.yml
    with:
      cache: ${{ github.ref_name }}

  build-win-native:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: build
    runs-on: ci-win
    defaults:
      run:
        shell: msys2 {0}
    env:
      RUSTC_WRAPPER: "cachepot"
      CARGO_INCREMENTAL: 0
    steps:
      - name: Cancel Previous Runs
        if: ${{ github.event_name == 'pull_request' }}
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: "ACTIONS: Checkout"
        uses: actions/checkout@v3

      - name: "Install: Setup MSYS2 environment"
        uses: msys2/setup-msys2@v2
        with:
          path-type: inherit
          install: >-
            procps
            mingw-w64-x86_64-protobuf

      - name: "Install: Rust toolchain"
        uses: dsherret/rust-toolchain-file@v1

      - name: "Install: cargo-nextest"
        run: |
          $tmp = New-TemporaryFile | Rename-Item -NewName { $_ -replace 'tmp$', 'zip' } -PassThru
          Invoke-WebRequest -OutFile $tmp https://get.nexte.st/latest/windows
          $outputDir = if ($Env:CARGO_HOME) { Join-Path $Env:CARGO_HOME "bin" } else { "~/.cargo/bin" }
          $tmp | Expand-Archive -DestinationPath $outputDir -Force
          $tmp | Remove-Item
        shell: powershell

      - name: "Install: cargo-hack"
        run: |
          $tmp = New-TemporaryFile | Rename-Item -NewName { $_ -replace 'tmp$', 'tar.gz' } -PassThru
          Invoke-WebRequest -OutFile $tmp https://github.com/taiki-e/cargo-hack/releases/latest/download/cargo-hack-x86_64-pc-windows-msvc.tar.gz
          $outputDir = if ($Env:CARGO_HOME) { Join-Path $Env:CARGO_HOME "bin" } else { Resolve-Path "~/.cargo/bin" }
          tar zxf $tmp -C $outputDir
          $tmp | Remove-Item
        shell: powershell

      - name: "Install: binaryen"
        run: |
          $tmp = New-TemporaryFile | Rename-Item -NewName { $_ -replace 'tmp$', 'tar.gz' } -PassThru
          Invoke-WebRequest -OutFile $tmp "https://github.com/WebAssembly/binaryen/releases/download/$Env:BINARYEN_VERSION/binaryen-$Env:BINARYEN_VERSION-x86_64-windows.tar.gz"
          $outputDir = if ($Env:CARGO_HOME) { Join-Path $Env:CARGO_HOME "bin" } else { "~/.cargo/bin" }
          tar zxf $tmp
          cp "./binaryen-$Env:BINARYEN_VERSION/bin/*" $outputDir
          Remove-Item -Recurse "./binaryen-$Env:BINARYEN_VERSION"
          $tmp | Remove-Item
        shell: powershell

      - name: "Install: wabt"
        run: |
          $tmp = New-TemporaryFile | Rename-Item -NewName { $_ -replace 'tmp$', 'tar.gz' } -PassThru
          Invoke-WebRequest -OutFile $tmp https://github.com/WebAssembly/wabt/releases/download/1.0.29/wabt-1.0.29-windows.tar.gz
          $outputDir = if ($Env:CARGO_HOME) { Join-Path $Env:CARGO_HOME "bin" } else { "~/.cargo/bin" }
          tar zxf $tmp
          cp ./wabt-1.0.29/bin/* $outputDir
          Remove-Item -Recurse ./wabt-1.0.29
          $tmp | Remove-Item
        shell: powershell

      - name: "Install: Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: "Install: Node.js packages"
        run: ./scripts/gear.sh init js

      - name: "Build: Node"
        run: ./scripts/gear.sh build node --release --locked

      - name: "Build: WAT examples"
        run: ./scripts/gear.sh build wat-examples

      - name: "Build: wasm-proc"
        run: ./scripts/gear.sh build wasm-proc --locked

      - name: "Build: Examples (WASM)"
        run: ./scripts/gear.sh build examples --locked

      - name: "Build: Split examples by .opt and .meta"
        run: ./scripts/gear.sh build examples-proc

      - name: "Test: gsdk tests"
        run: ./scripts/gear.sh test gsdk

      - name: "Test: Client tests"
        run: ./scripts/gear.sh test client

      - name: "Test: Process node runtime spec tests"
        run: |
          cargo build -p gear-cli --release --features=runtime-test
          ./scripts/gear.sh test rtest gear

      - name: "Test: Lazy pages"
        run: >-
          cargo nextest run
          -p pallet-gear
          -p pallet-gear-debug
          -p pallet-gear-payment
          -p gear-lazy-pages
          -p gear-runtime-interface
          --features=lazy-pages
          --release

  build-macos-x86:
    if: ${{ always() && (github.ref == 'refs/heads/master' || contains(github.event.pull_request.labels.*.name, 'E2-forcemacos')) }}
    needs: build
    runs-on: macos-latest
    env:
      RUSTUP_HOME: /tmp/rustup_home
    steps:
      - name: Cancel Previous Runs
        if: ${{ github.event_name == 'pull_request' }}
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: "ACTIONS: Checkout"
        uses: actions/checkout@v3

      - name: "ACTIONS: Setup caching"
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: "Install: protobuf"
        run: brew install protobuf

      - name: "Install: Rust toolchain"
        uses: dsherret/rust-toolchain-file@v1

      - name: "Install: cargo-nextest"
        run: curl -LsSf https://get.nexte.st/latest/mac | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin

      - name: "Build: Node"
        run: >-
          cargo build
          -p gear-cli --features=lazy-pages

      - name: "Test: Lazy pages"
        run: >-
          cargo nextest run
          -p pallet-gear
          -p pallet-gear-debug
          -p pallet-gear-payment
          -p gear-lazy-pages
          -p gear-runtime-interface
          --features=lazy-pages

  upload:
    if: github.event_name == 'push' && github.ref_name == 'master'
    runs-on: self-hosted
    needs: build
    steps:
      - name: Cancel Previous Runs
        if: ${{ github.event_name == 'pull_request' }}
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Delete previous release
        uses: dev-drprasad/delete-tag-and-release@v1.0.1
        with:
          delete_release: true
          tag_name: build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Sleep
        run: sleep 10

      - name: Upload
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          tag_name: build
          draft: false
          fail_on_unmatched_files: true
          files: artifact/*
