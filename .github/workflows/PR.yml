name: PR

on:
  pull_request:
    branches: [master]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: short
  TERM: xterm-256color
  BINARYEN_VERSION: version_111

jobs:
  dynamic-profiles:
    runs-on: ubuntu-latest
    outputs:
      profiles: ${{ steps.set-matrix.outputs.profiles }}
    steps:
      - id: set-matrix
        run: |
          profiles='{"name": "debug", "flags": ""}'
          if [ "${{ inputs.release }}" = "true" ]; then
            profiles+=', {"name": "release", "flags": "--release"}'
          fi
          profiles="[${profiles}]"
          echo "Profiles: ${profiles}"
          echo "profiles=${profiles}" >> $GITHUB_OUTPUT

  check:
    runs-on: [kuberunner, github-runner-02]
    needs: dynamic-profiles
    strategy:
      matrix:
        profiles: ${{ fromJson(needs.dynamic-profiles.outputs.profiles) }}
      fail-fast: false
    name: check-linux (${{ matrix.profiles.name }})
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: "Install: Rust toolchain"
        uses: dsherret/rust-toolchain-file@v1
  
      - name: "Show: Versioning"
        run: ./scripts/gear.sh show

      - name: "Build: Hypercore"
        run: cargo build --release -p hypercore-cli

      - name: "Test: Hypercore CLI"
        run: cargo test --release -p hypercore-cli

      - name: "Test: Hypercore Network"
        run: cargo test --release -p hypercore-network

      - name: "Test: Hypercore Db"
        run: cargo test --release -p hypercore-db

      - name: "Test: Hypercore Observer"
        run: cargo test --release -p hypercore-observer

      - name: "Test: Hypercore processor"
        run: cargo test --release -p hypercore-processor

