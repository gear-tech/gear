name: PR

on:
  pull_request:
    branches: [master]
    types: [labeled, opened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dynamic-matrix:
    runs-on: ubuntu-latest
    outputs:
      profiles: ${{ steps.profiles.outputs.value }}
      targets: ${{ steps.targets.outputs.value }}
    steps:
      - id: profiles
        run: |
          profiles=$(jq -n '[{name: "debug", flags: ""}]')
          if [ ${{ contains(github.event.pull_request.labels.*.name, 'E3-forcerelease') }} ]; then
            profiles=$(echo "$profiles" | jq '. += [{name: "release", flags: "--release"}]')
          fi
          echo "Profiles: ${profiles}"
          echo "value=${profiles}" >> $GITHUB_OUTPUT
      - id: targets
        run: |
          targets=$(jq -n '[
            {
              name: "linux-x86_64",
              target: "x86_64-unknown-linux-gnu",
              "runs-on": ["kuberunner", "github-runner-02"]
            }
          ]')
          
          if [ ${{ contains(github.event.pull_request.labels.*.name, 'E2-forcemacos') }} ]; then
            targets=$(echo "$targets" | jq '. += [
              {
                name: "macos-aarch64",
                target: "aarch64-apple-darwin",
                "runs-on": "macos-latest"
              },
              {
                name: "macos-x86_64",
                target: "x86_64-apple-darwin",
                "runs-on": "macos-latest"
              }
            ]')
          fi
          
          if [ ${{ contains(github.event.pull_request.labels.*.name, 'E1-forcenatwin') }} ]; then
            targets=$(echo "$targets" | jq '. += [
              {
                name: "windows-x86_64",
                target: "x86_64-pc-windows-msvc",
                "runs-on": ["kuberunner", "github-runner-02"]
              }
            ]')
          fi
          
          echo "Targets: ${targets}"
          echo "value=${targets}" >> $GITHUB_OUTPUT

  node:
    needs: dynamic-matrix
    strategy:
      fail-fast: false
      matrix:
        targets: ${{ fromJson(needs.dynamic-matrix.outputs.targets) }}
    runs-on: ${{ matrix.targets.runs-on }}
    name: node (${{ matrix.targets.name }}) [${{ matrix.profiles.name }}]
    steps:
      - name: "ACTIONS: Checkout"
        uses: actions/checkout@v4

      - name: "Install: Setup linker"
        uses: ./.github/actions/setup-linker

      - name: "Install: Rust toolchain"
        uses: ./.github/actions/install-rust

      - name: "Install: cross-compile environment"
        # the only platforms where host == target
        if: ${{ matrix.targets.target != 'x86_64-unknown-linux-gnu' && matrix.targets.target != 'aarch64-apple-darwin' }}
        uses: ./.github/actions/setup-cross-compile
        with:
          target: ${{ matrix.targets.target }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "ACTIONS: Setup caching"
        uses: Swatinem/rust-cache@v2
        with:
          cache-provider: buildjet

      - name: "Build: Node"
        run: ./scripts/gear.sh build node --release --locked

      - name: "ACTIONS: Upload node"
        uses: actions/upload-artifact@v4
        with:
          name: node-release
          path: target/${{ matrix.targets.target }}/release/gear
          retention-days: 1
          overwrite: true

  # TODO: remove this placeholder
  status:
    runs-on: ubuntu-latest
    steps:
      - run: exit 0

  check:
    uses: ./.github/workflows/check.yml

  build:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'A0-pleasereview') ||
            contains(github.event.pull_request.labels.*.name, 'A2-mergeoncegreen') ||
            contains(github.event.pull_request.labels.*.name, 'A4-insubstantial') }}
    uses: ./.github/workflows/build.yml
    with:
      macos: ${{ contains(github.event.pull_request.labels.*.name, 'E2-forcemacos') }}
      windows: ${{ contains(github.event.pull_request.labels.*.name, 'E1-forcenatwin') }}
      release: ${{ contains(github.event.pull_request.labels.*.name, 'E3-forcerelease') }}
      production: ${{ contains(github.event.pull_request.labels.*.name, 'E4-forceproduction') }}

  validator:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'check-validator') }}
    uses: ./.github/workflows/validation.yml
    secrets:
      VARA_VALIDATOR_8: ${{ secrets.VARA_VALIDATOR_8 }}
      SSH_VARA_USERNAME: ${{ secrets.SSH_VARA_USERNAME }}
      VARA_SSH_PRIVATE_KEY: ${{ secrets.VARA_SSH_PRIVATE_KEY }}

  check-node-sync:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'check-node-sync') }}
    uses: ./.github/workflows/check-node-sync.yml
