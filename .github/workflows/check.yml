name: Check

on:
  workflow_call:
    inputs:
      cache:
        type: string
        required: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: short
  TERM: xterm-256color
  BINARYEN_VERSION: version_111

jobs:
  linux:
    runs-on: [kuberunner, github-runner-01]
    env:
      RUSTUP_HOME: /tmp/rustup_home
      SCCACHE_DIR: ${{ inputs.cache }}
    steps:
      - name: "ACTIONS: Checkout"
        uses: actions/checkout@v4

      - name: "Install: Set cargo path"
        run: echo "/tmp/cargo/bin" >> $GITHUB_PATH

      - name: "Install: Rust toolchain"
        uses: dsherret/rust-toolchain-file@v1

      - name: "Check formatting: Gear"
        run: ./scripts/gear.sh format gear --check

      - name: "Check formatting: Doc"
        run: ./scripts/gear.sh format doc --check

      - name: "Check clippy: Gear"
        run: ./scripts/gear.sh clippy gear --all-targets --all-features --locked

      - name: "Check clippy: Examples"
        run: ./scripts/gear.sh clippy examples --all-targets --locked

      - name: "Test: Doc tests"
        run: ./scripts/gear.sh test docs

      - name: "Test: Changes in gsdk generated code"
        run: |
          GENERATED_CODE="gsdk/src/metadata/generated.rs"
          ./scripts/update-gsdk-metadata.sh
          if [[ $(git diff --stat $GENERATED_CODE) != '' ]]; then
            echo "Changes found in the gsdk generated code ($GENERATED_CODE). Please update it following the instructions in \`gsdk/HOW-TO-UPDATE.md\`."
            git --no-pager diff $GENERATED_CODE
            exit 1
          fi

      - name: "Install: Rust stable toolchain"
        uses: dtolnay/rust-toolchain@stable

      - name: "Check: Compiling gstd on stable"
        run: cargo +stable check -p gstd

      - name: "Check: crates-io packages"
        run: cargo run --release -p crates-io check

  fuzzer:
    runs-on: [kuberunner, github-runner-01]
    env:
      RUSTUP_HOME: /tmp/rustup_home
      SCCACHE_DIR: ${{ inputs.cache }}
    steps:
      - name: Cancel Previous Runs
        if: ${{ github.event_name == 'pull_request' }}
        uses: styfle/cancel-workflow-action@0.12.0
        with:
          access_token: ${{ github.token }}

      - name: "ACTIONS: Checkout"
        uses: actions/checkout@v4

      - name: "MOUNT: Logs path"
        run: |
          FUZZER_LOGS_PATH=/mnt/fuzzer_logs
          sudo mkdir -p $FUZZER_LOGS_PATH
          sudo ln -s $FUZZER_LOGS_PATH/artifacts $PWD/utils/runtime-fuzzer/fuzz/artifacts
          sudo ln -s $FUZZER_LOGS_PATH/proptest-regressions $PWD/utils/runtime-fuzzer/proptest-regressions

      - name: "Install: Set cargo path"
        run: echo "/tmp/cargo/bin" >> $GITHUB_PATH

      - name: "Install: Rust toolchain"
        uses: dsherret/rust-toolchain-file@v1

      - name: "Install: cargo-nextest"
        run: curl -LsSf https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin

      - name: Install cargo-fuzz
        run: cargo install cargo-fuzz

      - name: "Run runtime-fuzzer crate tests"
        run: ./scripts/gear.sh test fuzzer-tests

      - name: "Check fuzzer competence with mutation test"
        run: ./scripts/check-fuzzer.sh
