name: node-CI

on:
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    if: contains(github.event.pull_request.labels.*.name, 'node')
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Check fmt
      run: |
        cargo fmt --package gear-node -- --check
        cargo fmt --package gear-node-rti -- --check
        cargo fmt --package gear-runtime -- --check
        cargo fmt --package pallet-gear -- --check

    - name: Run clippy
      run: |
        echo cargo clippy --package gear-node --all-features -- -D warnings # TODO: Fix
        echo cargo clippy --package gear-node-rti --all-features -- -D warnings # TODO: Fix
        echo cargo clippy --package gear-runtime --all-features -- -D warnings # TODO: Fix
        echo cargo clippy --package pallet-gear --all-features -- -D warnings # TODO: Fix

  build:
    if: contains(github.event.pull_request.labels.*.name, 'node')
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install toolchains
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        target: wasm32-unknown-unknown

    - name: Artifact cache
      uses: Swatinem/rust-cache@v1

    - name: Build
      run: |
        cargo build --release --package gear-node # TODO: --all-features

    - name: Run tests
      run: |
        cargo test --release --package gear-node # TODO: --all-features

    - name: Build examples (WASM)
      run: |
        ./scripts/build-wasm.sh
        cp -r ./examples/target/wasm32-unknown-unknown ./target/

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: "16"
    - run: cd rpc-tests && npm install

    - name: Run testsuite
      run: |
        cargo run --package gear-node --release -- runtests ./test/json/*.json

    - name: Run rpc-test
      run: |
        cargo run --package gear-node --release -- --dev & sleep 5
        node rpc-tests/index.js ./test/json/*.json
