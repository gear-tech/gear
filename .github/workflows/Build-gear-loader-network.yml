name: Build gear loader

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:

  build-gear-loader:
    runs-on: [self-hosted, sccache, epyc-4, k8s-runner]
    env:
      RUSTUP_HOME: /tmp/rustup_home
    steps:

      - name: "ACTIONS: Checkout"
        uses: actions/checkout@v3

      - name: "Install: Set cargo path"
        run: echo "/tmp/cargo/bin" >> $GITHUB_PATH

      - name: "Install: Nightly toolchain"
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: clippy, rustfmt
          target: wasm32-unknown-unknown
          
      - name: "Install: Show specific nightly version"
        if: ${{ env.NIGHTLY_TOOLCHAIN_VERSION != '' }}
        run: echo $NIGHTLY_TOOLCHAIN_VERSION | sed 's/-/ - /g'

      - name: "Install: Specific nightly toolchain"
        if: ${{ env.NIGHTLY_TOOLCHAIN_VERSION != '' }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-${{ env.NIGHTLY_TOOLCHAIN_VERSION }}
          target: wasm32-unknown-unknown
          components: llvm-tools-preview

      - name: "Install: Pin to specific nightly toolchain"
        if: ${{ env.NIGHTLY_TOOLCHAIN_VERSION != '' }}
        run: |
          rm -rf $RUSTUP_HOME/toolchains/nightly-x86_64-unknown-linux-gnu
          ln -s $RUSTUP_HOME/toolchains/nightly-$NIGHTLY_TOOLCHAIN_VERSION-x86_64-unknown-linux-gnu $RUSTUP_HOME/toolchains/nightly-x86_64-unknown-linux-gnu
          
      - name: "Install: Build deps"
        run: |
          sudo apt update
          sudo apt install -y git clang curl libssl-dev llvm libudev-dev cmake wabt protobuf-compiler wget bzip2
          sudo wget -c https://github.com/WebAssembly/binaryen/releases/download/version_111/binaryen-version_111-x86_64-linux.tar.gz -O - | sudo tar -xz -C .
          sudo cp binaryen-version_111/bin/wasm-opt /usr/bin/
          sudo wget -c https://github.com/mozilla/sccache/releases/download/v0.3.3/sccache-v0.3.3-x86_64-unknown-linux-musl.tar.gz -O - | sudo tar -xz -C .
          sudo cp sccache-v0.3.3-x86_64-unknown-linux-musl/sccache /usr/bin/
          sudo chmod +x /usr/bin/sccache
          mkdir -p ~/.config/sccache/ && cp /root/sccache/client.toml ~/.config/sccache/config
          
      - name: "Build gear-loader"
        run: |
          cargo build --locked --package gear-node-loader

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: gear-loader
          path: |
            target/debug/gear-node-loader


  update-gear-laoder:
    runs-on: ubuntu-latest
    needs: build-gear-loader
    steps:
    
      - name: "ACTIONS: Checkout"
        uses: actions/checkout@v3
        
      - name: Upload artificat  
        uses: actions/download-artifact@v3
        with:
          name: gear-loader
    
      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          directory: ./ansible/
          playbook: gear-loader-update.yaml
          key: ${{secrets.SSH_PRIVATE_KEY}}
          inventory: |
            [all]
            ${{secrets.GEAR_LOADER_NODE}}
