name: Build MacOS

on:
  workflow_call:
    inputs:
      matrix:
        type: string
        required: true
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: short
  TERM: xterm-256color
  BINARYEN_VERSION: version_111

jobs:
  x86:
    runs-on: macos-latest
    strategy:
      matrix: ${{ fromJson(inputs.matrix) }}
      fail-fast: false
    name: macos-x86 (${{ matrix.profile }})
    env:
      RUSTUP_HOME: /tmp/rustup_home
    steps:
      - name: "ACTIONS: Checkout"
        uses: actions/checkout@v4

      - name: "Install: protobuf"
        run: brew install protobuf

      - name: "Install: binaryen"
        run: |
          sudo wget -c https://github.com/WebAssembly/binaryen/releases/download/$BINARYEN_VERSION/binaryen-$BINARYEN_VERSION-x86_64-macos.tar.gz -O - | sudo tar -xz -C .
          sudo cp binaryen-$BINARYEN_VERSION/bin/* /usr/local/bin
          sudo cp binaryen-$BINARYEN_VERSION/lib/libbinaryen.dylib /usr/local/lib

      - name: "Install: Rust toolchain"
        uses: dsherret/rust-toolchain-file@v1

      - name: "ACTIONS: Setup caching"
        uses: Swatinem/rust-cache@v2
        with:
          key: "${{ matrix.profile }}"
          save-if: ${{ github.ref == 'refs/heads/master' }}

      - name: "Install: cargo-nextest"
        run: curl -LsSf https://get.nexte.st/latest/mac | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin

      - name: "Build: Node"
        # node is not actually used in the following test sequence
        # so we just check compilation
        if: ${{ matrix.profile == 'release' }}
        run: cargo build -p gear-cli --release --locked

      - name: "Check: Stack height limit"
        # no need to run check twice
        if: ${{ matrix.profile == 'release' }}
        run: cargo run -p calc-stack-height --release --locked

      - name: "Test: Lazy pages"
        run: >-
          cargo nextest run
          -p "pallet-*"
          -p gear-lazy-pages
          -p gear-runtime-interface
          ${{ matrix.profile_flags }}
