name: Build MacOS

on:
  workflow_call:
    inputs:
      profiles:
        type: string
        required: true

env:
  TERM: xterm-256color
  RUST_BACKTRACE: short
  RUST_LIB_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  CARGO_PROFILE_DEV_DEBUG: line-tables-only
  CARGO_PROFILE_TEST_DEBUG: line-tables-only
  CARGO_INCREMENTAL: 0
  NEXTEST_PROFILE: ci
  __GEAR_WASM_BUILDER_NO_FEATURES_TRACKING: 1

jobs:
  macos:
    strategy:
      matrix:
        profiles: ${{ fromJSON(inputs.profiles) }}
        arch:
          - name: aarch64
            target: aarch64-apple-darwin
          - name: x86
            target: x86_64-apple-darwin
      fail-fast: false
    runs-on: macos-latest
    name: macos-${{ matrix.arch.name }} (${{ matrix.profiles.name }})
    steps:
      - name: "ACTIONS: Checkout"
        uses: actions/checkout@v4

      - name: "ACTIONS: Download node"
        uses: actions/download-artifact@v4
        with:
          name: node-and-runtime-release-${{ matrix.arch.target }}
          path: target/release

      - name: "Install: Rust toolchain"
        uses: ./.github/actions/install-rust

      - name: "Install: Compilation environment"
        uses: ./.github/actions/setup-compilation-env
        with:
          target: "${{ matrix.arch.target }}"
          token: ${{ secrets.GITHUB_TOKEN }}
          no-vendored: 'false'

      - name: "ACTIONS: Setup caching"
        uses: ./.github/actions/sccache
        with:
          aws-access-key-id: "${{ secrets.GEAR_CI_S3_ACCESS_KEY_ID }}"
          aws-secret-access-key: "${{ secrets.GEAR_CI_S3_SECRET_ACCESS_KEY }}"

      - name: "Install: cargo-nextest"
        run: curl -LsSf https://get.nexte.st/latest/mac | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin

      - name: "Test: Lazy pages"
        run: >-
          cargo nextest run
          -p "pallet-*"
          -p gear-lazy-pages
          -p gear-runtime-interface
          ${{ matrix.profiles.flags }}
