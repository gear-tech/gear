name: CD

on:
  workflow_dispatch:
  push:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3.1.0
        with:
          file: ../../docker/Dockerfile
          push: true
          tags: ghcr.io/gear-tech/node:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Read secrets
        uses: hashicorp/vault-action@v2.4.1
        with:
          url: ${{ secrets.VAULT_URL }}
          tlsSkipVerify: true
          method: github
          githubToken: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            kv/ssh/keys nodes | SSH_KEY ;
            kv/infra/testnet-nodes GEAR_NODE_1 | GEAR_NODE_1 ;
            kv/infra/testnet-nodes GEAR_NODE_2 | GEAR_NODE_2 ;
            kv/infra/testnet-nodes GEAR_NODE_3 | GEAR_NODE_3 ;
            kv/infra/testnet-nodes GEAR_NODE_4 | GEAR_NODE_4 ;
            kv/infra/testnet-nodes RPC_NODE | RPC_NODE ;
            kv/infra/testnet-nodes ARCHIVE_NODE | ARCHIVE_NODE ;
            kv/infra/testnet-nodes ARCHIVE_RPC_NODE | ARCHIVE_RPC_NODE ;
            kv/infra/other LOKI_URL | LOKI_URL ;
            kv/telegram_bots/alerts chat_id | TG_CHAT ;
            kv/telegram_bots/alerts token | TG_TOKEN

      - name: Checkout
        uses: actions/checkout@v3.0.2

      - name: Send telegram notify before run playbook
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ env.TG_CHAT }}
          token: ${{ env.TG_TOKEN }}
          message: |
            Attention! Instances will be temporarily unavailable!
            ${{ github.actor }} run build with commit: "${{ github.event.commits[0].message }}"
            Build number: ${{ github.run_number }}

      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2.5.0
        with:
          directory: ./ansible/
          playbook: main.yaml
          key: ${{ env.SSH_KEY }}
          inventory: |
            [gearNodes:children]
            bootnode
            nodes
            [bootnode]
            ${{ env.GEAR_NODE_1 }}      name=testnet-gear01           loki=yes loki_url=${{ env.LOKI_URL }}
            [nodes]
            ${{ env.GEAR_NODE_2 }}      name=testnet-gear02           loki=yes loki_url=${{ env.LOKI_URL }} validator=yes
            ${{ env.GEAR_NODE_3 }}      name=testnet-gear03           loki=yes loki_url=${{ env.LOKI_URL }} validator=yes
            ${{ env.GEAR_NODE_4 }}      name=testnet-gear04           loki=yes loki_url=${{ env.LOKI_URL }} validator=yes
            ${{ env.ARCHIVE_NODE }}     name=testnet-archive-node     loki=yes loki_url=${{ env.LOKI_URL }} validator=yes       archive_node=yes
            ${{ env.ARCHIVE_RPC_NODE }} name=testnet-archive-rpc-node loki=yes loki_url=${{ env.LOKI_URL }} rpc=yes unsafe=no   archive_node=yes
            ${{ env.RPC_NODE }}         name=testnet-rpc-node         loki=yes loki_url=${{ env.LOKI_URL }} rpc=yes unsafe=yes
