name: Update production testnet

on:
  push:
    branches: [master]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
jobs:
  docker:
    runs-on: xeon
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ghcr.io/gear-tech/node:latest

  deploy-one-validator:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Info
        run: |
            ls -l .
            ls -l ../..
            pwd

      - name: Send telegram notify before run playbook
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHANNEL_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            Attention! Instances will be temporarily unavailable!
            ${{ github.actor }} run build with commit: "${{ github.event.commits[0].message }}"
            Build number: ${{ github.run_number }}

      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          # Required, playbook filepath
          directory: ./ansible/
          playbook: main.yaml
          # Optional, SSH private key
          key: ${{secrets.SSH_PRIVATE_KEY}}
          # Optional, literal inventory file contents
          inventory: |
            [gearNodes:children]
            nodes
            [nodes]
            ${{secrets.GEAR_NODE_2}} name=testnet-gear02 validator=yes loki=yes loki_url=${{secrets.LOKI_URL}}
            
  deploy-all-validators:
    runs-on: ubuntu-latest
    needs: [docker, deploy-one-validator]
    steps:
    
      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: sergeyfilyanin,kvs96
          minimum-approvals: 1
          
      - name: Update all validators in production
        run: echo deploying
        
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Info
        run: |
            ls -l .
            ls -l ../..
            pwd

      - name: Send telegram notify before run playbook
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHANNEL_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            Attention! Instances will be temporarily unavailable!
            ${{ github.actor }} run build with commit: "${{ github.event.commits[0].message }}"
            Build number: ${{ github.run_number }}

      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          # Required, playbook filepath
          directory: ./ansible/
          playbook: main.yaml
          # Optional, SSH private key
          key: ${{secrets.SSH_PRIVATE_KEY}}
          # Optional, literal inventory file contents
          inventory: |
            [gearNodes:children]
            bootnode
            nodes
            [bootnode]
            ${{secrets.GEAR_NODE}} name=testnet-gear01 loki=yes loki_url=${{secrets.LOKI_URL}}
            [nodes]
            ${{secrets.GEAR_NODE_3}} name=testnet-rpc-node rpc=yes unsafe=yes loki=yes loki_url=${{secrets.LOKI_URL}}
            ${{secrets.GEAR_NODE_4}} name=testnet-gear03 validator=yes loki=yes loki_url=${{secrets.LOKI_URL}}
            ${{secrets.GEAR_NODE_5}} name=testnet-gear04 validator=yes loki=yes loki_url=${{secrets.LOKI_URL}}
            ${{secrets.ARCHIVE_NODE}} name=testnet-archive-node validator=yes archive_node=yes loki=yes loki_url=${{secrets.LOKI_URL}}
            ${{secrets.ARCHIVE_RPC_NODE}} name=testnet-archive-rpc-node rpc=yes unsafe=no archive_node=yes loki=yes loki_url=${{secrets.LOKI_URL}}
