[workspace]
resolver = "2"

default-members = ["node/cli"]

members = [
    "common",
    "common/codegen",
    "core",
    "core-backend/common",
    "core-backend/sandbox",
    "core-backend/wasmi",
    "core-processor",
    "core-errors",
    "examples/binaries/async-custom-entry",
    "examples/binaries/async-signal-entry",
    "examples/binaries/async-tester",
    "examples/binaries/backend-error",
    "examples/binaries/btree",
    "examples/binaries/calc-hash",
    "examples/binaries/compose",
    "examples/binaries/contract-template",
    "examples/binaries/delayed-sender",
    "examples/binaries/distributor",
    "examples/binaries/exit-handle",
    "examples/binaries/exit-handle-sender",
    "examples/binaries/exit-init",
    "examples/binaries/gas-burned",
    "examples/binaries/gasless-wasting",
    "examples/binaries/init-fail-sender",
    "examples/binaries/init-wait",
    "examples/binaries/init-wait-reply-exit",
    "examples/binaries/init-with-value",
    "examples/binaries/meta",
    "examples/binaries/mul-by-const",
    "examples/binaries/ncompose",
    "examples/binaries/new-meta",
    "examples/binaries/node",
    "examples/binaries/program-factory",
    "examples/binaries/proxy",
    "examples/binaries/proxy-relay",
    "examples/binaries/proxy-with-gas",
    "examples/binaries/reserve-gas",
    "examples/binaries/send-from-reservation",
    "examples/binaries/signal-entry",
    "examples/binaries/sys-calls",
    "examples/binaries/syscall-error",
    "examples/binaries/unchecked-mul",
    "examples/binaries/value-sender",
    "examples/binaries/wait-timeout",
    "examples/binaries/wait_wake",
    "examples/binaries/waiter",
    "examples/binaries/waiting-proxy",
    "galloc",
    "gclient",
    "gcore",
    "gear-test",
    "gmeta",
    "gstd",
    "gsys",
    "gtest",
    "node/cli",
    "node/service",
    "node/authorship",
    "pallets/*",
    "program",
    "runtime/gear",
    "runtime/vara",
    "utils/gear-runtime-test-cli",
    "utils/regression-analysis",
    "utils/junit-common",
    "utils/wasm-proc",
    "utils/wasm-builder",
    "utils/wasm-info",
    "utils/economic-checks",
    "utils/economic-checks/fuzz",
    "utils/wasm-gen",
    "utils/wasm-instrument",
    "utils/node-loader/",
    "utils/test-runtime",
    "utils/test-runtime/client",
    "utils/validator-checks",
    "utils/call-gen",
    "utils/utils",
    "utils/bags-thresholds",
    "utils/integral-tests",
]

[profile.release]
panic = "unwind"

[profile.release.package.gcore]
opt-level = "s"

[profile.release.package.gstd]
opt-level = "s"

[profile.release.package.gear-test]
opt-level = "s"

[profile.release.package.galloc]
opt-level = "s"

[profile.release.package.gtest]
opt-level = "s"

[profile.production]
inherits = "release"

# Sacrifice compile speed for execution speed by using optimization flags:

# https://doc.rust-lang.org/rustc/linker-plugin-lto.html
lto = "fat"
# https://doc.rust-lang.org/rustc/codegen-options/index.html#codegen-units
codegen-units = 1

[patch.crates-io]
# Two dependencies below go for `subxt v0.25.0`
sp-core = { version = "7.0.0", git = "https://github.com/gear-tech/substrate.git", branch = "gear-polkadot-v0.9.36" }
sp-runtime = { version = "7.0.0", git = "https://github.com/gear-tech/substrate.git", branch = "gear-polkadot-v0.9.36" }
subxt = { git = "https://github.com/paritytech/subxt", rev = "d41f6574" }

# TODO: remove after bytecodealliance/wasmtime#5494 or Substrate update
wasmtime-runtime = { git = "https://github.com/gear-tech/wasmtime", rev = "b16cc8eaf40f95b3b1eec2869c08ccd61bdf65fe" }
wasmtime = { git = "https://github.com/gear-tech/wasmtime", rev = "b16cc8eaf40f95b3b1eec2869c08ccd61bdf65fe" }
